delimiter //
DROP FUNCTION IF EXISTS f_GetLastPurchase;
CREATE FUNCTION f_GetLastPurchase(kode VARCHAR(30))
RETURNS datetime
BEGIN
SET @tanggal='0000-00-00 00:00:00';

SELECT max_tanggal INTO @tanggal FROM(
SELECT kd_barang,MAX(tanggal) as max_tanggal FROM t_pembelian INNER JOIN t_pembelian_detail ON t_pembelian.no_transaksi= t_pembelian_detail.no_transaksi
WHERE kd_barang=kode
GROUP BY kd_barang) last_purchase;

RETURN @tanggal;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS f_GetLastSales;
CREATE FUNCTION f_GetLastSales(kode VARCHAR(30),divisi CHAR(6))
RETURNS datetime
BEGIN
SET @tanggal='0000-00-00 00:00:00';

SELECT max_tanggal INTO @tanggal FROM(
SELECT kd_barang,kd_divisi,MAX(tanggal) as max_tanggal FROM t_penjualan INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi= t_penjualan_detail.no_transaksi
WHERE kd_barang=kode AND kd_divisi=divisi
GROUP BY kd_barang,kd_divisi) last_sales;

RETURN @tanggal;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS getTotalPenjualanPerTransaksi2;
CREATE FUNCTION `getTotalPenjualanPerTransaksi2`(`no_transaksi_p` varchar(30)) RETURNS float
BEGIN
SET @total =0;
SELECT SUM(
GetHargaBersih(
GetHargaBersih(harga_jual,b.diskon1,b.diskon2,b.diskon3,b.diskon4,0,0),a.diskon1,a.diskon2,a.diskon3,a.diskon4,pajak,0
)*qty
) AS total INTO @total
FROM t_penjualan a INNER  JOIN t_penjualan_detail b ON a.no_transaksi=b.no_transaksi WHERE a.no_transaksi=no_transaksi_p
GROUP BY a.no_transaksi;

RETURN @total;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS f_harga_beli_akhir;
CREATE FUNCTION f_harga_beli_akhir(`kode_br` varchar(30),`kode_sa` VARCHAR(30))
RETURNS DECIMAL(10,0)
BEGIN
DECLARE hrg DECIMAL;
SELECT 
`GetHargaBersih` (
`GetHargaBersih` (
`dtl`.`harga_beli`,
`dtl`.`diskon1`,
`dtl`.`diskon2`,
`dtl`.`diskon3`,
`dtl`.`diskon4`,
0,
0
),
`bl`.`diskon1`,
`bl`.`diskon2`,
`bl`.`diskon3`,
`bl`.`diskon4`,
`bl`.`pajak`,
`bl`.`ppnbm`
)/mbs.jumlah AS harga_beli_bersih
INTO hrg
FROM t_pembelian_detail dtl
INNER JOIN t_pembelian bl
ON dtl.no_transaksi=bl.no_transaksi
INNER JOIN m_barang_satuan mbs
ON(mbs.kd_barang=dtl.kd_barang AND mbs.kd_satuan=dtl.kd_satuan)
WHERE dtl.kd_barang=kode_br AND dtl.kd_satuan=kode_sa
ORDER BY tanggal DESC LIMIT 1;

RETURN hrg;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS f_harga_jual_akhir;
CREATE FUNCTION f_harga_jual_akhir(`kode_br` varchar(30),`kode_sa` VARCHAR(30))
RETURNS DECIMAL(10,0)
BEGIN
DECLARE hrg DECIMAL;
SELECT 
`GetHargaBersih` (
`GetHargaBersih` (
`dtl`.`harga_jual`,
`dtl`.`diskon1`,
`dtl`.`diskon2`,
`dtl`.`diskon3`,
`dtl`.`diskon4`,
0,
0
),
`jual`.`diskon1`,
`jual`.`diskon2`,
`jual`.`diskon3`,
`jual`.`diskon4`,
0,
0
)
INTO hrg
FROM t_penjualan_detail dtl
INNER JOIN t_penjualan jual
ON dtl.no_transaksi=jual.no_transaksi
INNER JOIN m_barang_satuan mbs
ON mbs.kd_barang=dtl.kd_barang AND mbs.kd_satuan=mbs.kd_satuan
WHERE dtl.kd_barang=kode_br AND dtl.kd_satuan=kode_sa
ORDER BY tanggal DESC LIMIT 1;

RETURN hrg;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS getCountMutasi;
CREATE FUNCTION getCountMutasi(div_sumber CHAR(6),div_tujuan CHAR(6))
RETURNS int(11)
BEGIN

DECLARE cnt INT;

SELECT
count(*) AS cnt_predict
INTO cnt
FROM
v_spk_mutasi_barang_baru a
INNER JOIN (
SELECT
kd_barang,
stok 
FROM
g_stok_akhir
WHERE
kd_divisi = div_sumber
) c ON a.kd_barang = c.kd_barang
WHERE
a.kd_divisi = div_tujuan
AND c.stok <> 0
AND ROUND(a.avg_harian * 7) <> 0
AND ROUND(a.avg_harian * 7) <= c.stok
AND k_status = 1;
RETURN cnt;


END

//xyvdelimiter //
DROP FUNCTION IF EXISTS getDivisionId;
CREATE FUNCTION getDivisionId()
RETURNS char(1)
BEGIN
SET @divisi_id='ONLINE';
RETURN @divisi_id;
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS getFormatJam;
CREATE FUNCTION getFormatJam(tanggal DATETIME)
RETURNS VARCHAR(10)
BEGIN 
declare jam, menit, detik varchar(2);

set jam = CAST(EXTRACT(hour FROM tanggal) as CHAR(2));
set menit = CAST(EXTRACT(minute FROM tanggal) AS CHAR(2));
set detik = CAST(EXTRACT(second FROM tanggal) AS CHAR(2));
if (len(jam)=1) then  set jam = '0' + jam	; end IF;
if len(menit)=1 THEN set menit = '0' + menit	; end IF;
if len(detik)=1 then set detik = '0' + detik; end IF;
return (jam + ':' + menit + ':' + detik);
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS getFormatTanggal;
CREATE FUNCTION getFormatTanggal(tanggal DATETIME)
RETURNS DATE
BEGIN
DECLARE tgl VARCHAR(20);
set tgl = CONCAT(
CAST(EXTRACT(YEAR from tanggal) AS CHAR(4)) , '/' , 
CAST(EXTRACT(MONTH from tanggal) AS CHAR(2)) , '/' , 
CAST(EXTRACT(DAY FROM tanggal) AS CHAR(2))
);
RETURN tgl;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS GetHargaBersih;
CREATE FUNCTION GetHargaBersih(harga DOUBLE, diskon1 FLOAT, diskon2 FLOAT, diskon3 FLOAT,  diskon4 FLOAT, pajak1 FLOAT, pajak2 FLOAT)
RETURNS double
BEGIN 
DECLARE 
harga_bersih DOUBLE; 
DECLARE ppnbm FLOAT;

SET PPNBM=0;
SET harga_bersih = harga;
IF harga_bersih > 0 then
BEGIN
IF diskon1 >-1 AND diskon1 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon1);
ELSEIF diskon1 >= 1 OR diskon1 <= -1 THEN
SET harga_bersih = harga_bersih - diskon1;
end if;

IF diskon2 > -1 AND diskon2 < 1 then
SET harga_bersih = harga_bersih - (harga_bersih * diskon2);
ELSEIF diskon2 >=1 OR diskon2 <= -1 then
SET harga_bersih = harga_bersih - diskon2;
end if;

IF diskon3 > -1 AND diskon3 < 1 then
SET harga_bersih = harga_bersih - (harga_bersih * diskon3);
ELSEIF diskon3 >=1 OR diskon3 <= -1 then
SET harga_bersih = harga_bersih - diskon3;
end if;

IF diskon4 > -1 AND diskon4 < 1 then
SET harga_bersih = harga_bersih - (harga_bersih * diskon4);
ELSEIF diskon4 >=1 OR diskon4 <= -1 THEN
SET harga_bersih = harga_bersih - diskon4;
end if;

SET harga_bersih = harga_bersih + (harga_bersih * pajak1);

SET harga_bersih = harga_bersih + (harga_bersih * ppnbm);
END;
end if;

RETURN harga_bersih;
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS GetHargaBersihJasa;
CREATE FUNCTION GetHargaBersihJasa(harga DECIMAL, diskon1 FLOAT, diskon2 FLOAT, diskon3 FLOAT,  diskon4 FLOAT, pajak1 FLOAT, service FLOAT, other FLOAT)
RETURNS decimal(10,0)
BEGIN 
DECLARE 
harga_bersih DECIMAL;

SET harga_bersih = harga;
IF harga_bersih > 0 THEN
BEGIN

IF diskon1 >-1 AND diskon1 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon1);
ELSEIF diskon1 >= 1 OR diskon1 <= -1 THEN
SET harga_bersih = harga_bersih - diskon1;
END IF;

IF diskon2 > -1 AND diskon2 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon2);
ELSEIF diskon2 >=1 OR diskon2 <= -1 THEN
SET harga_bersih = harga_bersih - diskon2;
END IF;


IF diskon3 > -1 AND diskon3 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon3);
ELSEIF diskon3 >=1 OR diskon3 <= -1 THEN
SET harga_bersih = harga_bersih - diskon3;
END IF;

IF diskon4 > -1 AND diskon4 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon4);
ELSEIF diskon4 >=1 OR diskon4 <= -1 THEN
SET harga_bersih = harga_bersih - diskon4;
END IF;

SET harga_bersih = harga_bersih + (harga_bersih * pajak1);


SET harga_bersih = harga_bersih + (harga_bersih * service);

SET harga_bersih = harga_bersih + (harga_bersih * other);
END;
END IF;
RETURN harga_bersih;	
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS GetKuantitasSatuanTerkecil;
CREATE FUNCTION GetKuantitasSatuanTerkecil(inKd_barang1 VARCHAR(30), inKd_satuan1 char(6))
RETURNS float
BEGIN
DECLARE
jml FLOAT;
SELECT jumlah into jml FROM m_barang_satuan WHERE kd_barang = inKd_barang1 AND kd_satuan = inKd_satuan1;
RETURN jml;
END



//xyvdelimiter //
DROP FUNCTION IF EXISTS GetPenyusutanAset;
CREATE FUNCTION GetPenyusutanAset(kd_aset VARCHAR(6), tanggal_awal DATETIME, tanggal_akhir DATETIME)
RETURNS double
BEGIN
DECLARE tanggal_beli, tanggal_jual DATETIME;
DECLARE harga_beli, nilai_residu double;
DECLARE penyusutan FLOAT;

DECLARE total_penyusutan double;
DECLARE harga double;
DECLARE penyusutan_per_hari FLOAT;
DECLARE selisih_dgn_tanggal_awal INT;
DECLARE selisih_dgn_tanggal_akhir INT;

SELECT GetFormatTanggal(tanggal_beli), GetFormatTanggal(tanggal_jual), harga_beli, 
nilai_residu, penyusutan into tanggal_beli, tanggal_jual, harga_beli, nilai_residu, penyusutan
FROM m_aset
WHERE kd_aset = kd_aset;

SET total_penyusutan = 0;
SET harga = harga_beli - nilai_residu;
SET penyusutan_per_hari = (penyusutan / (365 * 100));

IF tanggal_akhir >= tanggal_beli then
BEGIN
IF tanggal_jual >= tanggal_beli  then
BEGIN
IF tanggal_akhir < tanggal_jual	then
SET tanggal_akhir = DATE_ADD(tanggal_jual, INTERVAL -1 DAY);
SET selisih_dgn_tanggal_awal =
(timestampdiff(DAY, tanggal_beli, 
(CASE WHEN GetFormatTanggal(tanggal_awal) < GetFormatTanggal(tanggal_beli) THEN tanggal_beli ELSE tanggal_awal END)));
SET selisih_dgn_tanggal_akhir = 
(timestampdiff(DAY, tanggal_beli, tanggal_akhir));
end if;

IF ((harga * penyusutan_per_hari) * (selisih_dgn_tanggal_awal + 1)) > harga then
SET total_penyusutan = 0;
ELSE
IF ((harga * penyusutan_per_hari) * (selisih_dgn_tanggal_akhir + 1)) > harga then
SET total_penyusutan = harga ;
ELSE
SET total_penyusutan = harga * penyusutan_per_hari * (selisih_dgn_tanggal_akhir - selisih_dgn_tanggal_awal + 1);
end if;
end if;
END;
ELSE
BEGIN
SET selisih_dgn_tanggal_awal =
(timestampdiff(DAY, tanggal_beli, 
(CASE WHEN GetFormatTanggal(tanggal_awal) < GetFormatTanggal(tanggal_beli) THEN tanggal_beli ELSE tanggal_awal END)));
SET selisih_dgn_tanggal_akhir = 
(timestampdiff(DAY, tanggal_beli, tanggal_akhir));

IF ((harga * penyusutan_per_hari) * (selisih_dgn_tanggal_awal + 1)) > harga then
SET total_penyusutan = harga;
ELSE
IF ((harga * penyusutan_per_hari) * (selisih_dgn_tanggal_akhir + 1)) > harga then
SET total_penyusutan = harga ;
ELSE
SET total_penyusutan = harga * penyusutan_per_hari * (selisih_dgn_tanggal_akhir - selisih_dgn_tanggal_awal + 1);
end if;
end if;
END;
end if;
END;
end if;

RETURN total_penyusutan;
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS GetTanggalTerakhirTutupBuku;
CREATE FUNCTION GetTanggalTerakhirTutupBuku()
RETURNS datetime
BEGIN
RETURN(SELECT IfNULL(MAX(tanggal), '2007/01/01 00:00:00') FROM g_tutup_buku);
END



//xyvdelimiter //
DROP FUNCTION IF EXISTS GetTotalPenjualanJasa;
CREATE FUNCTION GetTotalPenjualanJasa(no_transaksi VARCHAR(20))
RETURNS decimal(10,0)
BEGIN 
DECLARE total_jasa DECIMAL;

SELECT IFNULL(SUM(
GetHargaBersihJasa(GetHargaBersihJasa(d.harga, d.diskon,0, 0,0,0,0,0), j.diskon, 0,0,0,j.pajak,j.services, j.other)* d.qty
),0) -  v.nominal
INTO total_jasa
FROM t_penjualan_jasa j, t_penjualan_jasa_detail d, m_voucher v
WHERE d.no_transaksi = j.no_transaksi AND j.kd_voucher = v.kd_voucher AND j.no_transaksi = no_transaksi
GROUP BY v.nominal;
RETURN total_jasa;
END


//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIPenjualan;
CREATE PROCEDURE mon_GetFMIPenjualan(IN `inTGLAWAL` datetime,IN `inTGLAKHIR` datetime,IN `inDIVISI` varchar(20))
BEGIN
DECLARE varTotalPenjualan FLOAT(23,2);
DECLARE varKdBarang VARCHAR(100);
DECLARE varJumlah,varTotal,varSaldoTemp FLOAT;
DECLARE varNomorTemp BIGINT;
DECLARE varFMI,varSMI,selesai INT;

DECLARE cur_transaksi CURSOR FOR
SELECT rest.kdbarang, rest.qty, rest.total 
FROM rest;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET selesai = 1;

DROP TABLE IF EXISTS res;
DROP TABLE IF EXISTS rest;
CREATE TEMPORARY TABLE res(
awal DATE, 
akhir DATE, 
divisi VARCHAR(20), 
nomor BIGINT, 
kode VARCHAR(100), 
barang VARCHAR(100), 
divisibarang VARCHAR(100), 
departemen VARCHAR(100), 
kategori VARCHAR(100), 
subkategori VARCHAR(100),
qty FLOAT(23,2), 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT(1), 
SMI INT(1)
);
CREATE TEMPORARY TABLE rest(
awal DATETIME, 
akhir DATETIME, 
divisi VARCHAR(20), 
nomor BIGINT, 		
kdbarang VARCHAR(100), 		
qty FLOAT, 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT, 
SMI INT
);

INSERT INTO rest
SELECT   inTGLAWAL, inTGLAKHIR, inDIVISI,  0,
dtl.kd_barang, SUM(dtl.qty * bstn.jumlah) AS Jumlah, 
SUM(GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
jual.diskon3, jual.diskon4, jual.pajak, 0) * dtl.qty) AS total, 0, 0, 0
FROM         t_penjualan jual INNER JOIN
t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi INNER JOIN
m_barang brg ON dtl.kd_barang = brg.kd_barang INNER JOIN
m_divisi dv ON jual.kd_divisi = dv.kd_divisi INNER JOIN
m_barang_satuan bstn ON dtl.kd_barang = bstn.kd_barang AND dtl.kd_satuan = bstn.kd_satuan
WHERE dtl.jenis = 1 AND dv.kd_divisi = inDIVISI AND DATE(jual.tanggal) BETWEEN inTGLAWAL AND inTGLAKHIR
GROUP BY dtl.kd_barang
ORDER BY total DESC;

SET varTotalPenjualan=(SELECT SUM(rest.total)as Xtotal FROM rest);
SET varFMI=1;
SET varSMI=0;
SET varSaldoTemp=0;
SET varNomorTemp=0;

OPEN cur_transaksi;		
myloop: LOOP
FETCH cur_transaksi INTO varKdBarang,varJumlah,varTotal;
IF selesai THEN
LEAVE myloop;
END IF;
SET varNomorTemp = varNomorTemp + 1;
SET varSaldoTemp = varSaldoTemp + varTotal;

UPDATE rest SET rest.nomor=varNomorTemp, rest.saldo=varSaldoTemp,rest.FMI=varFMI,rest.SMI=varSMI WHERE rest.kdbarang=varKdBarang;
IF varSaldoTemp>(varTotalPenjualan*0.8) THEN
SET varFMI=0;
SET varSMI=1;
END IF;
END LOOP;
CLOSE cur_transaksi;
INSERT INTO res 
SELECT tm.awal, tm.akhir, tm.divisi, 
nomor, tm.kdbarang, br.nama, mr.nama, mdl.nama, kt.nama, wrn.nama,
qty, total, saldo, FMI, SMI 
FROM rest tm 
INNER JOIN m_barang br ON tm.kdbarang = br.kd_barang 
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mr ON br.kd_merk = mr.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
ORDER BY nomor;
SELECT * FROM res;
END
//xyvdelimiter //
DROP VIEW IF EXISTS v_g_barang_histori;
CREATE VIEW `v_g_barang_histori` AS select `bd`.`kd_barang` AS `kd_barang`,`bd`.`kd_divisi` AS `kd_divisi`,`bd`.`stok_awal` AS `Debet`,0 AS `Kredit`,`bs`.`kd_satuan` AS `kd_satuan` from (((`m_barang_divisi` `bd` join `m_barang_satuan` `bs`) join `m_barang` `b`) join `m_kategori` `k`) where `bd`.`kd_barang` = `bs`.`kd_barang` and `bs`.`jumlah` = 1 and `bd`.`kd_barang` = `b`.`kd_barang` and `b`.`kd_kategori` = `k`.`kd_kategori` and `k`.`status` <> 2 union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi_asal` AS `kd_divisi_asal`,0 AS `Debet`,sum(`d`.`qty`) AS `Kredit`,`d`.`kd_satuan` AS `kd_satuan` from (`t_mutasi_stok_detail` `d` join `t_mutasi_stok` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi_asal` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi_tujuan` AS `kd_divisi_tujuan`,sum(`d`.`qty`) AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (`t_mutasi_stok_detail` `d` join `t_mutasi_stok` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi_tujuan` union all select `t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`kd_divisi` AS `kd_divisi`,sum(`t_opname_stok`.`qty`) AS `DEBET`,0 AS `KREDIT`,`t_opname_stok`.`kd_satuan` AS `kd_satuan` from `t_opname_stok` where `t_opname_stok`.`status` = 2 and `t_opname_stok`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_opname_stok`.`kd_barang`,`t_opname_stok`.`kd_satuan`,`t_opname_stok`.`kd_divisi` union all select `t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`kd_divisi` AS `kd_divisi`,0 AS `DEBET`,sum(`t_opname_stok`.`qty`) AS `KREDIT`,`t_opname_stok`.`kd_satuan` AS `kd_satuan` from `t_opname_stok` where `t_opname_stok`.`status` <> 2 and `t_opname_stok`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_opname_stok`.`kd_barang`,`t_opname_stok`.`kd_satuan`,`t_opname_stok`.`kd_divisi` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi` AS `kd_divisi`,sum(`d`.`qty`) AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (`t_pembelian_detail` `d` join `t_pembelian` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi` AS `kd_divisi`,0 AS `DEBET`,sum(`d`.`qty`) AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (`t_pembelian_retur_detail` `d` join `t_pembelian_retur` `t`) where `d`.`no_retur` = `t`.`no_retur` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi` AS `kd_divisi`,0 AS `DEBET`,sum(`d`.`qty`) AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (((`t_penjualan_detail` `d` join `t_penjualan` `t`) join `m_barang` `b`) join `m_kategori` `k`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and `d`.`kd_barang` = `b`.`kd_barang` and `b`.`kd_kategori` = `k`.`kd_kategori` and `k`.`status` <> 2 group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi` AS `kd_divisi`,sum(`d`.`qty`) AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (`t_penjualan_retur_detail` `d` join `t_penjualan_retur` `t`) where `d`.`no_retur` = `t`.`no_retur` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_g_barang_histori_detail;
CREATE VIEW `v_g_barang_histori_detail` AS select `bd`.`kd_divisi` AS `kd_divisi`,`GetTanggalTerakhirTutupBuku`() AS `tanggal`,'0' AS `no_transaksi`,'Stok Awal' AS `Transaksi`,`bd`.`kd_barang` AS `kd_barang`,`bd`.`stok_awal` AS `Debet`,0 AS `Kredit`,`bs`.`kd_satuan` AS `kd_satuan`,`bd`.`harga_beli_awal` AS `harga`,'01/01/2007' AS `tanggal_server`,0 AS `jenis` from (((`m_barang_divisi` `bd` join `m_barang_satuan` `bs`) join `m_barang` `b`) join `m_kategori` `k`) where `bd`.`kd_barang` = `bs`.`kd_barang` and `bs`.`jumlah` = 1 and `bd`.`kd_barang` = `b`.`kd_barang` and `b`.`kd_kategori` = `k`.`kd_kategori` and `k`.`status` <> 2 union all select `t`.`kd_divisi_asal` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_transaksi` AS `Nomor`,'Mutasi Keluar' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,0 AS `Debet`,`d`.`qty` AS `Kredit`,`d`.`kd_satuan` AS `kd_satuan`,0 AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,1 AS `jenis` from (`t_mutasi_stok_detail` `d` join `t_mutasi_stok` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t`.`kd_divisi_tujuan` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_transaksi` AS `Nomor`,'Mutasi Masuk' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,`d`.`qty` AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,0 AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,2 AS `jenis` from (`t_mutasi_stok_detail` `d` join `t_mutasi_stok` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t_opname_stok`.`kd_divisi` AS `Kd Divisi`,`t_opname_stok`.`tanggal` AS `tanggal`,`t_opname_stok`.`no_transaksi` AS `Nomor`,'Opname Masuk' AS `Transaksi`,`t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`qty` AS `DEBET`,0 AS `KREDIT`,`t_opname_stok`.`kd_satuan` AS `kd_satuan`,0 AS `harga`,`t_opname_stok`.`tanggal_server` AS `tanggal_server`,3 AS `jenis` from `t_opname_stok` where `t_opname_stok`.`status` = 2 and `t_opname_stok`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t_opname_stok`.`kd_divisi` AS `Kd Divisi`,`t_opname_stok`.`tanggal` AS `tanggal`,`t_opname_stok`.`no_transaksi` AS `Nomor`,'Opname Keluar' AS `Transaksi`,`t_opname_stok`.`kd_barang` AS `kd_barang`,0 AS `DEBET`,`t_opname_stok`.`qty` AS `KREDIT`,`t_opname_stok`.`kd_satuan` AS `kd_satuan`,0 AS `harga`,`t_opname_stok`.`tanggal_server` AS `tanggal_server`,4 AS `jenis` from `t_opname_stok` where `t_opname_stok`.`status` <> 2 and `t_opname_stok`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t`.`kd_divisi` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_transaksi` AS `Nomor`,'Pembelian' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,`d`.`qty` AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,`d`.`harga_beli` AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,5 AS `jenis` from (`t_pembelian_detail` `d` join `t_pembelian` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and `t`.`status` in (0,1) union all select `t`.`kd_divisi` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_retur` AS `Nomor`,'Retur Pembelian' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,0 AS `DEBET`,`d`.`qty` AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,`d`.`harga` AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,6 AS `jenis` from (`t_pembelian_retur_detail` `d` join `t_pembelian_retur` `t`) where `d`.`no_retur` = `t`.`no_retur` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t`.`kd_divisi` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_transaksi` AS `Nomor`,'Penjualan' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,0 AS `DEBET`,`d`.`qty` AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,`d`.`harga_jual` AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,7 AS `jenis` from (((`t_penjualan_detail` `d` join `t_penjualan` `t`) join `m_barang` `b`) join `m_kategori` `k`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and `d`.`kd_barang` = `b`.`kd_barang` and `b`.`kd_kategori` = `k`.`kd_kategori` and `k`.`status` <> 2 union all select `t`.`kd_divisi` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_retur` AS `Nomor`,'Retur Penjualan Dengan Nota' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,`d`.`qty` AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,`d`.`harga_jual` AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,8 AS `jenis` from (`t_penjualan_retur_detail` `d` join `t_penjualan_retur` `t`) where `d`.`no_retur` = `t`.`no_retur` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`()
//xyvdelimiter //
DROP VIEW IF EXISTS v_g_kas_histori;
CREATE VIEW `v_g_kas_histori` AS select `m_kas`.`kd_kas` AS `kd_kas`,'SALDO AWAL' AS `transaksi`,`m_kas`.`saldo_awal` AS `debet`,0 AS `kredit` from `m_kas` union all select `t_biaya_operasional`.`kd_kas` AS `kd_kas`,'BIAYA OPERASIONAL' AS `transaksi`,0 AS `debet`,sum(`t_biaya_operasional`.`nominal`) AS `kredit` from `t_biaya_operasional` where `t_biaya_operasional`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_biaya_operasional`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_biaya_operasional`.`kd_kas` union all select `t_hutang_aset_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN HUTANG ASET' AS `transaksi`,0 AS `debet`,sum(`t_hutang_aset_cicilan`.`nominal`) AS `kredit` from `t_hutang_aset_cicilan` where `t_hutang_aset_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_aset_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_aset_cicilan`.`kd_kas` union all select `t_hutang_biaya_angkut_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN HUTANG BIAYA ANGKUT' AS `transaksi`,0 AS `debet`,sum(`t_hutang_biaya_angkut_cicilan`.`nominal`) AS `kredit` from `t_hutang_biaya_angkut_cicilan` where `t_hutang_biaya_angkut_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_biaya_angkut_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_biaya_angkut_cicilan`.`kd_kas` union all select `t_hutang_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN HUTANG PEMBELIAN' AS `transaksi`,0 AS `debet`,sum(`t_hutang_cicilan`.`nominal`) AS `kredit` from `t_hutang_cicilan` where `t_hutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_cicilan`.`kd_kas` union all select `t_hutang_pegawai_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN HUTANG PEGAWAI' AS `transaksi`,sum(`t_hutang_pegawai_cicilan`.`nominal`) AS `debet`,0 AS `kredit` from `t_hutang_pegawai_cicilan` where `t_hutang_pegawai_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_pegawai_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_pegawai_cicilan`.`kd_kas` union all select `t_hutang_pegawai`.`kd_kas` AS `kd_kas`,'HUTANG PEGAWAI' AS `transaksi`,0 AS `DEBET`,sum(`t_hutang_pegawai`.`nominal`) AS `kredit` from `t_hutang_pegawai` where `t_hutang_pegawai`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_pegawai`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_pegawai`.`kd_kas` union all select `t_mutasi_kas`.`kd_kas_sumber` AS `kd_kas_sumber`,'MUTASI KAS (PENGIRIM)' AS `transaksi`,0 AS `debet`,sum(`t_mutasi_kas`.`nominal`) AS `kredit` from `t_mutasi_kas` where `t_mutasi_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_mutasi_kas`.`kd_kas_sumber` union all select `t_mutasi_kas`.`kd_kas_tujuan` AS `kd_kas_tujuan`,'MUTASI KAS (PENERIMA)' AS `transaksi`,sum(`t_mutasi_kas`.`nominal`) AS `debet`,0 AS `kredit` from `t_mutasi_kas` where `t_mutasi_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_mutasi_kas`.`kd_kas_tujuan` union all select `b`.`kd_kas` AS `kd_kas`,'PEMBELIAN BARANG' AS `transaksi`,0 AS `debet`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga_beli`,`d`.`diskon1`,`d`.`diskon2`,`d`.`diskon3`,`d`.`diskon4`,0,0),`b`.`diskon1`,`b`.`diskon2`,`b`.`diskon3`,`b`.`diskon4`,`b`.`pajak`,`b`.`ppnbm`) * `d`.`qty`) AS `kredit` from (`t_pembelian` `b` join `t_pembelian_detail` `d`) where `d`.`no_transaksi` = `b`.`no_transaksi` and `b`.`status` = 1 and `b`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `b`.`kd_kas` union all select `ba`.`kd_kas` AS `kd_kas`,'BIAYA ANGKUT PEMBELIAN' AS `transaksi`,0 AS `debet`,sum(`ba`.`nominal`) AS `kredit` from (`t_pembelian_biaya_angkut` `ba` join `t_pembelian` `b`) where `ba`.`no_transaksi` = `b`.`no_transaksi` and `ba`.`status` = 1 and `b`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `ba`.`kd_kas` union all select `r`.`kd_kas` AS `kd_kas`,'RETUR PEMBELIAN' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`rd`.`harga`,`rd`.`diskon1`,`rd`.`diskon2`,`rd`.`diskon3`,`rd`.`diskon4`,0,0),`r`.`diskon1`,`r`.`diskon2`,`r`.`diskon3`,`r`.`diskon4`,`r`.`pajak`,`r`.`ppnbm`) * `rd`.`qty`) AS `debet`,0 AS `kredit` from (`t_pembelian_retur` `r` join `t_pembelian_retur_detail` `rd`) where `rd`.`no_retur` = `r`.`no_retur` and `r`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`r`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `r`.`kd_kas` union all select `t_pendapatan`.`kd_kas` AS `kd_kas`,'PENDAPATAN LAIN-LAIN' AS `transaksi`,sum(`t_pendapatan`.`nominal`) AS `debet`,0 AS `kredit` from `t_pendapatan` where `t_pendapatan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_pendapatan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_pendapatan`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PENJUALAN BARANG' AS `transaksi`,sum(`d`.`total`) AS `Debet`,0 AS `kredit` from (`t_penjualan` `t` join `t_penjualan_total` `d`) where `t`.`no_transaksi` = `d`.`no_transaksi` and `t`.`status` = 1 and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `r`.`kd_kas` AS `kd_kas`,'RETUR PENJUALAN' AS `transaksi`,0 AS `debet`,sum(`GetHargaBersih`(`GetHargaBersih`(`rd`.`harga_jual`,`rd`.`diskon1`,`rd`.`diskon2`,`rd`.`diskon3`,`rd`.`diskon4`,0,0),`r`.`diskon1`,`r`.`diskon2`,`r`.`diskon3`,`r`.`diskon4`,`r`.`pajak`,0) * `rd`.`qty`) AS `kredit` from (`t_penjualan_retur` `r` join `t_penjualan_retur_detail` `rd`) where `rd`.`no_retur` = `r`.`no_retur` and `r`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`r`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `r`.`kd_kas` union all select `t_piutang_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN PIUTANG' AS `transaksi`,sum(`t_piutang_cicilan`.`nominal`) AS `debet`,0 AS `kredit` from `t_piutang_cicilan` where `t_piutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_piutang_cicilan`.`kd_kas` union all select `t_piutang_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN PIUTANG' AS `transaksi`,sum(`t_piutang_cicilan`.`nominal` * `t_piutang_cicilan`.`other`) AS `debet`,0 AS `kredit` from `t_piutang_cicilan` where `t_piutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_piutang_cicilan`.`kd_kas` union all select `t_surat_berharga`.`kd_kas_setor` AS `kd_kas_setor`,'SURAT BERHARGA (KELUAR)' AS `transaksi`,0 AS `debet`,sum(`t_surat_berharga`.`nominal`) AS `kredit` from `t_surat_berharga` where `t_surat_berharga`.`tanggal_cair` > `GetTanggalTerakhirTutupBuku`() and `GetFormatTanggal`(`t_surat_berharga`.`tanggal_cair`) >= `GetFormatTanggal`(`t_surat_berharga`.`tanggal_setor`) and `t_surat_berharga`.`status_blong` = 0 and `t_surat_berharga`.`status_asal` = 0 group by `t_surat_berharga`.`kd_kas_setor` union all select `t_surat_berharga`.`kd_kas_setor` AS `kd_kas_setor`,'SURAT BERHARGA (MASUK)' AS `transaksi`,sum(`t_surat_berharga`.`nominal`) AS `debet`,0 AS `kredit` from `t_surat_berharga` where `t_surat_berharga`.`tanggal_cair` > `GetTanggalTerakhirTutupBuku`() and `GetFormatTanggal`(`t_surat_berharga`.`tanggal_cair`) >= `GetFormatTanggal`(`t_surat_berharga`.`tanggal_setor`) and `t_surat_berharga`.`status_blong` = 0 and `t_surat_berharga`.`status_asal` = 1 group by `t_surat_berharga`.`kd_kas_setor` union all select `t_penambahan_kas`.`kd_kas` AS `kd_kas`,'PENAMBAHAN MODAL' AS `Transaksi`,sum(`t_penambahan_kas`.`nominal`) AS `debet`,0 AS `kredit` from `t_penambahan_kas` where `t_penambahan_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_penambahan_kas`.`kd_kas` union all select `t_prive`.`kd_kas` AS `kd_kas`,'PRIVE' AS `Transaksi`,0 AS `debet`,sum(`t_prive`.`nominal`) AS `kredit` from `t_prive` where `t_prive`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_prive`.`kd_kas` union all select `m_aset`.`kd_kas` AS `kd_kas`,'PENJUALAN ASET' AS `PENJUALAN ASET`,sum(`m_aset`.`harga_beli` - `GetPenyusutanAset`(`m_aset`.`kd_aset`,`m_aset`.`tanggal_beli`,`m_aset`.`tanggal_jual`)) AS `debet`,0 AS `kredit` from `m_aset` where `GetFormatTanggal`(`m_aset`.`tanggal_jual`) >= `GetFormatTanggal`(`m_aset`.`tanggal_beli`) and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and !(`m_aset`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `m_aset`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PENJUALAN JASA' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty`) AS `debet`,0 AS `kredit` from (((`t_penjualan_jasa` `t` join `t_penjualan_jasa_detail` `d`) join `m_jasa` `m`) join `m_jasa_kategori` `k`) where `d`.`kd_jasa` = `m`.`kd_jasa` and `m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori` and `d`.`no_transaksi` = `t`.`no_transaksi` and `k`.`status` = 2 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PENDAPATAN KARTU KREDIT PENJUALAN JASA' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty` * `t`.`other`) AS `debet`,0 AS `kredit` from (((`t_penjualan_jasa` `t` join `t_penjualan_jasa_detail` `d`) join `m_jasa` `m`) join `m_jasa_kategori` `k`) where `d`.`kd_jasa` = `m`.`kd_jasa` and `m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori` and `d`.`no_transaksi` = `t`.`no_transaksi` and `k`.`status` = 2 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PERSEWAAN' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty`) AS `debet`,0 AS `kredit` from (((`t_penjualan_jasa` `t` join `t_penjualan_jasa_detail` `d`) join `m_jasa` `m`) join `m_jasa_kategori` `k`) where `d`.`kd_jasa` = `m`.`kd_jasa` and `m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori` and `d`.`no_transaksi` = `t`.`no_transaksi` and `k`.`status` = 1 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PENDAPATAN KARTU KREDIT PERSEWAAN' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty` * `t`.`other`) AS `debet`,0 AS `kredit` from (((`t_penjualan_jasa` `t` join `t_penjualan_jasa_detail` `d`) join `m_jasa` `m`) join `m_jasa_kategori` `k`) where `d`.`kd_jasa` = `m`.`kd_jasa` and `m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori` and `d`.`no_transaksi` = `t`.`no_transaksi` and `k`.`status` = 1 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `t_piutang_jasa_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN PIUTANG JASA' AS `transaksi`,sum(`t_piutang_jasa_cicilan`.`nominal`) AS `debet`,0 AS `kredit` from `t_piutang_jasa_cicilan` where `t_piutang_jasa_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_jasa_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_piutang_jasa_cicilan`.`kd_kas`
//xyvdelimiter //
DROP VIEW IF EXISTS v_g_kas_histori_detail;
CREATE VIEW `v_g_kas_histori_detail` AS select `m_kas`.`kd_kas` AS `kd_kas`,`GetTanggalTerakhirTutupBuku`() AS `tanggal`,'SALDO AWAL' AS `transaksi`,'-' AS `no_transaksi`,'-' AS `Objek`,`m_kas`.`saldo_awal` AS `debet`,0 AS `kredit`,'' AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,(select min(`m_userx`.`kd_user`) from `m_userx` where `m_userx`.`status` <> 0) AS `Kode User`,(select `m_userx`.`nama` from `m_userx` where `m_userx`.`kd_user` in (select min(`m_userx`.`kd_user`) from `m_userx` where `m_userx`.`status` <> 0)) AS `User` from `m_kas` union all select `t_biaya_operasional`.`kd_kas` AS `kd_kas`,`t_biaya_operasional`.`tanggal` AS `tanggal`,'BIAYA OPERASIONAL' AS `transaksi`,`t_biaya_operasional`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_biaya_operasional`.`nominal` AS `kredit`,`t_biaya_operasional`.`keterangan` AS `keterangan`,`t_biaya_operasional`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_biaya_operasional`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((`t_biaya_operasional` join `m_divisi` on(`t_biaya_operasional`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_biaya_operasional`.`kd_user` = `m_userx`.`kd_user`)) where `t_biaya_operasional`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_biaya_operasional`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_aset_cicilan`.`kd_kas` AS `kd_kas`,`t_hutang_aset_cicilan`.`tanggal` AS `tanggal`,'CICILAN HUTANG ASET' AS `transaksi`,cast(`t_hutang_aset_cicilan`.`no_cicilan` as char(20) charset utf8) AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_hutang_aset_cicilan`.`nominal` AS `kredit`,`t_hutang_aset_cicilan`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_hutang_aset_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_hutang_aset_cicilan` join `m_userx` on(`t_hutang_aset_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_aset_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_aset_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_biaya_angkut_cicilan`.`kd_kas` AS `kd_kas`,`t_hutang_biaya_angkut_cicilan`.`tanggal` AS `tanggal`,'CICILAN HUTANG BIAYA ANGKUT' AS `transaksi`,`t_hutang_biaya_angkut_cicilan`.`no_cicilan` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_hutang_biaya_angkut_cicilan`.`nominal` AS `kredit`,`t_hutang_biaya_angkut_cicilan`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_hutang_biaya_angkut_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_hutang_biaya_angkut_cicilan` join `m_userx` on(`t_hutang_biaya_angkut_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_biaya_angkut_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_biaya_angkut_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_cicilan`.`kd_kas` AS `kd_kas`,`t_hutang_cicilan`.`tanggal` AS `tanggal`,'CICILAN HUTANG PEMBELIAN' AS `transaksi`,`t_hutang_cicilan`.`no_cicilan` AS `no_cicilan`,`m_supplier`.`nama` AS `Objek`,0 AS `debet`,`t_hutang_cicilan`.`nominal` AS `kredit`,`t_hutang_cicilan`.`keterangan` AS `keterangan`,`t_pembelian`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_hutang_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_hutang_cicilan` join `t_pembelian` on(`t_hutang_cicilan`.`no_transaksi` = `t_pembelian`.`no_transaksi`)) join `m_supplier` on(`t_pembelian`.`kd_supplier` = `m_supplier`.`kd_supplier`)) join `m_divisi` on(`t_pembelian`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_hutang_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_pegawai_cicilan`.`kd_kas` AS `kd_kas`,`t_hutang_pegawai_cicilan`.`tanggal` AS `tanggal`,'CICILAN HUTANG PEGAWAI' AS `transaksi`,cast(`t_hutang_pegawai_cicilan`.`no_cicilan` as char(20) charset utf8) AS `no_transaksi`,'-' AS `Objek`,`t_hutang_pegawai_cicilan`.`nominal` AS `debet`,0 AS `kredit`,`t_hutang_pegawai_cicilan`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_hutang_pegawai_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_hutang_pegawai_cicilan` join `m_userx` on(`t_hutang_pegawai_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_pegawai_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_pegawai_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_pegawai`.`kd_kas` AS `kd_kas`,`t_hutang_pegawai`.`tanggal` AS `tanggal`,'HUTANG PEGAWAI' AS `transaksi`,`t_hutang_pegawai`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_hutang_pegawai`.`nominal` AS `kredit`,`t_hutang_pegawai`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_hutang_pegawai`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_hutang_pegawai` join `m_userx` on(`t_hutang_pegawai`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_pegawai`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_pegawai`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_mutasi_kas`.`kd_kas_sumber` AS `kd_kas_sumber`,`t_mutasi_kas`.`tanggal` AS `tanggal`,'MUTASI KAS (KELUAR)' AS `transaksi`,`t_mutasi_kas`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_mutasi_kas`.`nominal` AS `kredit`,`t_mutasi_kas`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_mutasi_kas`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_mutasi_kas` join `m_userx` on(`t_mutasi_kas`.`kd_user` = `m_userx`.`kd_user`)) where `t_mutasi_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t_mutasi_kas`.`kd_kas_tujuan` AS `kd_kas_tujuan`,`t_mutasi_kas`.`tanggal` AS `tanggal`,'MUTASI KAS (MASUK)' AS `transaksi`,`t_mutasi_kas`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,`t_mutasi_kas`.`nominal` AS `debet`,0 AS `kredit`,`t_mutasi_kas`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_mutasi_kas`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_mutasi_kas` join `m_userx` on(`t_mutasi_kas`.`kd_user` = `m_userx`.`kd_user`)) where `t_mutasi_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `b`.`kd_kas` AS `kd_kas`,`b`.`tanggal` AS `tanggal`,'PEMBELIAN BARANG' AS `transaksi`,`b`.`no_transaksi` AS `no_transaksi`,`m_supplier`.`nama` AS `Objek`,0 AS `debet`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga_beli`,`d`.`diskon1`,`d`.`diskon2`,`d`.`diskon3`,`d`.`diskon4`,0,0),`b`.`diskon1`,`b`.`diskon2`,`b`.`diskon3`,`b`.`diskon4`,`b`.`pajak`,`b`.`ppnbm`) * `d`.`qty`) AS `kredit`,`b`.`keterangan` AS `keterangan`,`b`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`b`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_pembelian` `b` join `t_pembelian_detail` `d` on(`b`.`no_transaksi` = `d`.`no_transaksi`)) join `m_supplier` on(`b`.`kd_supplier` = `m_supplier`.`kd_supplier`)) join `m_divisi` on(`b`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`b`.`kd_user` = `m_userx`.`kd_user`)) where `b`.`status` = 1 and `b`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `b`.`kd_kas`,`b`.`tanggal`,`b`.`no_transaksi`,`b`.`keterangan`,`m_supplier`.`nama`,`b`.`kd_divisi`,`m_divisi`.`nama`,`b`.`kd_user`,`m_userx`.`nama` union all select `ba`.`kd_kas` AS `kd_kas`,`b`.`tanggal` AS `tanggal`,'BIAYA ANGKUT PEMBELIAN' AS `transaksi`,`ba`.`no_nota` AS `no_nota`,'-' AS `Objek`,0 AS `debet`,`ba`.`nominal` AS `kredit`,`b`.`keterangan` AS `keterangan`,`b`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`b`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from (((`t_pembelian_biaya_angkut` `ba` join `t_pembelian` `b` on(`ba`.`no_transaksi` = `b`.`no_transaksi`)) join `m_divisi` on(`b`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`b`.`kd_user` = `m_userx`.`kd_user`)) where `b`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and `ba`.`status` = 1 union all select `r`.`kd_kas` AS `kd_kas`,`r`.`tanggal` AS `tanggal`,'RETUR PEMBELIAN' AS `transaksi`,`r`.`no_retur` AS `no_transaksi`,`m_supplier`.`nama` AS `Objek`,sum(`GetHargaBersih`(`GetHargaBersih`(`rd`.`harga`,`rd`.`diskon1`,`rd`.`diskon2`,`rd`.`diskon3`,`rd`.`diskon4`,0,0),`r`.`diskon1`,`r`.`diskon2`,`r`.`diskon3`,`r`.`diskon4`,`r`.`pajak`,`r`.`ppnbm`) * `rd`.`qty`) AS `debet`,0 AS `kredit`,`r`.`keterangan` AS `keterangan`,`r`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`r`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_pembelian_retur` `r` join `t_pembelian_retur_detail` `rd` on(`r`.`no_retur` = `rd`.`no_retur`)) join `m_supplier` on(`r`.`kd_supplier` = `m_supplier`.`kd_supplier`)) join `m_divisi` on(`r`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`r`.`kd_user` = `m_userx`.`kd_user`)) where `r`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`r`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `r`.`kd_kas`,`r`.`tanggal`,`r`.`no_retur`,`r`.`keterangan`,`m_supplier`.`nama`,`r`.`kd_divisi`,`m_divisi`.`nama`,`r`.`kd_user`,`m_userx`.`nama` union all select `t_pendapatan`.`kd_kas` AS `kd_kas`,`t_pendapatan`.`tanggal` AS `tanggal`,'PENDAPATAN LAIN-LAIN' AS `transaksi`,`t_pendapatan`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,`t_pendapatan`.`nominal` AS `debet`,0 AS `kredit`,`t_pendapatan`.`keterangan` AS `keterangan`,`t_pendapatan`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_pendapatan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((`t_pendapatan` join `m_divisi` on(`t_pendapatan`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_pendapatan`.`kd_user` = `m_userx`.`kd_user`)) where `t_pendapatan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_pendapatan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t`.`kd_kas` AS `kd_kas`,`t`.`tanggal` AS `tanggal`,'PENJUALAN BARANG' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`d`.`total` AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_penjualan` `t` join `t_penjualan_total` `d` on(`t`.`no_transaksi` = `d`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `t`.`status` = 1 and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `r`.`kd_kas` AS `kd_kas`,`r`.`tanggal` AS `tanggal`,'RETUR PENJUALAN' AS `transaksi`,`r`.`no_retur` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,0 AS `debet`,sum(`GetHargaBersih`(`GetHargaBersih`(`rd`.`harga_jual`,`rd`.`diskon1`,`rd`.`diskon2`,`rd`.`diskon3`,`rd`.`diskon4`,0,0),`r`.`diskon1`,`r`.`diskon2`,`r`.`diskon3`,`r`.`diskon4`,`r`.`pajak`,0) * `rd`.`qty`) AS `kredit`,`r`.`keterangan` AS `keterangan`,`r`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`r`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_penjualan_retur` `r` join `t_penjualan_retur_detail` `rd` on(`r`.`no_retur` = `rd`.`no_retur`)) join `m_customer` on(`r`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`r`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`r`.`kd_user` = `m_userx`.`kd_user`)) where `r`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`r`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `r`.`kd_kas`,`r`.`tanggal`,`r`.`no_retur`,`r`.`keterangan`,`m_customer`.`nama`,`r`.`kd_divisi`,`m_divisi`.`nama`,`r`.`kd_user`,`m_userx`.`nama` union all select `t_piutang_cicilan`.`kd_kas` AS `kd_kas`,`t_piutang_cicilan`.`tanggal` AS `tanggal`,'CICILAN PIUTANG' AS `transaksi`,`t_piutang_cicilan`.`no_cicilan` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`t_piutang_cicilan`.`nominal` AS `debet`,0 AS `kredit`,`t_piutang_cicilan`.`keterangan` AS `keterangan`,`t_penjualan`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_piutang_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_piutang_cicilan` join `t_penjualan` on(`t_piutang_cicilan`.`no_transaksi` = `t_penjualan`.`no_transaksi`)) join `m_customer` on(`t_penjualan`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_userx` on(`t_piutang_cicilan`.`kd_user` = `m_userx`.`kd_user`)) join `m_divisi` on(`t_penjualan`.`kd_divisi` = `m_divisi`.`kd_divisi`)) where `t_piutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_piutang_cicilan`.`kd_kas` AS `kd_kas`,`t_piutang_cicilan`.`tanggal` AS `tanggal`,'PENDATAPAN KARTU KREDIT DARI PIUTANG' AS `transaksi`,`t_piutang_cicilan`.`no_cicilan` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`t_piutang_cicilan`.`nominal` * `t_piutang_cicilan`.`other` AS `debet`,0 AS `kredit`,`t_piutang_cicilan`.`keterangan` AS `keterangan`,`t_penjualan`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_piutang_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_piutang_cicilan` join `t_penjualan` on(`t_piutang_cicilan`.`no_transaksi` = `t_penjualan`.`no_transaksi`)) join `m_customer` on(`t_penjualan`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_userx` on(`t_piutang_cicilan`.`kd_user` = `m_userx`.`kd_user`)) join `m_divisi` on(`t_penjualan`.`kd_divisi` = `m_divisi`.`kd_divisi`)) where `t_piutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) and `t_piutang_cicilan`.`other` > 0 union all select `t_surat_berharga`.`kd_kas_setor` AS `kd_kas_setor`,`t_surat_berharga`.`tanggal_cair` AS `tanggal_cair`,'SURAT BERHARGA (KELUAR)' AS `transaksi`,`t_surat_berharga`.`no_surat_berharga` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_surat_berharga`.`nominal` AS `kredit`,`t_surat_berharga`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_surat_berharga`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_surat_berharga` join `m_userx` on(`t_surat_berharga`.`kd_user` = `m_userx`.`kd_user`)) where `t_surat_berharga`.`tanggal_cair` > `GetTanggalTerakhirTutupBuku`() and `GetFormatTanggal`(`t_surat_berharga`.`tanggal_cair`) >= `GetFormatTanggal`(`t_surat_berharga`.`tanggal_setor`) and `t_surat_berharga`.`status_blong` = 0 and `t_surat_berharga`.`status_asal` = 0 union all select `t_surat_berharga`.`kd_kas_setor` AS `kd_kas_setor`,`t_surat_berharga`.`tanggal_cair` AS `tanggal_cair`,'SURAT BERHARGA (MASUK)' AS `transaksi`,`t_surat_berharga`.`no_surat_berharga` AS `no_transaksi`,'-' AS `Objek`,`t_surat_berharga`.`nominal` AS `debet`,0 AS `kredit`,`t_surat_berharga`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_surat_berharga`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_surat_berharga` join `m_userx` on(`t_surat_berharga`.`kd_user` = `m_userx`.`kd_user`)) where `t_surat_berharga`.`tanggal_cair` > `GetTanggalTerakhirTutupBuku`() and `GetFormatTanggal`(`t_surat_berharga`.`tanggal_cair`) >= `GetFormatTanggal`(`t_surat_berharga`.`tanggal_setor`) and `t_surat_berharga`.`status_blong` = 0 and `t_surat_berharga`.`status_asal` = 1 union all select `t_penambahan_kas`.`kd_kas` AS `kd_kas`,`t_penambahan_kas`.`tanggal` AS `tanggal`,'PENAMBAHAN MODAL' AS `transaksi`,`t_penambahan_kas`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,`t_penambahan_kas`.`nominal` AS `debet`,0 AS `kredit`,`t_penambahan_kas`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_penambahan_kas`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_penambahan_kas` join `m_userx` on(`t_penambahan_kas`.`kd_user` = `m_userx`.`kd_user`)) where `t_penambahan_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t_prive`.`kd_kas` AS `kd_kas`,`t_prive`.`tanggal` AS `tanggal`,'PRIVE' AS `transaksi`,`t_prive`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_prive`.`nominal` AS `kredit`,`t_prive`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_prive`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_prive` join `m_userx` on(`t_prive`.`kd_user` = `m_userx`.`kd_user`)) where `t_prive`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `m_aset`.`kd_kas` AS `kd_kas`,`m_aset`.`tanggal_jual` AS `tanggal_jual`,'PENJUALAN ASET' AS `Expr1`,'PA-' + `m_aset`.`kd_aset` AS `Expr2`,'-' AS `Objek`,`m_aset`.`harga_beli` - `GetPenyusutanAset`(`m_aset`.`kd_aset`,`m_aset`.`tanggal_beli`,`m_aset`.`tanggal_jual`) AS `debet`,0 AS `kredit`,'PENJUALAN ' + `m_aset`.`nama` AS `Keterangan`,`m_aset`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,(select min(`m_userx`.`kd_user`) from `m_userx` where `m_userx`.`status` <> 0) AS `Kode User`,(select `m_userx`.`nama` from `m_userx` where `m_userx`.`kd_user` in (select min(`m_userx`.`kd_user`) from `m_userx` where `m_userx`.`status` <> 0)) AS `User` from (`m_aset` join `m_divisi` on(`m_aset`.`kd_divisi` = `m_divisi`.`kd_divisi`)) where `GetFormatTanggal`(`m_aset`.`tanggal_jual`) >= `GetFormatTanggal`(`m_aset`.`tanggal_beli`) and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and !(`m_aset`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t`.`kd_kas` AS `kd_kas`,`t`.`tanggal_pesan` AS `tanggal_pesan`,'PENJUALAN JASA' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty`) AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((((`m_jasa` `m` join `t_penjualan_jasa_detail` `d` on(`m`.`kd_jasa` = `d`.`kd_jasa`)) join `m_jasa_kategori` `k` on(`m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori`)) join `t_penjualan_jasa` `t` on(`d`.`no_transaksi` = `t`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `k`.`status` = 2 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas`,`t`.`tanggal_pesan`,`t`.`no_transaksi`,`t`.`keterangan`,`m_customer`.`nama`,`t`.`kd_divisi`,`m_divisi`.`nama`,`t`.`kd_user`,`m_userx`.`nama` union all select `t`.`kd_kas` AS `kd_kas`,`t`.`tanggal_pesan` AS `tanggal_pesan`,'PENDAPATAN KARTU KREDIT PENJUALAN JASA' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty` * `t`.`other`) AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((((`m_jasa` `m` join `t_penjualan_jasa_detail` `d` on(`m`.`kd_jasa` = `d`.`kd_jasa`)) join `m_jasa_kategori` `k` on(`m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori`)) join `t_penjualan_jasa` `t` on(`d`.`no_transaksi` = `t`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `k`.`status` = 2 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas`,`t`.`tanggal_pesan`,`t`.`no_transaksi`,`t`.`keterangan`,`m_customer`.`nama`,`t`.`kd_divisi`,`m_divisi`.`nama`,`t`.`kd_user`,`m_userx`.`nama` union all select `t`.`kd_kas` AS `kd_kas`,`t`.`awal` AS `awal`,'PERSEWAAN' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Customer /Supplier`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty`) AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((((`m_jasa` `m` join `t_penjualan_jasa_detail` `d` on(`m`.`kd_jasa` = `d`.`kd_jasa`)) join `m_jasa_kategori` `k` on(`m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori`)) join `t_penjualan_jasa` `t` on(`d`.`no_transaksi` = `t`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `k`.`status` = 1 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas`,`t`.`awal`,`t`.`no_transaksi`,`t`.`keterangan`,`m_customer`.`nama`,`t`.`kd_divisi`,`m_divisi`.`nama`,`t`.`kd_user`,`m_userx`.`nama` union all select `t`.`kd_kas` AS `kd_kas`,`t`.`awal` AS `awal`,'PENDAPATAN KARTU KREDIT PERSEWAAN' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty` * `t`.`other`) AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((((`m_jasa` `m` join `t_penjualan_jasa_detail` `d` on(`m`.`kd_jasa` = `d`.`kd_jasa`)) join `m_jasa_kategori` `k` on(`m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori`)) join `t_penjualan_jasa` `t` on(`d`.`no_transaksi` = `t`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `k`.`status` = 1 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas`,`t`.`awal`,`t`.`no_transaksi`,`t`.`keterangan`,`m_customer`.`nama`,`t`.`kd_divisi`,`m_divisi`.`nama`,`t`.`kd_user`,`m_userx`.`nama` union all select `t_piutang_jasa_cicilan`.`kd_kas` AS `kd_kas`,`t_piutang_jasa_cicilan`.`tanggal` AS `tanggal`,'CICILAN PIUTANG JASA' AS `transaksi`,`t_piutang_jasa_cicilan`.`no_cicilan` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`t_piutang_jasa_cicilan`.`nominal` AS `debet`,0 AS `kredit`,`t_piutang_jasa_cicilan`.`keterangan` AS `keterangan`,`t_penjualan_jasa`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_piutang_jasa_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_piutang_jasa_cicilan` join `t_penjualan_jasa` on(`t_piutang_jasa_cicilan`.`no_transaksi` = `t_penjualan_jasa`.`no_transaksi`)) join `m_customer` on(`t_penjualan_jasa`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t_penjualan_jasa`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_piutang_jasa_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_piutang_jasa_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_jasa_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_piutang_jasa_cicilan`.`kd_kas` AS `kd_kas`,`t_piutang_jasa_cicilan`.`tanggal` AS `tanggal`,'PENDAPATAN KARTU KREDIT CICILAN PIUTANG JASA' AS `transaksi`,`t_piutang_jasa_cicilan`.`no_cicilan` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`t_piutang_jasa_cicilan`.`nominal` * `t_piutang_jasa_cicilan`.`other` AS `debet`,0 AS `kredit`,`t_piutang_jasa_cicilan`.`keterangan` AS `keterangan`,`t_penjualan_jasa`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_piutang_jasa_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_piutang_jasa_cicilan` join `t_penjualan_jasa` on(`t_piutang_jasa_cicilan`.`no_transaksi` = `t_penjualan_jasa`.`no_transaksi`)) join `m_customer` on(`t_penjualan_jasa`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t_penjualan_jasa`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_piutang_jasa_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_piutang_jasa_cicilan`.`nominal` * `t_piutang_jasa_cicilan`.`other` > 0 and `t_piutang_jasa_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_jasa_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`))
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_penjualan_per_barang_modal2_baru;
CREATE VIEW `mon_t_penjualan_per_barang_modal2_baru` AS select `dtl`.`no_transaksi` AS `No. Transaksi`,`m_divisi`.`nama` AS `Divisi`,`GetFormatTanggal`(`jual`.`tanggal`) AS `Tanggal`,`m_customer`.`nama` AS `Customer`,`m_kategori`.`nama` AS `Kategori`,`dtl`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) / `bst`.`jumlah` AS `Harga`,`tmp`.`harga` AS `Modal`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` AS `Total Bersih`,`tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` AS `Total Modal`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` AS `Laba`,(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) / (case when `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` = 0 then 1 else `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` end) * 100 AS `Margin`,`m_userx`.`nama` AS `Petugas` from (((((((((`m_barang` join `t_penjualan` `jual`) join `t_penjualan_detail` `dtl` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi` and `m_barang`.`kd_barang` = `dtl`.`kd_barang`)) join `m_customer` on(`jual`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `m_userx` on(`jual`.`kd_user` = `m_userx`.`kd_user`)) join `m_barang_satuan` on(`dtl`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `dtl`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_barang_satuan` `bst` on(`bst`.`kd_barang` = `dtl`.`kd_barang` and `bst`.`kd_satuan` = `dtl`.`kd_satuan`)) left join (select `dtl`.`kd_barang` AS `kd_barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_beli`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`bl`.`diskon1`,`bl`.`diskon2`,`bl`.`diskon3`,`bl`.`diskon4`,`bl`.`pajak`,`bl`.`ppnbm`) / `brg`.`jumlah` AS `harga` from (((((select `dt`.`kd_barang` AS `kd_barang`,max(`dt`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` `dt` where `dt`.`harga_beli` > 0 group by `dt`.`kd_barang`)) `akhir` join `t_pembelian_detail` `dtl` on(`akhir`.`kd_barang` = `dtl`.`kd_barang` and `dtl`.`no_transaksi` = `akhir`.`nomor`)) join `m_barang_satuan` `brg` on(`brg`.`kd_barang` = `dtl`.`kd_barang` and `brg`.`kd_satuan` = `dtl`.`kd_satuan`)) join `t_pembelian` `bl` on(`dtl`.`no_transaksi` = `bl`.`no_transaksi`)) where `dtl`.`harga_beli` > 0) `tmp` on(`dtl`.`kd_barang` = `tmp`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_for_average_harga_barang;
CREATE VIEW `v_for_average_harga_barang` AS select `m_barang_divisi`.`kd_barang` AS `kd_barang`,`GetTanggalTerakhirTutupBuku`() AS `tanggal`,'STOK AWAL' AS `transaksi`,ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) AS `qty`,ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal` * `m_barang_divisi`.`harga_beli_awal`,0)),0) / (case when ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) = 0 then 1 else ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) end) AS `harga` from `m_barang_divisi` group by `m_barang_divisi`.`kd_barang` union all select `d`.`kd_barang` AS `kd_barang`,`b`.`tanggal` AS `tanggal`,'PEMBELIAN' AS `PEMBELIAN`,`bs`.`jumlah` * `d`.`qty` AS `(bs.jumlah * d.qty)`,`GetHargaBersih`(`GetHargaBersih`(`d`.`harga_beli`,`d`.`diskon1`,`d`.`diskon2`,`d`.`diskon3`,`d`.`diskon4`,0,0),`b`.`diskon1`,`b`.`diskon2`,`b`.`diskon3`,`b`.`diskon4`,`b`.`pajak`,`b`.`ppnbm`) / ifnull(`bs`.`jumlah`,0) AS `Name_exp_5` from ((`t_pembelian` `b` join `t_pembelian_detail` `d` on(`b`.`no_transaksi` = `d`.`no_transaksi`)) join `m_barang_satuan` `bs` on(`d`.`kd_barang` = `bs`.`kd_barang` and `d`.`kd_satuan` = `bs`.`kd_satuan`)) where cast(`b`.`tanggal` as date) between `GetTanggalTerakhirTutupBuku`() and cast(current_timestamp() as date)
//xyvdelimiter //
DROP VIEW IF EXISTS v_hutang_pembelian;
CREATE VIEW `v_hutang_pembelian` AS select `hutang`.`no_transaksi` AS `no_transaksi`,`hutang`.`tanggal_tr` AS `tanggal_tr`,`hutang`.`total_bersih` AS `total_bersih`,`hutang`.`status` AS `status`,`hutang`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo`,`hutang`.`kd_divisi` AS `kd_divisi`,`hutang`.`kd_supplier` AS `kd_supplier`,ifnull(`cicilan`.`cicilan`,0) AS `total_cicilan`,`hutang`.`total_bersih` - ifnull(`cicilan`.`cicilan`,0) AS `sisa_cicilan`,`m_supplier`.`nama` AS `nama` from ((((select `x_total_pembelian_bersih`.`no_transaksi` AS `no_transaksi`,`x_total_pembelian_bersih`.`tanggal_tr` AS `tanggal_tr`,`x_total_pembelian_bersih`.`total_bersih` AS `total_bersih`,`x_total_pembelian_bersih`.`status` AS `status`,`x_total_pembelian_bersih`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo`,`x_total_pembelian_bersih`.`kd_divisi` AS `kd_divisi`,`t_pembelian`.`kd_supplier` AS `kd_supplier` from (`x_total_pembelian_bersih` join `t_pembelian` on(`t_pembelian`.`no_transaksi` = `x_total_pembelian_bersih`.`no_transaksi`)) where `x_total_pembelian_bersih`.`status` = 0)) `hutang` join `m_supplier` on(`m_supplier`.`kd_supplier` = `hutang`.`kd_supplier`)) left join (select `t_hutang_cicilan`.`no_transaksi` AS `no_transaksi`,sum(`t_hutang_cicilan`.`nominal`) AS `cicilan` from `t_hutang_cicilan` group by `t_hutang_cicilan`.`no_transaksi`) `cicilan` on(`cicilan`.`no_transaksi` = `hutang`.`no_transaksi`)) where `hutang`.`total_bersih` - ifnull(`cicilan`.`cicilan`,0) > 1
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_mutasi_barang_baru;
CREATE VIEW `v_spk_mutasi_barang_baru` AS select `m_kategori`.`status` AS `k_status`,`m_kategori`.`nama` AS `Kategori`,`g_stok_akhir`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `Barang`,`g_stok_akhir`.`kd_divisi` AS `kd_divisi`,(select max(`t_mutasi_stok`.`tanggal`) from (`t_mutasi_stok` join `t_mutasi_stok_detail` on(`t_mutasi_stok`.`no_transaksi` = `t_mutasi_stok_detail`.`no_transaksi`)) where `t_mutasi_stok`.`kd_divisi_tujuan` = `g_stok_akhir`.`kd_divisi` and `t_mutasi_stok_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) AS `mutasi_akhir`,round(ifnull((select sum(`GetKuantitasSatuanTerkecil`(`t_penjualan_detail`.`kd_barang`,`t_penjualan_detail`.`kd_satuan`) * `t_penjualan_detail`.`qty`) / cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) from ((`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) join `ans_item`) where `t_penjualan`.`kd_divisi` = `g_stok_akhir`.`kd_divisi` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang` and `t_penjualan`.`tanggal` >= (case when `g_stok_akhir`.`stok` = 0 then (select max(`t_penjualan`.`tanggal`) + interval cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) * -1 day from (`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) where `t_penjualan`.`kd_divisi` = `g_stok_akhir`.`kd_divisi` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) else (select curdate() + interval (cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) * -1) day) end)),0),2) AS `avg_harian`,`g_stok_akhir`.`stok` AS `stok_tujuan`,`m_satuan`.`nama` AS `satuan`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan` from ((((`m_barang` join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `g_stok_akhir` on(`m_barang`.`kd_barang` = `g_stok_akhir`.`kd_barang`)) join `m_barang_satuan` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`)) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`jumlah` = 1 and `m_barang_satuan`.`status` <> 0
//xyvdelimiter //
DROP VIEW IF EXISTS v_avg_barang_per_periode;
CREATE VIEW `v_avg_barang_per_periode` AS select `g_stok_akhir`.`kd_barang` AS `kd_barang`,case when sum(`g_stok_akhir`.`stok`) = 0 then round(ifnull((select sum(`m_barang_satuan`.`jumlah` * `t_penjualan_detail`.`qty`) / cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) from ((((`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) join `m_barang_satuan` on(`t_penjualan_detail`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `t_penjualan_detail`.`kd_satuan`)) join `ans_item`) join `ans_item_stored_divisi` `a`) where `t_penjualan`.`kd_divisi` <> `a`.`div_expired` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang` and `t_penjualan`.`tanggal` >= (select max(`t_penjualan`.`tanggal`) + interval cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) * -1 day from (((`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) join `ans_item`) join `ans_item_stored_divisi` `a`) where `t_penjualan`.`kd_divisi` <> `a`.`div_expired` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) group by `t_penjualan_detail`.`kd_barang`),0),2) else round(ifnull((select sum(`m_barang_satuan`.`jumlah` * `t_penjualan_detail`.`qty`) / cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) from ((((`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) join `m_barang_satuan` on(`t_penjualan_detail`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `t_penjualan_detail`.`kd_satuan`)) join `ans_item`) join `ans_item_stored_divisi` `a`) where `t_penjualan`.`kd_divisi` <> `a`.`div_expired` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang` and `t_penjualan`.`tanggal` >= (select curdate() + interval (cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) * -1) day) group by `t_penjualan_detail`.`kd_barang`),0),2) end AS `avg` from `g_stok_akhir` group by `g_stok_akhir`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_pembelian_barang_terakhir;
CREATE VIEW `v_pembelian_barang_terakhir` AS select `bla`.`kd_supplier` AS `kd_supplier`,`dta`.`kd_barang` AS `kd_barang`,`bla`.`tanggal` AS `tanggal`,`dta`.`harga_beli` AS `harga_beli`,`dta`.`kd_satuan` AS `satuan_lama`,`bs`.`jumlah` AS `jumlah`,`dta`.`harga_beli` / `bs`.`jumlah` AS `harga_beli_terakhir`,`st`.`kd_satuan` AS `kd_satuan`,`st`.`nama` AS `satuan` from (((((`t_pembelian_detail` `dta` join `m_barang_satuan` `bs` on(`dta`.`kd_barang` = `bs`.`kd_barang` and `dta`.`kd_satuan` = `bs`.`kd_satuan`)) join `m_barang_satuan` `bs_kecil` on(`dta`.`kd_barang` = `bs_kecil`.`kd_barang`)) join `m_satuan` `st` on(`bs_kecil`.`kd_satuan` = `st`.`kd_satuan`)) join `t_pembelian` `bla` on(`bla`.`no_transaksi` = `dta`.`no_transaksi`)) join (select `dtl`.`kd_barang` AS `kd_barang`,`bl`.`kd_supplier` AS `kd_supplier`,max(`bl`.`no_transaksi`) AS `nomor` from (`t_pembelian_detail` `dtl` join `t_pembelian` `bl` on(`bl`.`no_transaksi` = `dtl`.`no_transaksi`)) where `dtl`.`jenis` = 1 and `dtl`.`harga_beli` > 0 group by `dtl`.`kd_barang`,`bl`.`kd_supplier`) `updt` on(`updt`.`kd_barang` = `dta`.`kd_barang` and `bla`.`no_transaksi` = `updt`.`nomor` and `bla`.`kd_supplier` = `updt`.`kd_supplier`)) where `bs_kecil`.`jumlah` = 1
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_pembelian_order_tmp;
CREATE VIEW `v_spk_pembelian_order_tmp` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,case when (select count(`t_pembelian`.`no_transaksi`) from (`t_pembelian` join `t_pembelian_detail` on(`t_pembelian`.`no_transaksi` = `t_pembelian_detail`.`no_transaksi`)) where `t_pembelian_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) = 0 then 'Baru' else 'Lama' end AS `sts_barang`,ifnull(`vb`.`avg`,0) AS `avg`,ifnull(sum(`g_stok_akhir`.`stok`),0) AS `stok`,ifnull(`vb`.`avg` * (`m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`),0) AS `need`,ifnull(`vb`.`avg` * (`m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`) + ifnull(`ans_item`.`buffer` * (`vb`.`avg` * (`m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`)) / 100,0) - ifnull(sum(`g_stok_akhir`.`stok`),0),0) AS `qty`,`last_price`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `satuan`,`last_price`.`harga_beli_terakhir` AS `harga_beli_terakhir`,0 AS `Diskon`,`m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `Supplier`,`m_supplier_jadwal`.`hari` AS `Kunjungan`,case when `m_supplier_jadwal`.`visit_time` < 7 then `m_supplier_jadwal`.`hari` + `m_supplier_jadwal`.`visit_time` else `m_supplier_jadwal`.`hari` end AS `Kunjungan2` from (((((((((`m_barang_satuan` join `m_barang` on(`m_barang_satuan`.`kd_barang` = `m_barang`.`kd_barang`)) join `v_pembelian_barang_terakhir` `last_price` on(`m_barang`.`kd_barang` = `last_price`.`kd_barang`)) join `m_supplier` on(`m_supplier`.`kd_supplier` = `last_price`.`kd_supplier`)) join `m_supplier_jadwal` on(`m_supplier_jadwal`.`kd_supplier` = `m_supplier`.`kd_supplier`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `g_stok_akhir` on(`m_barang`.`kd_barang` = `g_stok_akhir`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `last_price`.`kd_satuan`)) left join `v_avg_barang_per_periode` `vb` on(`m_barang`.`kd_barang` = `vb`.`kd_barang`)) join `ans_item`) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`jumlah` = 1 and `m_barang_satuan`.`status` <> 0 group by `g_stok_akhir`.`kd_barang`,`m_barang`.`tanggal_daftar`,`m_barang_satuan`.`kd_satuan`,`m_satuan`.`nama`,`last_price`.`kd_supplier`
//xyvdelimiter //
DROP VIEW IF EXISTS mon_g_kas_akhir;
CREATE VIEW `mon_g_kas_akhir` AS select `m_kas`.`kd_kas` AS `kodekas`,`m_kas`.`no_rekening` AS `No. Rekening`,`m_bank`.`nama` AS `Bank`,sum(ifnull(`v_g_kas_histori`.`debet`,0)) - sum(ifnull(`v_g_kas_histori`.`kredit`,0)) AS `Saldo Akhir` from ((`v_g_kas_histori` join `m_kas` on(`v_g_kas_histori`.`kd_kas` = `m_kas`.`kd_kas`)) join `m_bank` on(`m_kas`.`kd_bank` = `m_bank`.`kd_bank`)) group by `m_kas`.`no_rekening`,`m_bank`.`nama` order by `m_kas`.`kd_kas`
//xyvdelimiter //
DROP VIEW IF EXISTS dt_kenaikan_harga_jual_rumak;
CREATE VIEW `dt_kenaikan_harga_jual_rumak` AS select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `item`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `satuan`,`info_pembelian`.`harga_beli` AS `harga_beli`,`m_barang_satuan`.`margin` AS `margin_tetapan`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli` AS `margin_rupiah`,'30%' AS `kenaikan`,(`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) * 30 / 100 AS `kenaikan_margin`,(`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) * 30 / 100 + (`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) AS `margin_baru`,(`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) * 30 / 100 + `m_barang_satuan`.`harga_jual` + ((`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) * 30 / 100 + `m_barang_satuan`.`harga_jual`) % 100 AS `harga_jual_baru`,(`m_barang_satuan`.`harga_jual` - `info_pembelian`.`last_purchase`) * 30 / 100 + `m_barang_satuan`.`harga_jual` + ((`m_barang_satuan`.`harga_jual` - `info_pembelian`.`last_purchase`) * 30 / 100 + `m_barang_satuan`.`harga_jual`) % 100 AS `harga_jual_barux` from (((`m_barang_satuan` join (select `t_pembelian_detail`.`no_transaksi` AS `no_transaksi`,`t_pembelian_detail`.`kd_barang` AS `kd_barang`,`t_pembelian_detail`.`kd_satuan` AS `kd_satuan`,`t_pembelian_detail`.`harga_beli` AS `harga_beli`,`max_tr`.`last_purchase` AS `last_purchase` from (`t_pembelian_detail` join (select `t_pembelian_detail`.`kd_barang` AS `kd_barang`,`t_pembelian_detail`.`kd_satuan` AS `kd_satuan`,max(`t_pembelian_detail`.`no_transaksi`) AS `last_tr`,`GetHargaBersih`(`GetHargaBersih`(`t_pembelian_detail`.`harga_beli`,`t_pembelian_detail`.`diskon1`,`t_pembelian_detail`.`diskon2`,`t_pembelian_detail`.`diskon3`,`t_pembelian_detail`.`diskon4`,0,0),`t_pembelian`.`diskon1`,`t_pembelian`.`diskon2`,`t_pembelian`.`diskon3`,`t_pembelian`.`diskon4`,`t_pembelian`.`pajak`,`t_pembelian`.`ppnbm`) AS `last_purchase` from (`t_pembelian` join `t_pembelian_detail` on(`t_pembelian`.`no_transaksi` = `t_pembelian_detail`.`no_transaksi`)) group by `t_pembelian_detail`.`kd_barang`,`t_pembelian_detail`.`kd_satuan`) `max_tr` on(`max_tr`.`kd_barang` = `t_pembelian_detail`.`kd_barang` and `max_tr`.`last_tr` = `t_pembelian_detail`.`no_transaksi`))) `info_pembelian` on(`m_barang_satuan`.`kd_barang` = `info_pembelian`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `info_pembelian`.`kd_satuan`)) join `m_barang` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS m_barang_divisi_detail;
CREATE VIEW `m_barang_divisi_detail` AS select `m_barang`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,`m_barang_divisi`.`kd_divisi` AS `Kode Divisi` from (`m_barang` join `m_barang_divisi` on(`m_barang`.`kd_barang` = `m_barang_divisi`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS mon_g_stok_barang_per_divisi;
CREATE VIEW `mon_g_stok_barang_per_divisi` AS select `v_g_barang_histori`.`kd_divisi` AS `Kode Divisi`,`m_divisi`.`nama` AS `Divisi`,`v_g_barang_histori`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,sum(`GetKuantitasSatuanTerkecil`(`v_g_barang_histori`.`kd_barang`,`v_g_barang_histori`.`kd_satuan`) * `v_g_barang_histori`.`Debet`) - sum(`GetKuantitasSatuanTerkecil`(`v_g_barang_histori`.`kd_barang`,`v_g_barang_histori`.`kd_satuan`) * `v_g_barang_histori`.`Kredit`) AS `Stok Akhir`,sum(`v_g_barang_histori`.`Debet` * `m_barang_satuan`.`jumlah` - `v_g_barang_histori`.`Kredit` * `m_barang_satuan`.`jumlah`) AS `stok_Akhir` from (((`v_g_barang_histori` join `m_barang` on(`v_g_barang_histori`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`v_g_barang_histori`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_barang_satuan` on(`v_g_barang_histori`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `v_g_barang_histori`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) group by `v_g_barang_histori`.`kd_divisi`,`v_g_barang_histori`.`kd_barang`,`m_barang`.`nama`,`m_divisi`.`nama`

//xyvdelimiter //
DROP VIEW IF EXISTS mon_g_stok_barang_per_divisi_vd;
CREATE VIEW mon_g_stok_barang_per_divisi_vd AS
SELECT m_barang.kd_barang,barang,m_barang.kd_divisi,divisi,stok_awal+
IFNULL(penjualan.jual_qty*-1,0)+
IFNULL(penjualan_retur.jual_retur_qty,0)+
IFNULL(pembelian.beli_qty,0)+
IFNULL(pembelian_retur.beli_retur_qty*-1,0)+
IFNULL(opname.qty_opname,0)+
IFNULL(mutasi_keluar.mutasi_qty*-1,0)+
IFNULL(mutasi_masuk.mutasi_qty*-1,0)
 AS stok
FROM (
SELECT brg.kd_barang,brg.nama AS barang,m_div.kd_divisi,m_div.divisi,m_div.stok_awal FROM 
(SELECT kd_barang,nama FROM m_barang WHERE status<>0 AND (m_barang.kd_barang LIKE '%%' OR m_barang.nama LIKE '%%')) brg
INNER JOIN (
SELECT kd_barang,m_divisi.kd_divisi,nama AS divisi,stok_awal FROM m_barang_divisi 
INNER JOIN m_divisi ON m_divisi.kd_divisi=m_barang_divisi.kd_divisi
WHERE m_barang_divisi.status<>0 AND m_divisi.nama LIKE '%%'
)
m_div ON m_div.kd_barang=brg.kd_barang
) m_barang 
LEFT JOIN 
(SELECT mbs.kd_barang,kd_divisi,SUM(jual_item_div.jual_qty*mbs.jumlah) AS jual_qty FROM
(
	SELECT kd_barang,kd_satuan,kd_divisi,SUM(qty) AS jual_qty FROM t_penjualan_detail jual_dt 
	INNER JOIN (
		SELECT no_transaksi,kd_divisi FROM t_penjualan WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku)
	) jual 
	ON jual.no_transaksi=jual_dt.no_transaksi 
	GROUP BY kd_barang,kd_satuan,kd_divisi
) jual_item_div
INNER JOIN 
(
	SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
) mbs ON mbs.kd_barang=jual_item_div.kd_barang AND mbs.kd_satuan=jual_item_div.kd_satuan
GROUP BY mbs.kd_barang,kd_divisi) penjualan
ON m_barang.kd_barang=penjualan.kd_barang AND m_barang.kd_divisi=penjualan.kd_divisi
LEFT JOIN
(SELECT mbs.kd_barang,kd_divisi,SUM(jual_item_div.jual_qty*mbs.jumlah) AS jual_retur_qty FROM
(
	SELECT kd_barang,kd_satuan,kd_divisi,SUM(qty) AS jual_qty FROM t_penjualan_retur_detail jual_dt 
	INNER JOIN (
		SELECT no_retur,kd_divisi FROM t_penjualan_retur WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku)
	) jual 
	ON jual.no_retur=jual_dt.no_retur
	GROUP BY kd_barang,kd_satuan,kd_divisi
) jual_item_div
INNER JOIN 
(
	SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
) mbs ON mbs.kd_barang=jual_item_div.kd_barang AND mbs.kd_satuan=jual_item_div.kd_satuan
GROUP BY mbs.kd_barang,kd_divisi) penjualan_retur
ON m_barang.kd_barang=penjualan_retur.kd_barang AND m_barang.kd_divisi=penjualan_retur.kd_divisi
LEFT JOIN
(SELECT mbs.kd_barang,kd_divisi,SUM(beli_item_div.beli_qty*mbs.jumlah) AS beli_qty FROM
(
	SELECT kd_barang,kd_satuan,kd_divisi,SUM(qty) AS beli_qty FROM t_pembelian_detail beli_dt 
	INNER JOIN (
		SELECT no_transaksi,kd_divisi FROM t_pembelian WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku)
	) beli 
	ON beli.no_transaksi=beli_dt.no_transaksi 
	GROUP BY kd_barang,kd_satuan,kd_divisi
) beli_item_div
INNER JOIN 
(
	SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
) mbs ON mbs.kd_barang=beli_item_div.kd_barang AND mbs.kd_satuan=beli_item_div.kd_satuan
GROUP BY mbs.kd_barang,kd_divisi) pembelian
ON m_barang.kd_barang=pembelian.kd_barang AND m_barang.kd_divisi=pembelian.kd_divisi
LEFT JOIN

(SELECT mbs.kd_barang,kd_divisi,SUM(beli_item_div.beli_qty*mbs.jumlah) AS beli_retur_qty FROM
(
	SELECT kd_barang,kd_satuan,kd_divisi,SUM(qty) AS beli_qty FROM t_pembelian_retur_detail beli_dt 
	INNER JOIN (
		SELECT no_retur,kd_divisi FROM t_pembelian_retur WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku)
	) beli 
	ON beli.no_retur=beli_dt.no_retur 
	GROUP BY kd_barang,kd_satuan,kd_divisi
) beli_item_div
INNER JOIN 
(
	SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
) mbs ON mbs.kd_barang=beli_item_div.kd_barang AND mbs.kd_satuan=beli_item_div.kd_satuan
GROUP BY mbs.kd_barang,kd_divisi) pembelian_retur
ON m_barang.kd_barang=pembelian_retur.kd_barang AND m_barang.kd_divisi=pembelian_retur.kd_divisi
LEFT JOIN
(SELECT mbs.kd_barang,kd_divisi,SUM(jumlah*qty) AS qty_opname FROM
(
	SELECT kd_barang,kd_satuan,kd_divisi,SUM(qty) AS qty FROM
	(
		SELECT kd_barang,kd_satuan,kd_divisi,
		CASE WHEN status<>2 AND qty>0 THEN (qty*-1)	ELSE qty END AS qty
		FROM t_opname_stok WHERE tanggal>(SELECT MAX(tanggal) FROM g_tutup_buku)
	) op_stat
GROUP BY kd_barang,kd_satuan,kd_divisi
) op
INNER JOIN
(
	SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
) mbs ON mbs.kd_barang=op.kd_barang AND mbs.kd_satuan=op.kd_satuan GROUP BY mbs.kd_barang,kd_divisi) opname
ON m_barang.kd_barang=opname.kd_barang AND m_barang.kd_divisi=opname.kd_divisi
LEFT JOIN
(SELECT mbs.kd_barang,kd_divisi_asal AS kd_divisi,SUM(mutasi_item_div.mutasi_qty*mbs.jumlah) AS mutasi_qty FROM
(
	SELECT kd_barang,kd_satuan,kd_divisi_asal ,SUM(qty) AS mutasi_qty FROM t_mutasi_stok_detail mutasi_dt 
	INNER JOIN (
		SELECT no_transaksi,kd_divisi_asal FROM t_mutasi_stok WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku)
	) mutasi 
	ON mutasi.no_transaksi=mutasi_dt.no_transaksi 
	GROUP BY kd_barang,kd_satuan,kd_divisi_asal
) mutasi_item_div
INNER JOIN 
(
	SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
) mbs ON mbs.kd_barang=mutasi_item_div.kd_barang AND mbs.kd_satuan=mutasi_item_div.kd_satuan
GROUP BY mbs.kd_barang,kd_divisi_asal) mutasi_keluar
ON m_barang.kd_barang=mutasi_keluar.kd_barang AND m_barang.kd_divisi=mutasi_keluar.kd_divisi
LEFT JOIN
(SELECT mbs.kd_barang,kd_divisi_tujuan AS kd_divisi,SUM(mutasi_item_div.mutasi_qty*mbs.jumlah) AS mutasi_qty FROM
(
	SELECT kd_barang,kd_satuan,kd_divisi_tujuan ,SUM(qty) AS mutasi_qty FROM t_mutasi_stok_detail mutasi_dt 
	INNER JOIN (
		SELECT no_transaksi,kd_divisi_tujuan FROM t_mutasi_stok WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku)
	) mutasi 
	ON mutasi.no_transaksi=mutasi_dt.no_transaksi 
	GROUP BY kd_barang,kd_satuan,kd_divisi_tujuan
) mutasi_item_div
INNER JOIN 
(
	SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
) mbs ON mbs.kd_barang=mutasi_item_div.kd_barang AND mbs.kd_satuan=mutasi_item_div.kd_satuan
GROUP BY mbs.kd_barang,kd_divisi_tujuan) mutasi_masuk
ON m_barang.kd_barang=mutasi_masuk.kd_barang AND m_barang.kd_divisi=mutasi_masuk.kd_divisi
//xyvdelimiter //
DROP VIEW IF EXISTS mon_m_divisi;
CREATE VIEW `mon_m_divisi` AS select `m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`kepala_nota` AS `kepala_nota`,`m_divisi`.`keterangan` AS `keterangan`,`m_divisi`.`nama` AS `nama` from `m_divisi` where `m_divisi`.`status` <> 0
//xyvdelimiter //
DROP VIEW IF EXISTS mon_modal_per_barang;
CREATE VIEW `mon_modal_per_barang` AS select `mon_t_penjualan_per_barang_modal2_baru`.`Divisi` AS `Divisi`,`mon_t_penjualan_per_barang_modal2_baru`.`Tanggal` AS `Tanggal`,`mon_t_penjualan_per_barang_modal2_baru`.`Customer` AS `Customer`,`mon_t_penjualan_per_barang_modal2_baru`.`Kategori` AS `Kategori`,`mon_t_penjualan_per_barang_modal2_baru`.`Kode Barang` AS `Kode Barang`,`mon_t_penjualan_per_barang_modal2_baru`.`Barang` AS `Barang`,sum(`mon_t_penjualan_per_barang_modal2_baru`.`Laba`) AS `Laba`,sum(`mon_t_penjualan_per_barang_modal2_baru`.`Total Bersih`) AS `Total Bersih` from `mon_t_penjualan_per_barang_modal2_baru` group by `mon_t_penjualan_per_barang_modal2_baru`.`Divisi`,`mon_t_penjualan_per_barang_modal2_baru`.`Tanggal`,`mon_t_penjualan_per_barang_modal2_baru`.`Customer`,`mon_t_penjualan_per_barang_modal2_baru`.`Kategori`,`mon_t_penjualan_per_barang_modal2_baru`.`Kode Barang`,`mon_t_penjualan_per_barang_modal2_baru`.`Barang`
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_pembelian_detail;
CREATE VIEW `mon_t_pembelian_detail` AS select `beli`.`no_transaksi` AS `No Transaksi`,`beli`.`no_order` AS `No Order`,`beli`.`tanggal` AS `tanggal`,`m_supplier`.`nama` AS `Supplier`,`beli`.`keterangan` AS `Note`,`m_barang`.`nama` AS `Barang`,`dtl`.`qty` AS `Jumlah`,`m_satuan`.`nama` AS `Satuan`,`dtl`.`harga_beli` AS `Harga Beli`,`dtl`.`diskon1` AS `Diskon Item 1`,`dtl`.`diskon2` AS `Diskon Item 2`,`dtl`.`diskon3` AS `Diskon Item 3`,`dtl`.`diskon4` AS `Diskon Item 4`,`beli`.`diskon1` AS `Diskon Total 1`,`beli`.`diskon2` AS `Diskon Total 2`,`beli`.`diskon3` AS `Diskon Total 3`,`beli`.`diskon4` AS `Diskon Total 4`,`beli`.`pajak` AS `pajak`,`beli`.`ppnbm` AS `ppnbm`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_beli`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`beli`.`diskon1`,`beli`.`diskon2`,`beli`.`diskon3`,`beli`.`diskon4`,`beli`.`pajak`,`beli`.`ppnbm`) * `dtl`.`qty` AS `Sub Total` from ((((((((`t_pembelian` `beli` join `m_divisi` on(`beli`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_kas` on(`beli`.`kd_kas` = `m_kas`.`kd_kas`)) join `m_bank` on(`m_kas`.`kd_bank` = `m_bank`.`kd_bank`)) join `t_pembelian_detail` `dtl` on(`beli`.`no_transaksi` = `dtl`.`no_transaksi`)) join `m_userx` on(`beli`.`kd_user` = `m_userx`.`kd_user`)) join `m_barang` on(`dtl`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_satuan` on(`dtl`.`kd_satuan` = `m_satuan`.`kd_satuan`)) join `m_supplier` on(`beli`.`kd_supplier` = `m_supplier`.`kd_supplier`))
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_penjualan_per_barang;
CREATE VIEW `mon_t_penjualan_per_barang` AS select `m_divisi`.`nama` AS `Divisi`,cast(`jual`.`tanggal` as date) AS `Tanggal`,`m_kategori`.`nama` AS `Kategori`,`dtl`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,avg(`tmp`.`harga`) AS `Modal`,sum(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty`) AS `Total Bersih`,avg(`tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) AS `Total Modal`,sum(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) AS `Laba`,sum((`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) / (case when `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` = 0 then 1 else `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` end) * 100) AS `Margin`,`m_userx`.`nama` AS `Petugas` from (((((((((`m_barang` join `t_penjualan` `jual`) join `t_penjualan_detail` `dtl` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi` and `m_barang`.`kd_barang` = `dtl`.`kd_barang`)) join `m_customer` on(`jual`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `m_userx` on(`jual`.`kd_user` = `m_userx`.`kd_user`)) join `m_barang_satuan` on(`dtl`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `dtl`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_barang_satuan` `bst` on(`bst`.`kd_barang` = `dtl`.`kd_barang` and `bst`.`kd_satuan` = `dtl`.`kd_satuan`)) join (select `dtl`.`kd_barang` AS `kd_barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_beli`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`bl`.`diskon1`,`bl`.`diskon2`,`bl`.`diskon3`,`bl`.`diskon4`,`bl`.`pajak`,`bl`.`ppnbm`) / `brg`.`jumlah` AS `harga` from (((`t_pembelian_detail` `dtl` join (select `dt`.`kd_barang` AS `kd_barang`,max(`dt`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` `dt` where `dt`.`harga_beli` > 0 group by `dt`.`kd_barang`) `akhir` on(`akhir`.`kd_barang` = `dtl`.`kd_barang` and `dtl`.`no_transaksi` = `akhir`.`nomor`)) join `t_pembelian` `bl` on(`dtl`.`no_transaksi` = `bl`.`no_transaksi`)) join `m_barang_satuan` `brg` on(`brg`.`kd_barang` = `dtl`.`kd_barang`))) `tmp` on(`tmp`.`kd_barang` = `dtl`.`kd_barang`)) where cast(`jual`.`tanggal` as date) = cast(current_timestamp() as date) group by `dtl`.`kd_barang`,`m_divisi`.`nama`,cast(`jual`.`tanggal` as date) order by `m_barang`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_penjualan_per_barang_modal2;
CREATE VIEW `mon_t_penjualan_per_barang_modal2` AS select `dtl`.`no_transaksi` AS `No. Transaksi`,`m_divisi`.`nama` AS `Divisi`,`GetFormatTanggal`(`jual`.`tanggal`) AS `Tanggal`,`m_customer`.`nama` AS `Customer`,`m_kategori`.`nama` AS `Kategori`,`dtl`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) / `bst`.`jumlah` AS `Harga`,`tmp`.`harga` AS `Modal`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` AS `Total Bersih`,`tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` AS `Total Modal`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` AS `Laba`,(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) / (`tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) * 100 AS `Margin`,`m_userx`.`nama` AS `Petugas` from (((((((((`m_barang` join `t_penjualan_detail` `dtl` on(`m_barang`.`kd_barang` = `dtl`.`kd_barang`)) join `t_penjualan` `jual` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi`)) join `m_customer` on(`jual`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `m_userx` on(`jual`.`kd_user` = `m_userx`.`kd_user`)) join `m_barang_satuan` on(`dtl`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `dtl`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_barang_satuan` `bst` on(`bst`.`kd_barang` = `dtl`.`kd_barang` and `bst`.`kd_satuan` = `dtl`.`kd_satuan`)) left join (select `dtl`.`kd_barang` AS `kd_barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_beli`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`bl`.`diskon1`,`bl`.`diskon2`,`bl`.`diskon3`,`bl`.`diskon4`,`bl`.`pajak`,`bl`.`ppnbm`) / `brg`.`jumlah` AS `harga` from (((((select `dt`.`kd_barang` AS `kd_barang`,max(`dt`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` `dt` where `dt`.`harga_beli` > 0 group by `dt`.`kd_barang`)) `akhir` join `t_pembelian_detail` `dtl` on(`akhir`.`kd_barang` = `dtl`.`kd_barang` and `dtl`.`no_transaksi` = `akhir`.`nomor`)) join `m_barang_satuan` `brg` on(`brg`.`kd_barang` = `dtl`.`kd_barang` and `brg`.`kd_satuan` = `dtl`.`kd_satuan`)) join `t_pembelian` `bl` on(`dtl`.`no_transaksi` = `bl`.`no_transaksi`)) where `dtl`.`harga_beli` > 0) `tmp` on(`dtl`.`kd_barang` = `tmp`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_master_andro;
CREATE VIEW `v_master_andro` AS select `m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama divisi`,`m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`m_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,ifnull(`m_barang_satuan`.`harga_jual` - `m_barang_divisi_diskon`.`diskon1` - `m_barang_divisi_diskon`.`diskon2` - `m_barang_divisi_diskon`.`diskon3` - `m_barang_divisi_diskon`.`diskon4`,`m_barang_satuan`.`harga_jual`) AS `harga_nett`,ifnull(`m_barang_divisi_diskon`.`diskon1` + `m_barang_divisi_diskon`.`diskon2` + `m_barang_divisi_diskon`.`diskon3` + `m_barang_divisi_diskon`.`diskon4`,0) AS `diskon`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_kategori`.`status` AS `status`,`m_barang`.`date_modif` AS `barang_modif`,`m_barang_satuan`.`date_modif` AS `barang_satuan_modif`,`m_satuan`.`date_modif` AS `satuan_modif`,`m_barang_divisi`.`date_modif` AS `barang_divisi_modif`,`m_divisi`.`date_modif` AS `divisi_modif`,`m_kategori`.`date_modif` AS `kategori_modif`,`m_barang_divisi_diskon`.`date_modif` AS `barang_diskon_modif` from ((((((`m_barang` join `m_barang_satuan` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`)) join `m_barang_divisi` on(`m_barang_divisi`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`m_divisi`.`kd_divisi` = `m_barang_divisi`.`kd_divisi`)) join `m_kategori` on(`m_kategori`.`kd_kategori` = `m_barang`.`kd_kategori`)) left join `m_barang_divisi_diskon` on(`m_barang_divisi_diskon`.`kd_barang` = `m_barang`.`kd_barang` and `m_barang_divisi_diskon`.`kd_divisi` = `m_divisi`.`kd_divisi` and `m_barang_divisi_diskon`.`kd_satuan` = `m_satuan`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_qty_max_penjualan;
CREATE VIEW `v_qty_max_penjualan` AS select `pd`.`kd_barang` AS `kd_barang`,`br`.`nama` AS `barang`,sum(`pd`.`qty` * `bs`.`jumlah`) / `bsmax`.`jumlah` AS `qty_max`,`bsmax`.`nama` AS `satuan_max` from ((((`t_penjualan` `pb` join `t_penjualan_detail` `pd` on(`pb`.`no_transaksi` = `pd`.`no_transaksi`)) join `m_barang_satuan` `bs` on(`pd`.`kd_barang` = `bs`.`kd_barang` and `pd`.`kd_satuan` = `bs`.`kd_satuan`)) join `m_barang` `br` on(`pd`.`kd_barang` = `br`.`kd_barang`)) join (select `bsmax`.`kd_barang` AS `kd_barang`,max(`bsmax`.`jumlah`) AS `jumlah`,`stn`.`nama` AS `nama` from (`m_barang_satuan` `bsmax` join `m_satuan` `stn` on(`bsmax`.`kd_satuan` = `stn`.`kd_satuan`)) where `bsmax`.`status` <> 0 group by `bsmax`.`kd_barang`) `bsmax` on(`pd`.`kd_barang` = `bsmax`.`kd_barang`)) group by `pd`.`kd_barang`,`bsmax`.`jumlah`,`br`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_penjualan_per_barang_modal2_hari_ini;
CREATE VIEW `mon_t_penjualan_per_barang_modal2_hari_ini` AS select `mon_t_penjualan_per_barang_modal2_baru`.`No. Transaksi` AS `No. Transaksi`,`mon_t_penjualan_per_barang_modal2_baru`.`Divisi` AS `Divisi`,`mon_t_penjualan_per_barang_modal2_baru`.`Tanggal` AS `Tanggal`,`mon_t_penjualan_per_barang_modal2_baru`.`Customer` AS `Customer`,`mon_t_penjualan_per_barang_modal2_baru`.`Kategori` AS `Kategori`,`mon_t_penjualan_per_barang_modal2_baru`.`Kode Barang` AS `Kode Barang`,`mon_t_penjualan_per_barang_modal2_baru`.`Barang` AS `Barang`,`mon_t_penjualan_per_barang_modal2_baru`.`Harga` AS `Harga`,`mon_t_penjualan_per_barang_modal2_baru`.`Modal` AS `Modal`,`mon_t_penjualan_per_barang_modal2_baru`.`Total Bersih` AS `Total Bersih`,`mon_t_penjualan_per_barang_modal2_baru`.`Total Modal` AS `Total Modal`,`mon_t_penjualan_per_barang_modal2_baru`.`Laba` AS `Laba`,`mon_t_penjualan_per_barang_modal2_baru`.`Margin` AS `Margin`,`mon_t_penjualan_per_barang_modal2_baru`.`Petugas` AS `Petugas` from `mon_t_penjualan_per_barang_modal2_baru` where cast(`mon_t_penjualan_per_barang_modal2_baru`.`Tanggal` as date) = cast(current_timestamp() as date)
//xyvdelimiter //
DROP VIEW IF EXISTS tes_no;
CREATE VIEW `tes_no` AS select `bardiv`.`kd_divisi` AS `kd_divisi`,`bardiv`.`kd_barang` AS `kd_barang`,sum(`det`.`qty`) AS `qty`,`bardiv`.`stok_awal` AS `stok_awal` from ((`m_barang_divisi` `bardiv` left join `t_penjualan_detail` `det` on(`bardiv`.`kd_barang` = `det`.`kd_barang`)) join `t_penjualan` `jual` on(`det`.`no_transaksi` = `jual`.`no_transaksi`)) group by `bardiv`.`kd_divisi`,`bardiv`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_andro_harga_jual_percustomer;
CREATE VIEW `v_andro_harga_jual_percustomer` AS select `v_net`.`kd_divisi` AS `kd_divisi`,`v_net`.`nama divisi` AS `nama divisi`,`v_net`.`kd_barang` AS `kd_barang`,`v_net`.`nama` AS `nama`,`v_net`.`kd_satuan` AS `kd_satuan`,`v_net`.`satuan` AS `satuan`,`v_net`.`jumlah` AS `jumlah`,`v_net`.`harga_nett` AS `harga_nett`,`v_net`.`diskon` AS `diskon`,`v_net`.`harga_jual` AS `harga_jual`,`a`.`harga_jual` AS `harga_terakhir`,`a`.`tanggal` AS `tanggal_terakhir`,`a`.`kd_customer` AS `kd_customer` from ((((select `t_penjualan_detail`.`kd_barang` AS `kd_barang`,`t_penjualan`.`kd_customer` AS `kd_customer`,`t_penjualan_detail`.`kd_satuan` AS `kd_satuan`,`t_penjualan_detail`.`harga_jual` AS `harga_jual`,`t_penjualan_detail`.`no_transaksi` AS `no_transaksi`,`t_penjualan`.`kd_divisi` AS `kd_divisi`,`t_penjualan`.`tanggal` AS `tanggal` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)))) `a` join (select `t_penjualan_detail`.`kd_barang` AS `kd_barang`,`t_penjualan`.`kd_customer` AS `kd_customer`,`t_penjualan`.`kd_divisi` AS `kd_divisi`,`t_penjualan_detail`.`kd_satuan` AS `kd_satuan`,max(`t_penjualan_detail`.`no_transaksi`) AS `nomor` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) group by `t_penjualan_detail`.`kd_barang`,`t_penjualan`.`kd_customer`,`t_penjualan_detail`.`kd_satuan`,`t_penjualan`.`kd_divisi`) `b` on(`a`.`kd_barang` = `b`.`kd_barang` and `a`.`kd_customer` = `b`.`kd_customer` and `a`.`no_transaksi` = `b`.`nomor` and `a`.`kd_satuan` = `b`.`kd_satuan` and `a`.`kd_divisi` = `b`.`kd_divisi`)) left join `v_master_andro` `v_net` on(`v_net`.`kd_barang` = `b`.`kd_barang` and `v_net`.`kd_satuan` = `b`.`kd_satuan` and `v_net`.`kd_divisi` = `b`.`kd_divisi`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_average_harga_barang_per_hari_ini;
CREATE VIEW `v_average_harga_barang_per_hari_ini` AS select `v_for_average_harga_barang`.`kd_barang` AS `kd_barang`,ifnull(sum(`v_for_average_harga_barang`.`qty` * `v_for_average_harga_barang`.`harga`),0) / (case when ifnull(sum(`v_for_average_harga_barang`.`qty`),0) = 0 then 1 else ifnull(sum(`v_for_average_harga_barang`.`qty`),0) end) AS `harga_average`,0 AS `harga_akhir` from `v_for_average_harga_barang` where `v_for_average_harga_barang`.`qty` > 0 and cast(`v_for_average_harga_barang`.`tanggal` as date) between `GetTanggalTerakhirTutupBuku`() and cast(current_timestamp() as date) group by `v_for_average_harga_barang`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_barang_for_display_contract;
CREATE VIEW `v_barang_for_display_contract` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`m_kategori`.`nama` AS `kategori`,group_concat(`m_satuan`.`nama` separator ',') AS `satuan`,group_concat(`m_satuan`.`kd_satuan` separator ',') AS `kd_satuan`,`m_barang_satuan`.`status` AS `status` from (((`m_barang` join `m_barang_satuan` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`status` <> 0 group by `m_barang_satuan`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_barang_for_order_penjualan;
CREATE VIEW `v_barang_for_order_penjualan` AS select `m_barang`.`nama` AS `nama`,`m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`kd_model` AS `kd_model`,`m_barang`.`kd_warna` AS `kd_warna`,`m_barang`.`kd_kategori` AS `kd_kategori`,`m_barang`.`kd_merk` AS `kd_merk`,`m_barang`.`ukuran` AS `ukuran`,`m_barang`.`keterangan` AS `keterangan_b`,`m_kategori`.`keterangan` AS `keterangan_k`,`m_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,round(`m_barang_satuan`.`harga_jual`,0) AS `harga_jual`,`m_barang_gambar`.`gambar` AS `gambar` from ((((`m_barang` join `m_barang_satuan` on(`m_barang_satuan`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_kategori` on(`m_kategori`.`kd_kategori` = `m_barang`.`kd_kategori`)) left join `m_barang_gambar` on(`m_barang_gambar`.`kd_barang` = `m_barang`.`kd_barang`)) where `m_barang`.`status` = 1 and `m_barang_satuan`.`status` = 1 order by `m_barang`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS v_barang_satuan;
CREATE VIEW `v_barang_satuan` AS select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `nama` from (`m_barang_satuan` join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_det_fmi;
CREATE VIEW `v_det_fmi` AS select `x_fmi_smi`.`nomor` AS `nomor`,`x_fmi_smi`.`barang` AS `barang`,`x_fmi_smi`.`divisi` AS `divisi`,`x_fmi_smi`.`kode` AS `kode`,`x_fmi_smi`.`total` AS `total`,`x_fmi_smi`.`FMI` AS `FMI`,`x_fmi_smi`.`SMI` AS `SMI`,`x_fmi_smi`.`periode` AS `periode`,`x_fmi_smi`.`awal` AS `awal`,`x_fmi_smi`.`akhir` AS `akhir`,`x_max`.`qty_max` AS `qty`,`x_max`.`satuan_max` AS `satuan_max` from (`x_fmi_smi` join `v_qty_max_penjualan` `x_max` on(`x_max`.`kd_barang` = `x_fmi_smi`.`kode`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_divisi_barang;
CREATE VIEW `v_divisi_barang` AS select `m_barang_divisi`.`kd_divisi` AS `kd_divisi`,`m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama` from (`m_barang_divisi` join `m_barang` on(`m_barang_divisi`.`kd_divisi` = `m_barang`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_dt_hutang_pembelian;
CREATE VIEW `v_dt_hutang_pembelian` AS select `v_hutang_pembelian`.`no_transaksi` AS `no_transaksi`,`v_hutang_pembelian`.`tanggal_tr` AS `tanggal_tr`,`t_pembelian`.`kd_supplier` AS `kd_supplier`,`v_hutang_pembelian`.`kd_divisi` AS `kd_divisi`,`v_hutang_pembelian`.`status` AS `status`,`v_hutang_pembelian`.`total_bersih` AS `total_bersih`,`v_hutang_pembelian`.`total_cicilan` AS `total_cicilan`,`v_hutang_pembelian`.`sisa_cicilan` AS `sisa_cicilan`,`v_hutang_pembelian`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo` from (`v_hutang_pembelian` join `t_pembelian` on(`t_pembelian`.`no_transaksi` = `v_hutang_pembelian`.`no_transaksi`)) where `v_hutang_pembelian`.`sisa_cicilan` > 1
//xyvdelimiter //
DROP VIEW IF EXISTS v_for_mutasi_item;
CREATE VIEW `v_for_mutasi_item` AS select `prediksi`.`no_order` AS `no_order`,`prediksi`.`kd_barang` AS `kd_barang`,`prediksi`.`kd_satuan` AS `kd_satuan`,`prediksi`.`qty_r` AS `qty_r`,`prediksi`.`qty` AS `qty`,`prediksi`.`need` AS `need`,`prediksi`.`Barang` AS `Barang`,`prediksi`.`Satuan` AS `Satuan`,`prediksi`.`Stok Sumber` AS `Stok Sumber`,`prediksi`.`Stok Tujuan` AS `Stok Tujuan`,`prediksi`.`kd_divisi_asal` AS `kd_divisi_asal`,`prediksi`.`kd_divisi_tujuan` AS `kd_divisi_tujuan`,`req`.`qty` AS `qty_req` from (((select `a`.`no_order` AS `no_order`,`a`.`kd_barang` AS `kd_barang`,`a`.`kd_satuan` AS `kd_satuan`,case when `a`.`need` - `c`.`stok` < 0 then 0 else `a`.`need` - `c`.`stok` end AS `qty_r`,`a`.`qty` AS `qty`,`a`.`need` AS `need`,`m_barang`.`nama` AS `Barang`,`m_satuan`.`nama` AS `Satuan`,`d`.`stok` AS `Stok Sumber`,`c`.`stok` AS `Stok Tujuan`,`b`.`kd_divisi_asal` AS `kd_divisi_asal`,`b`.`kd_divisi_tujuan` AS `kd_divisi_tujuan` from (((((`x_sp_t_mutasi_stok_detail` `a` join `x_sp_t_mutasi_stok` `b` on(`a`.`no_order` = `b`.`no_order`)) join `m_barang` on(`m_barang`.`kd_barang` = `a`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `a`.`kd_satuan`)) join `g_stok_akhir` `c` on(`c`.`kd_barang` = `a`.`kd_barang` and `c`.`kd_divisi` = `b`.`kd_divisi_tujuan`)) join `g_stok_akhir` `d` on(`d`.`kd_barang` = `a`.`kd_barang` and `d`.`kd_divisi` = `b`.`kd_divisi_asal`)) where `b`.`no_transaksi_realisasi` = '-')) `prediksi` left join (select `x_sp_t_mutasi_stok_request`.`id` AS `id`,`x_sp_t_mutasi_stok_request`.`kd_divisi_asal_request` AS `kd_divisi_asal_request`,`x_sp_t_mutasi_stok_request`.`kd_divisi_tujuan_request` AS `kd_divisi_tujuan_request`,`x_sp_t_mutasi_stok_request`.`kd_barang` AS `kd_barang`,`x_sp_t_mutasi_stok_request`.`kd_satuan` AS `kd_satuan`,`x_sp_t_mutasi_stok_request`.`qty` AS `qty`,`x_sp_t_mutasi_stok_request`.`tanggal` AS `tanggal`,`x_sp_t_mutasi_stok_request`.`no_order_realisasi` AS `no_order_realisasi` from `x_sp_t_mutasi_stok_request` where `x_sp_t_mutasi_stok_request`.`no_order_realisasi` = '-') `req` on(`req`.`kd_barang` = `prediksi`.`kd_barang` and `req`.`kd_divisi_asal_request` = `prediksi`.`kd_divisi_tujuan` and `req`.`kd_divisi_tujuan_request` = `prediksi`.`kd_divisi_asal`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_for_warning_alert;
CREATE VIEW `v_for_warning_alert` AS select `m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama divisi`,`bs`.`kd_satuan` AS `kd_satuan`,`bs`.`jumlah` AS `jumlah`,`bs`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`m_satuan`.`nama` AS `satuan`,ifnull(`bs`.`harga_jual` - `mdis`.`diskon1` - `mdis`.`diskon2` - `mdis`.`diskon3` - `mdis`.`diskon4`,`bs`.`harga_jual`) AS `harga_nett`,ifnull(`mdis`.`diskon1` + `mdis`.`diskon2` + `mdis`.`diskon3` + `mdis`.`diskon4`,0) AS `diskon`,`bs`.`harga_jual` AS `harga_jual`,`GetHargaBersih`(`tm_brg`.`Modal` * `bs`.`jumlah`,`t_pembelian`.`diskon1`,`t_pembelian`.`diskon2`,`t_pembelian`.`diskon3`,`t_pembelian`.`diskon4`,`t_pembelian`.`pajak`,0) AS `modal`,`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah` AS `Laba`,(`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah`) / (`tm_brg`.`Modal` * `bs`.`jumlah`) * 100 AS `Margin`,`bs`.`margin` AS `margin_tetapan` from (((((((`m_barang_satuan` `bs` join (select `pd`.`kd_barang` AS `kd_barang`,`GetHargaBersih`(`pd`.`harga_beli` / `mbs`.`jumlah`,`pd`.`diskon1`,`pd`.`diskon2`,`pd`.`diskon3`,`pd`.`diskon4`,0,0) AS `Modal`,`pd`.`no_transaksi` AS `no_tr` from ((((select `t_pembelian_detail`.`kd_barang` AS `kd_barang`,max(`t_pembelian_detail`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` group by `t_pembelian_detail`.`kd_barang`)) `tm` left join `t_pembelian_detail` `pd` on(`pd`.`kd_barang` = `tm`.`kd_barang` and `pd`.`no_transaksi` = `tm`.`nomor`)) join `m_barang_satuan` `mbs` on(`pd`.`kd_satuan` = `mbs`.`kd_satuan` and `pd`.`kd_barang` = `mbs`.`kd_barang`))) `tm_brg` on(`bs`.`kd_barang` = `tm_brg`.`kd_barang`)) join `m_barang` on(`m_barang`.`kd_barang` = `bs`.`kd_barang`)) join `m_barang_divisi` on(`m_barang_divisi`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`m_barang_divisi`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `bs`.`kd_satuan`)) join `t_pembelian` on(`tm_brg`.`no_tr` = `t_pembelian`.`no_transaksi`)) left join `m_barang_divisi_diskon` `mdis` on(`mdis`.`kd_barang` = `m_barang`.`kd_barang` and `mdis`.`kd_divisi` = `m_barang_divisi`.`kd_divisi` and `mdis`.`kd_satuan` = `bs`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_for_warning_alert_coba;
CREATE VIEW `v_for_warning_alert_coba` AS select `m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama divisi`,`bs`.`kd_satuan` AS `kd_satuan`,`bs`.`jumlah` AS `jumlah`,`bs`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,ifnull(`bs`.`harga_jual` - `mdis`.`diskon1` - `mdis`.`diskon2` - `mdis`.`diskon3` - `mdis`.`diskon4`,`bs`.`harga_jual`) AS `harga_nett`,ifnull(`mdis`.`diskon1` + `mdis`.`diskon2` + `mdis`.`diskon3` + `mdis`.`diskon4`,0) AS `Diskon`,`bs`.`harga_jual` AS `harga_jual`,`tm_brg`.`Modal` * `bs`.`jumlah` AS `modal`,`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah` AS `Laba`,(`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah`) / (`tm_brg`.`Modal` * `bs`.`jumlah`) * 100 AS `Margin`,`bs`.`margin` AS `margin_tetapan` from (((((`m_barang_satuan` `bs` join (select `pd`.`kd_barang` AS `kd_barang`,`pd`.`harga_beli` / `bs`.`jumlah` AS `Modal` from ((((select `t_pembelian_detail`.`kd_barang` AS `kd_barang`,max(`t_pembelian_detail`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` group by `t_pembelian_detail`.`kd_barang`)) `tm` left join `t_pembelian_detail` `pd` on(`pd`.`kd_barang` = `tm`.`kd_barang` and `pd`.`no_transaksi` = `tm`.`nomor`)) join `m_barang_satuan` `bs` on(`pd`.`kd_satuan` = `bs`.`kd_satuan` and `pd`.`kd_barang` = `bs`.`kd_barang`))) `tm_brg` on(`bs`.`kd_barang` = `tm_brg`.`kd_barang`)) join `m_barang` on(`m_barang`.`kd_barang` = `bs`.`kd_barang`)) join `m_barang_divisi` on(`m_barang_divisi`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`m_barang_divisi`.`kd_divisi` = `m_divisi`.`kd_divisi`)) left join `m_barang_divisi_diskon` `mdis` on(`mdis`.`kd_barang` = `m_barang`.`kd_barang` and `mdis`.`kd_divisi` = `m_barang_divisi`.`kd_divisi` and `mdis`.`kd_satuan` = `bs`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_harga_nett;
CREATE VIEW `v_harga_nett` AS select `mdiv`.`kd_divisi` AS `kd_divisi`,`b`.`kd_barang` AS `kd_barang`,`s`.`kd_satuan` AS `kd_satuan`,`bsat`.`harga_jual` AS `harga_jual`,`b`.`nama` AS `nama barang`,ifnull(`bsat`.`harga_jual` - `bdis`.`diskon1` - `bdis`.`diskon2` - `bdis`.`diskon3` - `bdis`.`diskon4`,`bsat`.`harga_jual`) AS `harga_nett`,`bsat`.`margin` AS `margin`,`s`.`nama` AS `satuan`,`mdiv`.`nama` AS `nama divisi` from (((((`m_barang_divisi` `bdiv` join `m_barang_satuan` `bsat` on(`bdiv`.`kd_barang` = `bsat`.`kd_barang`)) left join `m_barang_divisi_diskon` `bdis` on(`bdis`.`kd_barang` = `bsat`.`kd_barang` and `bdis`.`kd_satuan` = `bsat`.`kd_satuan`)) join `m_barang` `b` on(`b`.`kd_barang` = `bsat`.`kd_barang`)) join `m_divisi` `mdiv` on(`mdiv`.`kd_divisi` = `bdiv`.`kd_divisi`)) join `m_satuan` `s` on(`s`.`kd_satuan` = `bsat`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_harga_nett_perdivisi;
CREATE VIEW `v_harga_nett_perdivisi` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `Barang`,`m_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `Satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,`m_barang_satuan`.`harga_jual` - ifnull(`m_barang_divisi_diskon`.`diskon1`,0) - ifnull(`m_barang_divisi_diskon`.`diskon2`,0) - ifnull(`m_barang_divisi_diskon`.`diskon3`,0) - ifnull(`m_barang_divisi_diskon`.`diskon4`,0) AS `harga_jual`,`m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `Divisi` from (((((`m_barang` join `m_barang_satuan` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_barang_divisi` on(`m_barang_divisi`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`m_divisi`.`kd_divisi` = `m_barang_divisi`.`kd_divisi`)) left join `m_barang_divisi_diskon` on(`m_barang_divisi_diskon`.`kd_barang` = `m_barang`.`kd_barang` and `m_barang_divisi_diskon`.`kd_divisi` = `m_divisi`.`kd_divisi`)) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`status` <> 0 order by `m_barang`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS v_harga_perbarang_div;
CREATE VIEW `v_harga_perbarang_div` AS select `m_barang_divisi`.`kd_barang` AS `kd_barang`,`GetTanggalTerakhirTutupBuku`() AS `tanggal`,'STOK AWAL' AS `transaksi`,ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) AS `qty`,ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal` * `m_barang_divisi`.`harga_beli_awal`,0)),0) / (case when ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) = 0 then 1 else ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) end) AS `harga` from `m_barang_divisi` group by `m_barang_divisi`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_homepage_hm;
CREATE VIEW `v_homepage_hm` AS select `kategori`.`kode` AS `kode`,`kategori`.`nama` AS `nama`,`kategori`.`type` AS `type`,`kategori`.`keterangan` AS `keterangan`,`icon`.`file_name` AS `file_name`,`icon`.`banner_file_name` AS `banner_file_name`,`icon`.`banner_file_name_web` AS `banner_file_name_web` from (((select `m_kategori`.`kd_kategori` AS `kode`,`m_kategori`.`nama` AS `nama`,'k' AS `type`,`m_kategori`.`keterangan` AS `keterangan` from `m_kategori` where `m_kategori`.`keterangan` like '%*%')) `kategori` left join (select `m_icon`.`kode` AS `kode`,`m_icon`.`file_name` AS `file_name`,`m_icon`.`banner_file_name` AS `banner_file_name`,`m_icon`.`banner_file_name_web` AS `banner_file_name_web` from `m_icon`) `icon` on(`icon`.`kode` = `kategori`.`kode`)) union select `m_model`.`kd_model` AS `kd_model`,`m_model`.`nama` AS `nama`,'m' AS `m`,'NONE' AS `keterangan`,`m_icon`.`file_name` AS `file_name`,`m_icon`.`banner_file_name` AS `banner_file_name`,`m_icon`.`banner_file_name_web` AS `banner_file_name_web` from (`m_model` left join `m_icon` on(`m_icon`.`kode` = `m_model`.`kd_model`)) order by `keterangan`,`kode`
//xyvdelimiter //
DROP VIEW IF EXISTS v_hutang_pembelian2;
CREATE VIEW `v_hutang_pembelian2` AS select `pembelian`.`no_transaksi` AS `no_transaksi`,`pembelian`.`tanggal_tr` AS `tanggal_tr`,`pembelian`.`kd_divisi` AS `kd_divisi`,`pembelian`.`status` AS `status`,`pembelian`.`total_bersih` AS `total_bersih`,ifnull(`cicilan`.`nominal`,0) AS `total_cicilan`,case when `pembelian`.`total_bersih` - ifnull(`cicilan`.`nominal`,0) < 1 then 0 else `pembelian`.`total_bersih` - ifnull(`cicilan`.`nominal`,0) end AS `sisa_cicilan`,`pembelian`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,`pembelian`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo` from ((((select `t_pembelian`.`no_transaksi` AS `no_transaksi`,`t_pembelian`.`kd_divisi` AS `kd_divisi`,max(`t_pembelian`.`tanggal`) AS `tanggal_tr`,max(`t_pembelian`.`kd_divisi`) AS `max(kd_divisi)`,`t_pembelian`.`status` AS `status`,`t_pembelian`.`kd_supplier` AS `kd_supplier`,max(`t_pembelian`.`tanggal_jatuh_tempo`) AS `tanggal_jatuh_tempo`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_pembelian_detail`.`harga_beli`,`t_pembelian_detail`.`diskon1`,`t_pembelian_detail`.`diskon2`,`t_pembelian_detail`.`diskon3`,`t_pembelian_detail`.`diskon4`,0,0) * `t_pembelian_detail`.`qty`,`t_pembelian`.`diskon1`,`t_pembelian`.`diskon2`,`t_pembelian`.`diskon3`,`t_pembelian`.`diskon4`,`t_pembelian`.`pajak`,`t_pembelian`.`ppnbm`)) AS `total_bersih` from (`t_pembelian` join `t_pembelian_detail` on(`t_pembelian`.`no_transaksi` = `t_pembelian_detail`.`no_transaksi`)) where `t_pembelian`.`status` = 0 group by `t_pembelian_detail`.`no_transaksi`,`t_pembelian`.`kd_supplier`,`t_pembelian`.`kd_divisi`)) `pembelian` left join (select sum(`t_hutang_cicilan`.`nominal`) AS `nominal`,`t_hutang_cicilan`.`no_transaksi` AS `no_transaksi` from `t_hutang_cicilan` group by `t_hutang_cicilan`.`no_transaksi`) `cicilan` on(`cicilan`.`no_transaksi` = `pembelian`.`no_transaksi`)) join `m_supplier` on(`m_supplier`.`kd_supplier` = `pembelian`.`kd_supplier`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_kontrak_for_customer;
CREATE VIEW `v_kontrak_for_customer` AS select `supplier_data`.`kd_supplier` AS `kd_supplier`,`supplier_data`.`nama` AS `nama`,`supplier_data`.`alamat` AS `alamat`,`supplier_data`.`telepon` AS `telepon`,`supplier_data`.`fax` AS `fax`,`supplier_data`.`kontak` AS `kontak`,`supplier_data`.`hp` AS `hp`,`supplier_data`.`email` AS `email`,`supplier_data`.`id` AS `id`,`supplier_data`.`company_id` AS `company_id`,`supplier_data`.`db_name` AS `db_name`,`supplier_data`.`status` AS `status`,`supplier_data`.`kontrak_id` AS `kontrak_id` from (select `supplier`.`kd_supplier` AS `kd_supplier`,`supplier`.`nama` AS `nama`,`supplier`.`alamat` AS `alamat`,`supplier`.`telepon` AS `telepon`,`supplier`.`fax` AS `fax`,`supplier`.`kontak` AS `kontak`,`supplier`.`hp` AS `hp`,`supplier`.`email` AS `email`,`supplier`.`id` AS `id`,`supplier`.`company_id` AS `company_id`,`supplier`.`db_name` AS `db_name`,`supplier`.`status` AS `status`,`supplier`.`kontrak_id` AS `kontrak_id` from (select `m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,`m_supplier`.`alamat` AS `alamat`,`m_supplier`.`telepon` AS `telepon`,`m_supplier`.`fax` AS `fax`,`m_supplier`.`kontak` AS `kontak`,`m_supplier`.`hp` AS `hp`,`m_supplier`.`email` AS `email`,`mp_company`.`id` AS `id`,`mp_company`.`company_id` AS `company_id`,`mp_company`.`db_name` AS `db_name`,ifnull(`m_supplier_config`.`status`,0) AS `status`,ifnull(`m_supplier_config`.`kontrak_id`,-1) AS `kontrak_id` from ((`misterkong_mp`.`m_user_company` `mp_company` join `m_supplier` on(`m_supplier`.`email` = `mp_company`.`email_usaha`)) left join `m_supplier_config` on(`m_supplier_config`.`kd_supplier` = `m_supplier`.`kd_supplier`)) union all select `m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,`m_supplier`.`alamat` AS `alamat`,`m_supplier`.`telepon` AS `telepon`,`m_supplier`.`fax` AS `fax`,`m_supplier`.`kontak` AS `kontak`,`m_supplier`.`hp` AS `hp`,`m_supplier`.`email` AS `email`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none` from `m_supplier` group by `m_supplier`.`kd_supplier`) `supplier` group by `supplier`.`kd_supplier`) `supplier_data` order by `supplier_data`.`status`,`supplier_data`.`id` desc,`supplier_data`.`kontrak_id` desc
//xyvdelimiter //
DROP VIEW IF EXISTS v_kontrak_for_supplier;
CREATE VIEW `v_kontrak_for_supplier` AS select `customer_data`.`kd_customer` AS `kd_customer`,`customer_data`.`nama` AS `nama`,`customer_data`.`alamat` AS `alamat`,`customer_data`.`telepon` AS `telepon`,`customer_data`.`fax` AS `fax`,`customer_data`.`kontak` AS `kontak`,`customer_data`.`hp` AS `hp`,`customer_data`.`email` AS `email`,`customer_data`.`id` AS `id`,`customer_data`.`company_id` AS `company_id`,`customer_data`.`db_name` AS `db_name`,`customer_data`.`status` AS `status`,`customer_data`.`kontrak_id` AS `kontrak_id`,`customer_data`.`c_config_id` AS `c_config_id`,`customer_data`.`this_company_id` AS `this_company_id` from (select `customer`.`kd_customer` AS `kd_customer`,`customer`.`nama` AS `nama`,`customer`.`alamat` AS `alamat`,`customer`.`telepon` AS `telepon`,`customer`.`fax` AS `fax`,`customer`.`kontak` AS `kontak`,`customer`.`hp` AS `hp`,`customer`.`email` AS `email`,`customer`.`id` AS `id`,`customer`.`company_id` AS `company_id`,`customer`.`db_name` AS `db_name`,`customer`.`status` AS `status`,`customer`.`kontrak_id` AS `kontrak_id`,`customer`.`c_config_id` AS `c_config_id`,`customer`.`this_company_id` AS `this_company_id` from (select `m_customer`.`kd_customer` AS `kd_customer`,`m_customer`.`nama` AS `nama`,`m_customer`.`alamat` AS `alamat`,`m_customer`.`telepon` AS `telepon`,`m_customer`.`fax` AS `fax`,`m_customer`.`kontak` AS `kontak`,`m_customer`.`hp` AS `hp`,`m_customer`.`email` AS `email`,`mp_company`.`id` AS `id`,`mp_company`.`company_id` AS `company_id`,`mp_company`.`db_name` AS `db_name`,ifnull(`m_customer_config`.`status`,0) AS `status`,ifnull(`m_customer_config`.`kontrak_id`,-1) AS `kontrak_id`,ifnull(`m_customer_config`.`id`,0) AS `c_config_id`,`db_config`.`value` AS `this_company_id` from (((`misterkong_mp`.`m_user_company` `mp_company` join `m_customer` on(`m_customer`.`email` = `mp_company`.`email_usaha`)) join (select `g_db_config`.`value` AS `value` from `g_db_config` where `g_db_config`.`name` = 'id_company_id') `db_config`) left join `m_customer_config` on(`m_customer_config`.`kd_customer` = `m_customer`.`kd_customer`)) union all select `m_customer`.`kd_customer` AS `kd_customer`,`m_customer`.`nama` AS `nama`,`m_customer`.`alamat` AS `alamat`,`m_customer`.`telepon` AS `telepon`,`m_customer`.`fax` AS `fax`,`m_customer`.`kontak` AS `kontak`,`m_customer`.`hp` AS `hp`,`m_customer`.`email` AS `email`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none` from `m_customer` group by `m_customer`.`kd_customer`) `customer` group by `customer`.`kd_customer`) `customer_data` order by `customer_data`.`status`,`customer_data`.`id` desc,`customer_data`.`kontrak_id` desc
//xyvdelimiter //
DROP VIEW IF EXISTS v_margin_perbarang;
CREATE VIEW `v_margin_perbarang` AS select `bs`.`kd_satuan` AS `kd_satuan`,`bs`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`bs`.`harga_jual` AS `harga_jual`,`tm_brg`.`Modal` * `bs`.`jumlah` AS `modal`,`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah` AS `Laba`,(`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah`) / (`tm_brg`.`Modal` * `bs`.`jumlah`) * 100 AS `Margin`,`bs`.`margin` AS `margin_tetapan` from ((`m_barang_satuan` `bs` join (select `pd`.`kd_barang` AS `kd_barang`,`pd`.`harga_beli` / `bs`.`jumlah` AS `Modal` from ((((select `t_pembelian_detail`.`kd_barang` AS `kd_barang`,max(`t_pembelian_detail`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` group by `t_pembelian_detail`.`kd_barang`)) `tm` left join `t_pembelian_detail` `pd` on(`pd`.`kd_barang` = `tm`.`kd_barang` and `pd`.`no_transaksi` = `tm`.`nomor`)) join `m_barang_satuan` `bs` on(`pd`.`kd_satuan` = `bs`.`kd_satuan` and `pd`.`kd_barang` = `bs`.`kd_barang`))) `tm_brg` on(`bs`.`kd_barang` = `tm_brg`.`kd_barang`)) join `m_barang` on(`m_barang`.`kd_barang` = `bs`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_mon_penjualan_percustomer;
CREATE VIEW `v_mon_penjualan_percustomer` AS select cast(`jual`.`tanggal` as date) AS `tanggal`,`m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `divisi`,`m_customer`.`nama` AS `customer`,sum(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty`) AS `subtotal` from ((((`t_penjualan` `jual` join `t_penjualan_detail` `dtl` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi`)) join `m_pegawai` on(`dtl`.`kd_pegawai` = `m_pegawai`.`kd_pegawai`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_customer` on(`m_customer`.`kd_customer` = `jual`.`kd_customer`)) group by `jual`.`kd_customer`,cast(`jual`.`tanggal` as date),`jual`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_mon_penjualan_peruser;
CREATE VIEW `v_mon_penjualan_peruser` AS select cast(`jual`.`tanggal` as date) AS `tanggal`,`m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `divisi`,`m_userx`.`nama` AS `user`,`m_userx`.`kd_user` AS `kd_user`,`dtl`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `customer`,sum(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty`) AS `total` from ((((`t_penjualan` `jual` join `t_penjualan_detail` `dtl` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi`)) join `m_userx` on(`jual`.`kd_user` = `m_userx`.`kd_user`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_customer` on(`m_customer`.`kd_customer` = `jual`.`kd_customer`)) group by `dtl`.`no_transaksi`,`jual`.`kd_user`,`m_customer`.`kd_customer`,cast(`jual`.`tanggal` as date),`jual`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_not_moving_item;
CREATE VIEW `v_not_moving_item` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`kd_kategori` AS `kd_kategori`,`m_barang`.`kd_jenis_bahan` AS `kd_jenis_bahan`,`m_barang`.`kd_model` AS `kd_model`,`m_barang`.`kd_merk` AS `kd_merk`,`m_barang`.`kd_warna` AS `kd_warna`,`m_barang`.`ukuran` AS `ukuran`,`m_barang`.`nama` AS `nama`,`m_barang`.`keterangan` AS `keterangan`,`m_barang`.`status` AS `status`,`m_barang`.`status_pinjam` AS `status_pinjam`,`m_barang`.`pabrik` AS `pabrik`,`m_barang`.`tanggal_daftar` AS `tanggal_daftar`,`m_barang`.`date_add` AS `date_add`,`m_barang`.`user_add` AS `user_add`,`m_barang`.`date_modif` AS `date_modif`,`m_barang`.`user_modif` AS `user_modif`,`m_barang`.`divisi_id` AS `divisi_id` from `m_barang` where !(`m_barang`.`kd_barang` in (select `x_fmi_smi`.`kode` from `x_fmi_smi`)) and month(`m_barang`.`tanggal_daftar`) <= month(current_timestamp()) - 2 and `m_barang`.`status` = 1 order by `m_barang`.`tanggal_daftar` desc
//xyvdelimiter //
DROP VIEW IF EXISTS v_notif_mutasi_item;
CREATE VIEW `v_notif_mutasi_item` AS select `a`.`Kategori` AS `Kategori`,`a`.`kd_barang` AS `kd_barang`,`a`.`Barang` AS `Barang`,`a`.`kd_divisi` AS `kd_divisi`,`a`.`mutasi_akhir` AS `mutasi_akhir`,`a`.`avg_harian` AS `avg_harian`,`c`.`stok` AS `stok_sumber`,`a`.`stok_tujuan` AS `stok_tujuan`,round(`a`.`avg_harian` * 7,0) AS `need`,round(`a`.`avg_harian` * 7,0) AS `qty_mutasi`,`a`.`satuan` AS `satuan`,`a`.`kd_satuan` AS `kd_satuan` from (`v_spk_mutasi_barang_baru` `a` join (select `g_stok_akhir`.`kd_barang` AS `kd_barang`,`g_stok_akhir`.`stok` AS `stok` from `g_stok_akhir` where `g_stok_akhir`.`kd_divisi` = 'DAA000') `c` on(`a`.`kd_barang` = `c`.`kd_barang`)) where `c`.`stok` <> 0 and round(`a`.`avg_harian` * 7,0) <> 0 and round(`a`.`avg_harian` * 7,0) <= `c`.`stok` group by `a`.`kd_barang`,`a`.`kd_divisi` order by `a`.`Barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_opname_stok_andro_temp;
CREATE VIEW `v_opname_stok_andro_temp` AS select `stc_awal`.`kd_divisi` AS `kd_divisi`,`stc_awal`.`kd_barang` AS `kd_barang`,`stc_awal`.`kd_satuan` AS `kd_satuan`,current_timestamp() AS `tanggal`,`stc_awal`.`real_stok_divisi` AS `real_stok_divisi`,`g_stok_akhir`.`stok` AS `stok_sistem`,case when `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` >= 0 then `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` when `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` < 0 then (`stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok`) * -1 end AS `qty`,'Android Opname' AS `keterangan`,'UAA006' AS `kd_user`,case when `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` >= 0 then 2 when `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` < 0 then 3 end AS `status`,current_timestamp() AS `tanggal_server` from (`g_stok_akhir` join (select `t_opname_stok_tmp`.`kd_barang` AS `kd_barang`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`jumlah` = 1 and `m_barang_satuan`.`kd_barang` = `t_opname_stok_tmp`.`kd_barang`) AS `kd_satuan`,'DAA004' AS `kd_divisi`,`t_opname_stok_tmp`.`qty` - ifnull(`qty_jual`.`p_qty`,0) AS `real_stok_divisi` from (`t_opname_stok_tmp` left join (select `t_penjualan_detail`.`kd_barang` AS `kd_barang`,sum(`t_penjualan_detail`.`qty`) AS `p_qty` from `t_penjualan_detail` where `t_penjualan_detail`.`no_transaksi` like '%PS200109%' group by `t_penjualan_detail`.`kd_barang`) `qty_jual` on(`qty_jual`.`kd_barang` = `t_opname_stok_tmp`.`kd_barang`))) `stc_awal` on(`g_stok_akhir`.`kd_barang` = `stc_awal`.`kd_barang` and `g_stok_akhir`.`kd_divisi` = `stc_awal`.`kd_divisi`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_pembelian_barang_null;
CREATE VIEW `v_pembelian_barang_null` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,case when (select count(`t_pembelian`.`no_transaksi`) from (`t_pembelian` join `t_pembelian_detail` on(`t_pembelian`.`no_transaksi` = `t_pembelian_detail`.`no_transaksi`)) where `t_pembelian_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) = 0 then 'Baru' else 'Lama' end AS `sts_barang`,ifnull(`vb`.`avg`,0) AS `avg`,ifnull(`g_stok_akhir`.`stok`,0) AS `stok`,0 AS `Expired`,ifnull(`vb`.`avg` * `m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`,0) AS `need`,round(ifnull(`vb`.`avg` * `m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time` + `ans_item`.`buffer` * (`vb`.`avg` * `m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`) / 100,0),0) AS `qty`,`m_satuan`.`nama` AS `satuan`,`last_price`.`harga_beli` AS `harga_beli`,0 AS `Diskon`,`m_supplier_jadwal`.`hari` AS `Kunjungan` from (((((((((`m_barang_satuan` join `m_barang` on(`m_barang_satuan`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_barang_supplier` on(`m_barang`.`kd_barang` = `m_barang_supplier`.`kd_barang`)) join `m_supplier_jadwal` on(`m_supplier_jadwal`.`kd_supplier` = `m_barang_supplier`.`kd_supplier`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `g_stok_akhir` on(`m_barang`.`kd_barang` = `g_stok_akhir`.`kd_barang`)) left join `v_pembelian_barang_terakhir` `last_price` on(`m_barang_satuan`.`kd_barang` = `last_price`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `last_price`.`kd_satuan`)) left join `v_avg_barang_per_periode` `vb` on(`m_barang`.`kd_barang` = `vb`.`kd_barang`)) join `ans_item`) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`status` <> 0 and `last_price`.`harga_beli` is null group by `g_stok_akhir`.`kd_barang`,`m_barang`.`tanggal_daftar`,`m_barang_satuan`.`kd_satuan`,`m_satuan`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_bersih_bulan_ini;
CREATE VIEW `v_penjualan_bersih_bulan_ini` AS select `x_total_penjualan`.`tanggal_tr` AS `tanggal_tr`,sum(`x_total_penjualan`.`total`) AS `Total`,count(0) AS `jumlah` from `x_total_penjualan` where year(`x_total_penjualan`.`tanggal_tr`) = year(current_timestamp()) and month(`x_total_penjualan`.`tanggal_tr`) = month(current_timestamp()) group by dayofmonth(`x_total_penjualan`.`tanggal_tr`)
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_bersih_pertransaksi;
CREATE VIEW `v_penjualan_bersih_pertransaksi` AS select `t_penjualan_detail`.`no_transaksi` AS `no_transaksi`,`t_penjualan_detail`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`t_penjualan_detail`.`qty` AS `qty`,`t_penjualan_detail`.`harga_jual` AS `harga_jual`,`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0) * `t_penjualan_detail`.`qty` AS `total` from (`t_penjualan_detail` join `m_barang` on(`t_penjualan_detail`.`kd_barang` = `m_barang`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_order_dt_review;
CREATE VIEW `v_penjualan_order_dt_review` AS select `dt_order`.`no_order` AS `no_order`,`dt_order`.`kd_barang` AS `kd_barang`,`dt_order`.`kd_satuan` AS `kd_satuan`,`dt_order`.`harga_jual` AS `harga_jual`,`dt_order`.`qty` AS `qty`,`m_barang`.`nama` AS `barang`,`m_satuan`.`nama` AS `satuan` from ((`t_penjualan_order_detail` `dt_order` join `m_barang` on(`m_barang`.`kd_barang` = `dt_order`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `dt_order`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_order_review;
CREATE VIEW `v_penjualan_order_review` AS select `odr`.`no_order` AS `no_order`,`odr`.`tanggal` AS `tanggal`,`dt_odr`.`total` AS `total`,`odr`.`kd_user` AS `kd_user`,case when `odr`.`no_transaksi` = '-' then 'sedang diproses' else 'selesai' end AS `status_order` from (`t_penjualan_order` `odr` join (select `t_penjualan_order_detail`.`no_order` AS `no_order`,sum(`t_penjualan_order_detail`.`qty` * `t_penjualan_order_detail`.`harga_jual`) AS `total` from `t_penjualan_order_detail` group by `t_penjualan_order_detail`.`no_order`) `dt_odr` on(`dt_odr`.`no_order` = `odr`.`no_order`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_order_review_admin;
CREATE VIEW `v_penjualan_order_review_admin` AS select `odr`.`no_order` AS `no_order`,`odr`.`tanggal` AS `tanggal`,`dt_odr`.`total` AS `total`,`odr`.`kd_user` AS `kd_user`,case when `odr`.`no_transaksi` = '-' then 'butuh diproses' else 'selesai' end AS `status_order` from (`t_penjualan_order` `odr` join (select `t_penjualan_order_detail`.`no_order` AS `no_order`,sum(`t_penjualan_order_detail`.`qty` * `t_penjualan_order_detail`.`harga_jual`) AS `total` from `t_penjualan_order_detail` group by `t_penjualan_order_detail`.`no_order`) `dt_odr` on(`dt_odr`.`no_order` = `odr`.`no_order`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_piutang_penjualan_percustomer;
CREATE VIEW `v_piutang_penjualan_percustomer` AS select `penjualan`.`no_transaksi` AS `no_transaksi`,`penjualan`.`kd_customer` AS `kd_customer`,(select `m_customer`.`nama` from `m_customer` where `m_customer`.`kd_customer` = `penjualan`.`kd_customer`) AS `customer`,`penjualan`.`total_piutang` AS `total_piutang`,ifnull(`t_piutang_cicilan`.`total_cicilan`,0) AS `total_cicilan`,ifnull(`penjualan`.`total_piutang`,0) - ifnull(`t_piutang_cicilan`.`total_cicilan`,0) AS `sisa_cicilan`,`penjualan`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo` from (((select `t_penjualan_detail`.`no_transaksi` AS `no_transaksi`,`t_penjualan`.`kd_customer` AS `kd_customer`,`t_penjualan`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `total_piutang` from (`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) where `t_penjualan`.`status` = 0 group by `t_penjualan_detail`.`no_transaksi`,`t_penjualan`.`kd_customer`)) `penjualan` left join (select `t_piutang_cicilan`.`no_transaksi` AS `no_transaksi`,sum(`t_piutang_cicilan`.`nominal`) AS `total_cicilan` from `t_piutang_cicilan` group by `t_piutang_cicilan`.`no_transaksi`) `t_piutang_cicilan` on(`t_piutang_cicilan`.`no_transaksi` = `penjualan`.`no_transaksi`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_register_group_user;
CREATE VIEW `v_register_group_user` AS select `m_user_group`.`kd_group` AS `kd_group`,`m_user_group`.`nama` AS `nama`,`m_user_group`.`status` AS `status`,`m_user_group`.`date_add` AS `date_add`,`m_user_group`.`user_add` AS `user_add`,`m_user_group`.`date_modif` AS `date_modif`,`m_user_group`.`user_modif` AS `user_modif`,`m_user_group`.`divisi_id` AS `divisi_id` from `m_user_group`
//xyvdelimiter //
DROP VIEW IF EXISTS v_sp_penerimaan_order;
CREATE VIEW `v_sp_penerimaan_order` AS select `m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_satuan`.`nama` AS `satuan`,`m_barang`.`nama` AS `barang`,`tpod`.`no_order` AS `no_order`,`tpod`.`kd_barang` AS `kd_barang`,`tpod`.`kd_satuan` AS `kd_satuan`,`tpod`.`jenis` AS `jenis`,`tpod`.`qty` AS `qty`,`tpod`.`harga_beli` AS `harga_beli`,`tpod`.`diskon1` AS `diskon1`,`tpod`.`diskon2` AS `diskon2`,`tpod`.`diskon3` AS `diskon3`,`tpod`.`diskon4` AS `diskon4`,`tpod`.`date_add` AS `date_add`,`tpod`.`user_add` AS `user_add`,`tpod`.`date_modif` AS `date_modif`,`tpod`.`user_modif` AS `user_modif`,`tpod`.`divisi_id` AS `divisi_id`,`tpo`.`tanggal` AS `tanggal`,`m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,`tpo`.`no_transaksi` AS `no_transaksi` from (((((`t_pembelian_order` `tpo` join `t_pembelian_order_detail` `tpod` on(`tpo`.`no_order` = `tpod`.`no_order`)) join `m_supplier` on(`m_supplier`.`kd_supplier` = `tpo`.`kd_supplier`)) join `m_barang` on(`m_barang`.`kd_barang` = `tpod`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `tpod`.`kd_satuan`)) join `m_barang_satuan` on(`m_barang_satuan`.`kd_barang` = `tpod`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `tpod`.`kd_satuan`)) where !(`tpo`.`no_order` in (select `t_pembelian`.`no_order` from `t_pembelian`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_pembelian_order;
CREATE VIEW `v_spk_pembelian_order` AS select `c`.`kd_barang` AS `kd_barang`,`c`.`nama` AS `nama`,`c`.`sts_barang` AS `sts_barang`,`c`.`avg` AS `avg`,`c`.`stok` AS `stok`,round(`c`.`need`,0) AS `need`,case when `c`.`qty` <= 0 then 0 else round(`c`.`qty`,0) end AS `qty`,`c`.`kd_satuan` AS `kd_satuan`,`c`.`satuan` AS `satuan`,`c`.`harga_beli_terakhir` AS `harga_beli_terakhir`,`c`.`Diskon` AS `Diskon`,`c`.`kd_supplier` AS `kd_supplier`,`c`.`Supplier` AS `Supplier`,`c`.`Kunjungan` AS `Kunjungan`,`c`.`Kunjungan2` AS `Kunjungan2`,ifnull(`ab`.`stok`,0) AS `Expired` from ((`m_barang_supplier` join `v_spk_pembelian_order_tmp` `c` on(`m_barang_supplier`.`kd_barang` = `c`.`kd_barang` and `m_barang_supplier`.`kd_supplier` = `c`.`kd_supplier`)) left join (select `a`.`kd_barang` AS `kd_barang`,`a`.`stok` AS `stok` from (`g_stok_akhir` `a` join `ans_item_stored_divisi` `b`) where `a`.`kd_divisi` = `b`.`div_expired`) `ab` on(`ab`.`kd_barang` = `c`.`kd_barang`)) where `m_barang_supplier`.`status` <> 0
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_pembelian_order_besok;
CREATE VIEW `v_spk_pembelian_order_besok` AS select `v_spk_pembelian_order`.`kd_barang` AS `kd_barang`,`v_spk_pembelian_order`.`nama` AS `nama`,`v_spk_pembelian_order`.`sts_barang` AS `sts_barang`,`v_spk_pembelian_order`.`avg` AS `avg`,`v_spk_pembelian_order`.`stok` AS `stok`,`v_spk_pembelian_order`.`Expired` AS `Expired`,`v_spk_pembelian_order`.`need` AS `need`,`v_spk_pembelian_order`.`qty` AS `qty`,`v_spk_pembelian_order`.`kd_satuan` AS `kd_satuan`,`v_spk_pembelian_order`.`satuan` AS `satuan`,`v_spk_pembelian_order`.`harga_beli_terakhir` AS `harga_beli_terakhir`,`v_spk_pembelian_order`.`Diskon` AS `Diskon`,`v_spk_pembelian_order`.`kd_supplier` AS `kd_supplier`,`v_spk_pembelian_order`.`Supplier` AS `Supplier`,`v_spk_pembelian_order`.`Kunjungan` AS `Kunjungan`,`v_spk_pembelian_order`.`Kunjungan2` AS `Kunjungan2` from `v_spk_pembelian_order` where `v_spk_pembelian_order`.`Kunjungan` = date_format(curdate() + interval 1 day,'%w') or `v_spk_pembelian_order`.`Kunjungan2` = date_format(curdate() + interval 1 day,'%w')
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_pembelian_order_hari_ini;
CREATE VIEW `v_spk_pembelian_order_hari_ini` AS select `v_spk_pembelian_order`.`kd_barang` AS `kd_barang`,`v_spk_pembelian_order`.`nama` AS `nama`,`v_spk_pembelian_order`.`sts_barang` AS `sts_barang`,`v_spk_pembelian_order`.`avg` AS `avg`,`v_spk_pembelian_order`.`stok` AS `stok`,`v_spk_pembelian_order`.`Expired` AS `Expired`,`v_spk_pembelian_order`.`need` AS `need`,`v_spk_pembelian_order`.`qty` AS `qty`,`v_spk_pembelian_order`.`kd_satuan` AS `kd_satuan`,`v_spk_pembelian_order`.`satuan` AS `satuan`,`v_spk_pembelian_order`.`harga_beli_terakhir` AS `harga_beli_terakhir`,`v_spk_pembelian_order`.`Diskon` AS `Diskon`,`v_spk_pembelian_order`.`kd_supplier` AS `kd_supplier`,`v_spk_pembelian_order`.`Supplier` AS `Supplier`,`v_spk_pembelian_order`.`Kunjungan` AS `Kunjungan`,`v_spk_pembelian_order`.`Kunjungan2` AS `Kunjungan2` from `v_spk_pembelian_order` where `v_spk_pembelian_order`.`Kunjungan` = date_format(curdate(),'%w') or `v_spk_pembelian_order`.`Kunjungan2` = date_format(curdate(),'%w')
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_penjualan_detail;
CREATE VIEW `v_spk_penjualan_detail` AS select sum(`x_total_penjualan`.`total`) AS `total`,`x_total_penjualan`.`tanggal_tr` AS `tanggal_tr`,count(0) AS `jumlah`,`x_total_penjualan`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama` from (`x_total_penjualan` join `m_divisi` on(`x_total_penjualan`.`kd_divisi` = `m_divisi`.`kd_divisi`)) group by cast(`x_total_penjualan`.`tanggal_tr` as date),`x_total_penjualan`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_supplier_barang;
CREATE VIEW `v_supplier_barang` AS select `m_barang_supplier`.`kd_supplier` AS `kd_supplier`,`m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama` from (`m_barang_supplier` join `m_barang` on(`m_barang_supplier`.`kd_barang` = `m_barang`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_supplier_exist;
CREATE VIEW `v_supplier_exist` AS select `m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,date_format(`t_pembelian`.`tanggal`,'%W') AS `hari`,count(date_format(`t_pembelian`.`tanggal`,'%W')) AS `jumlahH` from (`m_supplier` left join `t_pembelian` on(`t_pembelian`.`kd_supplier` = `m_supplier`.`kd_supplier` and month(`t_pembelian`.`tanggal`) = month(current_timestamp()))) group by date_format(`t_pembelian`.`tanggal`,'%W'),`m_supplier`.`kd_supplier` order by `m_supplier`.`kd_supplier`
//xyvdelimiter //
DROP VIEW IF EXISTS v_t_opname_stok_tmp;
CREATE VIEW `v_t_opname_stok_tmp` AS select `t_opname_stok_tmp`.`id` AS `id`,`t_opname_stok_tmp`.`kd_barang` AS `kd_barang`,`t_opname_stok_tmp`.`qty` AS `qty`,`t_opname_stok_tmp`.`keterangan` AS `keterangan` from `t_opname_stok_tmp`
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_divisi;
CREATE VIEW `v_total_penjualan_divisi` AS select cast(`t_penjualan`.`tanggal_server` as date) AS `TANGGAL`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()))) group by cast(`t_penjualan`.`tanggal_server` as date),`t_penjualan`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_harian;
CREATE VIEW `v_total_penjualan_harian` AS select sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()) and dayofmonth(`t_penjualan`.`tanggal_server`) = dayofmonth(current_timestamp()))) group by cast(`t_penjualan`.`tanggal_server` as date),substr(`t_penjualan_detail`.`no_transaksi`,1,2)
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_perbulan;
CREATE VIEW `v_total_penjualan_perbulan` AS select cast(`t_penjualan`.`tanggal_server` as date) AS `TANGGAL`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()))) group by cast(`t_penjualan`.`tanggal_server` as date),substr(`t_penjualan_detail`.`no_transaksi`,1,2)
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_perbulan_hm;
CREATE VIEW `v_total_penjualan_perbulan_hm` AS select cast(`t_penjualan`.`tanggal_server` as date) AS `TANGGAL`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()) and `t_penjualan_detail`.`no_transaksi` like '%hm%')) group by cast(`t_penjualan`.`tanggal_server` as date),substr(`t_penjualan_detail`.`no_transaksi`,1,2)
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_perbulan_rm;
CREATE VIEW `v_total_penjualan_perbulan_rm` AS select cast(`t_penjualan`.`tanggal_server` as date) AS `TANGGAL`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0)) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()) and `t_penjualan_detail`.`no_transaksi` like '%rm%')) group by cast(`t_penjualan`.`tanggal_server` as date),substr(`t_penjualan_detail`.`no_transaksi`,1,2)
//xyvdelimiter //
DROP VIEW IF EXISTS v_user_item_cart;
CREATE VIEW v_user_item_cart AS SELECT vb.*,IFNULL(order_tmp.qty,0) FROM v_barang_for_order_penjualan vb LEFT JOIN (	SELECT kd_barang,kd_satuan,qty FROM t_penjualan_order_tmp ) order_tmp ON order_tmp.kd_barang=vb.kd_barang AND order_tmp.kd_satuan=vb.kd_satuan ORDER BY nama
//xyvdelimiter //
DROP VIEW IF EXISTS v_x_fmi_smi;
CREATE VIEW `v_x_fmi_smi` AS select `x_fmi_smi`.`periode` AS `periode`,`x_fmi_smi`.`nomor` AS `nomor`,`x_fmi_smi`.`barang` AS `barang`,`x_fmi_smi`.`total` AS `total`,`x_fmi_smi`.`qty_max` AS `qty_max`,`x_fmi_smi`.`satuan_max` AS `satuan_max`,`x_fmi_smi`.`awal` AS `awal`,`x_fmi_smi`.`akhir` AS `akhir`,`x_fmi_smi`.`divisi` AS `divisi`,`m_divisi`.`nama` AS `nama`,`x_fmi_smi`.`kode` AS `kode`,case when (`x_fmi_smi`.`FMI` = 1 and `x_fmi_smi`.`SMI` = 0) then 'FMI' when (`x_fmi_smi`.`FMI` = 0 and `x_fmi_smi`.`SMI` = 1) then 'SMI' else 'NOT MOVING' end AS `jenis` from (`x_fmi_smi` join `m_divisi` on(`m_divisi`.`kd_divisi` = `x_fmi_smi`.`divisi`))
//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIPenjualanNonRetur;
CREATE PROCEDURE mon_GetFMIPenjualanNonRetur(IN `inTGLAWAL` datetime,IN `inTGLAKHIR` datetime,IN `inDIVISI` varchar(20))
BEGIN

DECLARE varTotalPenjualan FLOAT(23,2);
DECLARE varKdBarang VARCHAR(100);
DECLARE varJumlah,varTotal,varSaldoTemp FLOAT;
DECLARE varNomorTemp BIGINT;
DECLARE varFMI,varSMI,selesai INT;

DECLARE cur_transaksi CURSOR FOR
SELECT rest.kdbarang, rest.qty, rest.total 
FROM rest;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET selesai = 1;

DROP TABLE IF EXISTS res;
DROP TABLE IF EXISTS rest;
CREATE TEMPORARY TABLE res(
awal DATE, 
akhir DATE, 
divisi VARCHAR(20), 
nomor BIGINT, 
kode VARCHAR(100), 
barang VARCHAR(100), 
divisibarang VARCHAR(100), 
departemen VARCHAR(100), 
kategori VARCHAR(100), 
subkategori VARCHAR(100),
qty FLOAT(23,2), 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT(1), 
SMI INT(1)
);
CREATE TEMPORARY TABLE rest(
awal DATETIME, 
akhir DATETIME, 
divisi VARCHAR(20), 
nomor BIGINT, 		
kdbarang VARCHAR(100), 		
qty FLOAT, 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT, 
SMI INT
);

INSERT INTO rest
SELECT   inTGLAWAL, inTGLAKHIR, inDIVISI,  0,
dtl.kd_barang, SUM(dtl.qty * bstn.jumlah) AS Jumlah, 
SUM(GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
jual.diskon3, jual.diskon4, jual.pajak, 0) * dtl.qty) AS total, 0, 0, 0
FROM         t_penjualan jual INNER JOIN
t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi INNER JOIN
m_barang brg ON dtl.kd_barang = brg.kd_barang INNER JOIN
m_divisi dv ON jual.kd_divisi = dv.kd_divisi INNER JOIN
m_barang_satuan bstn ON dtl.kd_barang = bstn.kd_barang AND dtl.kd_satuan = bstn.kd_satuan
WHERE dtl.jenis = 1 AND dv.kd_divisi = inDIVISI AND DATE(jual.tanggal) BETWEEN inTGLAWAL AND inTGLAKHIR
GROUP BY dtl.kd_barang
ORDER BY total DESC;

SET varTotalPenjualan=(SELECT SUM(rest.total)as Xtotal FROM rest);
SET varFMI=1;
SET varSMI=0;
SET varSaldoTemp=0;
SET varNomorTemp=0;

OPEN cur_transaksi;		
myloop: LOOP
FETCH cur_transaksi INTO varKdBarang,varJumlah,varTotal;
IF selesai THEN
LEAVE myloop;
END IF;
SET varNomorTemp = varNomorTemp + 1;
SET varSaldoTemp = varSaldoTemp + varTotal;

UPDATE rest SET rest.nomor=varNomorTemp, rest.saldo=varSaldoTemp,rest.FMI=varFMI,rest.SMI=varSMI WHERE rest.kdbarang=varKdBarang;
IF varSaldoTemp>(varTotalPenjualan*0.8) THEN
SET varFMI=1;
SET varSMI=0;
END IF;		
END LOOP;
CLOSE cur_transaksi;
INSERT INTO res 
SELECT tm.awal, tm.akhir, tm.divisi, 
nomor, tm.kdbarang, br.nama, mr.nama, mdl.nama, kt.nama, wrn.nama,
qty, total, saldo, FMI, SMI 
FROM rest tm 
INNER JOIN m_barang br ON tm.kdbarang = br.kd_barang 
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mr ON br.kd_merk = mr.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
ORDER BY nomor;
END


//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIRekapPenjualan;
CREATE PROCEDURE mon_GetFMIRekapPenjualan(IN `inTGL` date,IN `inDIVISI` varchar(20),IN `inPERIODE` int)
BEGIN
CALL mon_GetFMIStokNonReturn ( inTGL, inDIVISI, inPERIODE );
SELECT
DATE( jual.tanggal ) AS Tanggal,
SUM(
GetHargaBersih (
GetHargaBersih ( dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0 ),
jual.diskon1,
jual.diskon2,
jual.diskon3,
jual.diskon4,
jual.pajak,
0 
) * dtl.qty 
) AS Total,
fs.TotalFMI,
fs.TotalFMI Kosong,
fs.FMIKosongPersen,
fs.TotalSMI,
fs.TotalSMIKosong,
fs.SMIKosongPersen,
COUNT( DISTINCT jual.no_transaksi ) AS Transaksi,
SUM(
GetHargaBersih (
GetHargaBersih ( dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0 ),
jual.diskon1,
jual.diskon2,
jual.diskon3,
jual.diskon4,
jual.pajak,
0 
) * dtl.qty 
) / COUNT( DISTINCT jual.no_transaksi ) AS AverageBasket 
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
INNER JOIN m_divisi dv ON jual.kd_divisi = dv.kd_divisi
LEFT OUTER JOIN (
SELECT kode,
SUM( FMI ) AS TotalFMI,
SUM( FMIKosong ) AS TotalFMIKosong,
(
CASE

WHEN SUM( FMI ) = 0 THEN
SUM( FMIKosong ) * 100 ELSE ( SUM( FMIKosong ) * 100 ) / SUM( FMI ) 
END 
) AS FMIKosongPersen,
SUM( SMI ) AS TotalSMI,
SUM( SMIKosong ) AS TotalSMIKosong,
(
CASE

WHEN SUM( FMI ) > 0 THEN
( SUM( SMIKosong ) * 100 ) / SUM( SMI ) ELSE SUM( SMIKosong ) * 100 
END 
) AS SMIKosongPersen 
FROM
tempFMIStok 
) fs ON dtl.kd_barang=fs.kode 
WHERE
dtl.jenis = 1 
AND DATE(jual.tanggal) = inTGL 
AND dv.kd_divisi = inDIVISI 
GROUP BY
jual.tanggal,
fs.TotalFMI,
fs.TotalFMIKosong,
fs.FMIKosongPersen,
fs.TotalSMI,
fs.TotalSMIKosong,
fs.SMIKosongPersen;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIStok;
CREATE PROCEDURE mon_GetFMIStok(IN `inTGL` datetime,IN `inDIVISI` varchar(20),IN `inPERIODE` int)

BEGIN
DECLARE varAwal, varAkhir DATETIME;
SET varAwal =  CONCAT(YEAR(TIMESTAMPADD(month, 1 * -1, inTGL)),'-', MONTH(TIMESTAMPADD(month, 1 * -1, inTGL)),'-1');
SET varAkhir =YEAR(inTGL) + '-' + MONTH(inTGL) + '-1';
SET varAkhir = TIMESTAMPADD(DAY, -1, inTGL);
DROP TABLE IF EXISTS tempFMIStok;
DROP TABLE IF EXISTS tempBarang;
DROP TABLE IF EXISTS tempHistori;
CREATE TEMPORARY TABLE tempFMIStok(
tanggal DATETIME, 		
divisi VARCHAR(20), 		
kode VARCHAR(100), 
barang VARCHAR(100), 
divisibarang VARCHAR(100), 
departemen VARCHAR(100), 
kategori VARCHAR(100), 
subkategori VARCHAR(100),
stok FLOAT(23,2), 
satuan VARCHAR(30), 		
FMI INT(1), 
SMI INT(1),
FMIKosong INT(1),
SMIKosong INT(1)
);
CREATE TEMPORARY TABLE tempBarang(
kode VARCHAR(30),
stok FLOAT(15,2)
);
CREATE TEMPORARY TABLE tempHistori(
kode VARCHAR(30),
debet FLOAT(15,2),
kredit FLOAT(15,2)
);	

INSERT INTO tempBarang
SELECT kd_barang, 0
FROM t_penjualan jual INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
WHERE DATE(jual.tanggal) BETWEEN varAwal AND varAkhir AND dtl.jenis = 1 AND jual.kd_divisi = inDIVISI
GROUP BY kd_barang;
INSERT INTO tempHistori
SELECT  bd.kd_barang, bd.stok_awal AS Debet, 0 AS Kredit
FROM m_barang_divisi bd, m_barang_satuan bs, m_barang b, m_kategori k, tempBarang tm
WHERE bd.kd_barang = bs.kd_barang AND bs.jumlah = 1 
AND bd.kd_barang = b.kd_barang AND b.kd_kategori = k.kd_kategori AND k.status <> 2 
AND tm.kode = bd.kd_barang 
AND bd.kd_divisi = inDIVISI;


INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS Debet, SUM(d.qty * bs.jumlah) AS Kredit
FROM t_mutasi_stok_detail d, t_mutasi_stok t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku() 
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi_asal = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_mutasi_stok_detail d, t_mutasi_stok t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi_tujuan = inDIVISI
GROUP BY d.kd_barang;


INSERT INTO tempHistori
SELECT os.kd_barang, SUM(os.QTY* bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_opname_stok os, m_barang_satuan bs, tempBarang tm
WHERE os.status = 2 AND os.tanggal > GetTanggalTerakhirTutupBuku()
AND os.kd_barang = bs.kd_barang AND os.kd_satuan = bs.kd_satuan
AND tm.kode = os.kd_barang AND DATE(os.tanggal) <= inTGL
AND os.kd_divisi = inDIVISI
GROUP BY os.kd_barang;

INSERT INTO tempHistori
SELECT os.kd_barang, 0 AS DEBET, SUM(os.qty* bs.jumlah) AS KREDIT
FROM t_opname_stok os, m_barang_satuan bs, tempBarang tm
WHERE os.status <> 2 AND tanggal > GetTanggalTerakhirTutupBuku()
AND os.kd_barang = bs.kd_barang AND os.kd_satuan = bs.kd_satuan
AND tm.kode = os.kd_barang AND DATE(os.tanggal) <= inTGL
AND os.kd_divisi = inDIVISI
GROUP BY os.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_pembelian_detail d, t_pembelian t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS DEBET, SUM(d.qty * bs.jumlah) AS KREDIT
FROM t_pembelian_retur_detail d, t_pembelian_retur t, m_barang_satuan bs, tempBarang tm
WHERE d.no_retur = t.no_retur AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS DEBET, SUM(d.qty * bs.jumlah) AS KREDIT
FROM t_penjualan_detail d, t_penjualan t, m_barang b, m_kategori k, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = b.kd_barang AND b.kd_kategori = k.kd_kategori AND k.status <> 2
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_penjualan_retur_detail d, t_penjualan_retur t, m_barang_satuan bs, tempBarang tm
WHERE d.no_retur = t.no_retur AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

UPDATE tempBarang tb INNER JOIN 
(SELECT th.kode as kd_barang, SUM(th.debet-th.kredit) AS Total
FROM tempHistori th 
GROUP BY th.kode) tmp ON tmp.kd_barang = tb.kode
SET stok = tmp.total;

CALL mon_GetFMIPenjualanNonReturn(varAwal, varAkhir, inDIVISI);

INSERT INTO tempFMIStok
SELECT inTGL, inDIVISI, tm.kode, br.nama, mrk.nama, mdl.nama, kt.nama, wrn.nama, tm.stok, st.nama, fj.FMI, fj.SMI, 0, 0
FROM tempBarang tm INNER JOIN m_barang br on tm.kode = br.kd_barang
INNER JOIN m_barang_satuan bs ON tm.kode = bs.kd_barang
INNER JOIN m_satuan st ON bs.kd_satuan = st.kd_satuan
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mrk ON br.kd_merk = mrk.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
INNER JOIN res fj ON fj.kode = tm.kode
WHERE bs.jumlah = 1;

UPDATE tempFMIStok
SET FMIKosong = 1 
WHERE stok<= 0 AND FMI=1;


UPDATE tempFMIStok
SET SMIKosong = 1 
WHERE stok<= 0 AND SMI=1;

SELECT * FROM tempFMIStok;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIStokNonReturn;
CREATE PROCEDURE mon_GetFMIStokNonReturn(IN `inTGL` datetime,IN `inDIVISI` varchar(20),IN `inPERIODE` int)

BEGIN
DECLARE varAwal, varAkhir DATETIME;
SET varAwal =  CONCAT(YEAR(TIMESTAMPADD(month, 1 * -1, inTGL)),'-', MONTH(TIMESTAMPADD(month, 1 * -1, inTGL)),'-1');
SET varAkhir =YEAR(inTGL) + '-' + MONTH(inTGL) + '-1';
SET varAkhir = TIMESTAMPADD(DAY, -1, inTGL);
DROP TABLE IF EXISTS tempFMIStok;
DROP TABLE IF EXISTS tempBarang;
DROP TABLE IF EXISTS tempHistori;
CREATE TEMPORARY TABLE tempFMIStok(
tanggal DATETIME, 		
divisi VARCHAR(20), 		
kode VARCHAR(100), 
barang VARCHAR(100), 
divisibarang VARCHAR(100), 
departemen VARCHAR(100), 
kategori VARCHAR(100), 
subkategori VARCHAR(100),
stok FLOAT(23,2), 
satuan VARCHAR(30), 		
FMI INT(1), 
SMI INT(1),
FMIKosong INT(1),
SMIKosong INT(1)
);
CREATE TEMPORARY TABLE tempBarang(
kode VARCHAR(30),
stok FLOAT(15,2)
);
CREATE TEMPORARY TABLE tempHistori(
kode VARCHAR(30),
debet FLOAT(15,2),
kredit FLOAT(15,2)
);	

INSERT INTO tempBarang
SELECT kd_barang, 0
FROM t_penjualan jual INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
WHERE DATE(jual.tanggal) BETWEEN varAwal AND varAkhir AND dtl.jenis = 1 AND jual.kd_divisi = inDIVISI
GROUP BY kd_barang;
INSERT INTO tempHistori
SELECT  bd.kd_barang, bd.stok_awal AS Debet, 0 AS Kredit
FROM m_barang_divisi bd, m_barang_satuan bs, m_barang b, m_kategori k, tempBarang tm
WHERE bd.kd_barang = bs.kd_barang AND bs.jumlah = 1 
AND bd.kd_barang = b.kd_barang AND b.kd_kategori = k.kd_kategori AND k.status <> 2 
AND tm.kode = bd.kd_barang 
AND bd.kd_divisi = inDIVISI;


INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS Debet, SUM(d.qty * bs.jumlah) AS Kredit
FROM t_mutasi_stok_detail d, t_mutasi_stok t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku() 
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi_asal = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_mutasi_stok_detail d, t_mutasi_stok t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi_tujuan = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT os.kd_barang, SUM(os.QTY* bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_opname_stok os, m_barang_satuan bs, tempBarang tm
WHERE os.status = 2 AND os.tanggal > GetTanggalTerakhirTutupBuku()
AND os.kd_barang = bs.kd_barang AND os.kd_satuan = bs.kd_satuan
AND tm.kode = os.kd_barang AND DATE(os.tanggal) <= inTGL
AND os.kd_divisi = inDIVISI
GROUP BY os.kd_barang;
INSERT INTO tempHistori
SELECT os.kd_barang, 0 AS DEBET, SUM(os.qty* bs.jumlah) AS KREDIT
FROM t_opname_stok os, m_barang_satuan bs, tempBarang tm
WHERE os.status <> 2 AND tanggal > GetTanggalTerakhirTutupBuku()
AND os.kd_barang = bs.kd_barang AND os.kd_satuan = bs.kd_satuan
AND tm.kode = os.kd_barang AND DATE(os.tanggal) <= inTGL
AND os.kd_divisi = inDIVISI
GROUP BY os.kd_barang;
INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_pembelian_detail d, t_pembelian t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;
INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS DEBET, SUM(d.qty * bs.jumlah) AS KREDIT
FROM t_pembelian_retur_detail d, t_pembelian_retur t, m_barang_satuan bs, tempBarang tm
WHERE d.no_retur = t.no_retur AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;
INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS DEBET, SUM(d.qty * bs.jumlah) AS KREDIT
FROM t_penjualan_detail d, t_penjualan t, m_barang b, m_kategori k, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = b.kd_barang AND b.kd_kategori = k.kd_kategori AND k.status <> 2
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_penjualan_retur_detail d, t_penjualan_retur t, m_barang_satuan bs, tempBarang tm
WHERE d.no_retur = t.no_retur AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

UPDATE tempBarang tb INNER JOIN 
(SELECT th.kode as kd_barang, SUM(th.debet-th.kredit) AS Total
FROM tempHistori th 
GROUP BY th.kode) tmp ON tmp.kd_barang = tb.kode
SET stok = tmp.total;

CALL mon_GetFMIPenjualanNonReturn(varAwal, varAkhir, inDIVISI);

INSERT INTO tempFMIStok
SELECT inTGL, inDIVISI, tm.kode, br.nama, mrk.nama, mdl.nama, kt.nama, wrn.nama, tm.stok, st.nama, fj.FMI, fj.SMI, 0, 0
FROM tempBarang tm INNER JOIN m_barang br on tm.kode = br.kd_barang
INNER JOIN m_barang_satuan bs ON tm.kode = bs.kd_barang
INNER JOIN m_satuan st ON bs.kd_satuan = st.kd_satuan
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mrk ON br.kd_merk = mrk.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
INNER JOIN res fj ON fj.kode = tm.kode
WHERE bs.jumlah = 1;

UPDATE tempFMIStok
SET FMIKosong = 1 
WHERE stok<= 0 AND FMI=1;


UPDATE tempFMIStok
SET SMIKosong = 1 
WHERE stok<= 0 AND SMI=1;

END


//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetPembelianPrediksi;
CREATE PROCEDURE mon_GetPembelianPrediksi(IN `inDIVUTAMA` VARCHAR ( 20 ),IN `inDIVEXP` VARCHAR ( 20 ),IN `inSUPP` VARCHAR ( 20 ),IN `inPERIODE` INT ( 5 ),IN `inSAMPLING` INT ( 5 ),IN `inTGL` datetime)

BEGIN
DROP TABLE IF EXISTS hasil;
DROP TABLE IF EXISTS hasilMonGStok;
CREATE TEMPORARY TABLE hasilMonGStok (
kd_div VARCHAR ( 20 ),
divisi VARCHAR ( 20 ),
kdbarang VARCHAR ( 20 ),
barang VARCHAR ( 20 ),
stokakhir FLOAT ( 15, 2 ),
stok_akhir FLOAT ( 15, 2 ) 
);
CREATE TEMPORARY TABLE hasil (
kd_barang VARCHAR ( 20 ),
barang VARCHAR ( 50 ),
barang_baru INT ( 1 ),
avg_harian FLOAT ( 15, 2 ),
stok FLOAT ( 15, 2 ),
expired FLOAT ( 15, 2 ),
jumlah FLOAT ( 15, 2 ),
qty FLOAT ( 15, 2 ),
kd_satuan VARCHAR ( 20 ),
satuan VARCHAR ( 20 ),
harga DOUBLE ( 15, 2 ),
diskon VARCHAR ( 20 ),
subtotal DOUBLE ( 15, 2 ) 
);
INSERT INTO hasilMonGStok SELECT
* 
FROM
mon_g_stok_barang_per_divisi;

INSERT INTO hasil SELECT
gtt.kdbarang,
gtt.barang,
(
CASE				
WHEN (
SELECT
COUNT( t_pembelian.no_transaksi ) 
FROM
t_pembelian
INNER JOIN t_pembelian_detail ON t_pembelian.no_transaksi = t_pembelian_detail.no_transaksi
INNER JOIN hasilMonGStok ON hasilMonGStok.kdbarang=t_pembelian_detail.kd_barang				
) = 0 THEN
1 ELSE 0 
END 
) AS barang_baru,
(
CASE						
WHEN ( SELECT SUM( stokakhir ) FROM hasilMonGStok ) = 0 THEN
ROUND(
IFNULL(
(
SELECT
SUM( m_barang_satuan.jumlah * t_penjualan_detail.qty ) / ( 7 * 3 ) 
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang 
AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
INNER JOIN hasilMonGStok AS lfj ON lfj.kdbarang = t_penjualan_detail.kd_barang 
WHERE
kd_divisi <> 'DAA001' 									
AND DATE( tanggal ) >= (
SELECT
TIMESTAMPADD ( DAY, (7 * 3) *- 1, MAX(tanggal) ) 
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN hasilMonGStok AS lfg ON lfg.kdbarang = t_penjualan_detail.kd_barang 
WHERE
kd_divisi <> 'DAA001' 										
) 
),
0 
),
2 
) ELSE ROUND(
IFNULL(
(
SELECT
SUM( m_barang_satuan.jumlah * t_penjualan_detail.qty ) / (7 * 3) 
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang 
AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
INNER JOIN hasilMonGStok AS lfh ON lfh.kdbarang = t_penjualan_detail.kd_barang 
WHERE
kd_divisi <> 'DAA001' 									
AND DATE( tanggal ) >= ( SELECT TIMESTAMPADD( DAY, (7 * 3 ) *- 1, '2019-01-30' ) ) 
),
0 
),
2 
) 
END 
) AS avg_harian,
( SELECT SUM( stokakhir ) FROM hasilMonGStok )as stok,
0,
0,
0,
m_barang_satuan.kd_satuan,
m_satuan.nama,
IFNULL(
(
SELECT
bd.harga_beli / bs.jumlah 
FROM
t_pembelian_detail bd
INNER JOIN t_pembelian bl ON bd.no_transaksi = bl.no_transaksi
INNER JOIN m_barang_satuan bs ON bd.kd_barang = bs.kd_barang 
AND bd.kd_satuan = bs.kd_satuan
INNER JOIN hasilMonGStok AS lfq ON lfq.kdbarang = bd.kd_barang 
WHERE
bd.harga_beli <> 0 
ORDER BY
bl.tanggal DESC 
LIMIT 1 
),
0 
)as harga,
'0',
0 
FROM
m_barang
INNER JOIN m_kategori ON m_barang.kd_kategori = m_kategori.kd_kategori
INNER JOIN hasilMonGStok gtt ON m_barang.kd_barang = gtt.kdbarang
INNER JOIN m_barang_satuan ON m_barang.kd_barang = m_barang_satuan.kd_barang
INNER JOIN m_satuan ON m_barang_satuan.kd_satuan = m_satuan.kd_satuan
INNER JOIN m_barang_supplier ON gtt.kdbarang = m_barang_supplier.kd_barang 
WHERE
m_barang.STATUS <> 0 
AND m_barang_satuan.jumlah = 1 
AND m_barang_satuan.STATUS <> 0 
AND gtt.kd_div <> 'DAA001' 
GROUP BY
gtt.kdbarang,
gtt.barang,
m_barang.tanggal_daftar,
m_barang_satuan.kd_satuan,
m_satuan.nama;
UPDATE hasilMonGStok bb
INNER JOIN hasil res ON bb.kdbarang = res.kd_barang 
SET res.expired = bb.stokakhir 
WHERE
bb.kd_div = 'DAA001';
SELECT * FROM hasil;
END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_cek_stok_pertransaksi;
CREATE PROCEDURE p_cek_stok_pertransaksi(IN INkd_barang VARCHAR(30))

BEGIN
SELECT * FROM
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=beli_dt.kd_barang AND kd_satuan=beli_dt.kd_satuan)) AS jumlah_beli,count(beli.no_transaksi) AS cnt_pembelian FROM t_pembelian beli INNER JOIN t_pembelian_detail beli_dt ON beli.no_transaksi=beli_dt.no_transaksi
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi) beli
INNER JOIN
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=jual_dt.kd_barang AND kd_satuan=jual_dt.kd_satuan)) AS jumlah_terjual,count(jual.no_transaksi) AS cnt_penjualan FROM t_penjualan jual INNER JOIN t_penjualan_detail jual_dt ON jual.no_transaksi=jual_dt.no_transaksi
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi) jual
LEFT JOIN
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=beli_dt.kd_barang AND kd_satuan=beli_dt.kd_satuan)) AS jumlah_retur_beli,count(beli.no_retur) AS cnt_pembelian_retur FROM t_pembelian_retur beli INNER JOIN t_pembelian_retur_detail beli_dt ON beli.no_retur=beli_dt.no_retur
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi) beli_retur
ON beli.kd_barang=beli_retur.kd_barang
left JOIN
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=jual_dt.kd_barang AND kd_satuan=jual_dt.kd_satuan)) AS jumlah_retur_jual,count(jual.no_retur) AS cnt_penjualan_retur FROM t_penjualan_retur jual INNER JOIN t_penjualan_retur_detail jual_dt ON jual.no_retur=jual_dt.no_retur
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi) jual_retur
ON jual_retur.kd_barang=jual.kd_barang
left JOIN
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=mutasi_dt.kd_barang AND kd_satuan=mutasi_dt.kd_satuan)) AS jumlah_mutasi,count(mutasi.no_transaksi) AS cnt_mutasi FROM t_mutasi_stok mutasi INNER JOIN t_mutasi_stok_detail mutasi_dt ON mutasi.no_transaksi=mutasi_dt.no_transaksi
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi_asal) mutasi
ON jual_retur.kd_barang=mutasi.kd_barang
LEFT JOIN
(SELECT kd_barang,SUM(qty) as qty_opname FROM t_opname_stok WHERE kd_barang=INkd_barang GROUP BY kd_barang) opname
ON opname.kd_barang=beli.kd_barang
;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_for_mutasi_barang;
CREATE PROCEDURE p_for_mutasi_barang(IN `divisi` varchar(6),IN `periode` int(11))

BEGIN
SELECT m_barang.kd_barang,m_barang.nama,info_avg.kd_divisi,stok,avg,ROUND(avg*periode+0.5) as recommended,
CASE
WHEN (ROUND(avg*periode)-stok)<0 THEN 0
ELSE (ROUND(avg*periode)-stok)
END as qty_mutasi
FROM
(SELECT kd_barang,kd_divisi,stok,
CASE 
WHEN g_stok_akhir.stok = 0 THEN
ROUND( IFNULL(
(SELECT SUM(m_barang_satuan.jumlah * t_penjualan_detail.qty) 
/ CAST(ans_item.periode * ans_item.sampling AS INT)
FROM t_penjualan INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi INNER JOIN 
m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
INNER JOIN ans_item
INNER JOIN ans_item_stored_divisi a
WHERE kd_divisi <> a.div_expired AND t_penjualan_detail.kd_barang = g_stok_akhir.kd_barang
AND tanggal >= 				
(SELECT DATE_ADD(MAX(tanggal), INTERVAL (CAST(ans_item.periode * ans_item.sampling AS INT) *-1) day) 
FROM t_penjualan INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi 
INNER JOIN ans_item
INNER JOIN ans_item_stored_divisi a
WHERE kd_divisi <> a.div_expired AND t_penjualan_detail.kd_barang = g_stok_akhir.kd_barang)
GROUP BY t_penjualan_detail.kd_barang
), 0), 2)			
ELSE
ROUND( IFNULL(
(SELECT SUM(m_barang_satuan.jumlah * t_penjualan_detail.qty) 
/ CAST(ans_item.periode * ans_item.sampling AS INT)
FROM t_penjualan INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi INNER JOIN 
m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
INNER JOIN ans_item
INNER JOIN ans_item_stored_divisi a
WHERE kd_divisi <> a.div_expired AND t_penjualan_detail.kd_barang = g_stok_akhir.kd_barang
AND tanggal >= (SELECT DATE_ADD(CURDATE(), INTERVAL (CAST(ans_item.periode * ans_item.sampling AS INT) *-1) day) )
GROUP BY t_penjualan_detail.kd_barang
), 0), 2)
END as avg
FROM
g_stok_akhir) info_avg
INNER JOIN m_barang ON m_barang.kd_barang=info_avg.kd_barang
INNER JOIN m_barang_divisi ON info_avg.kd_barang=m_barang_divisi.kd_barang AND m_barang_divisi.kd_divisi= info_avg.kd_divisi
INNER JOIN m_kategori ON m_barang.kd_kategori=m_kategori.kd_kategori
WHERE m_barang.`status`<>0 AND m_kategori.status=1
AND  info_avg.kd_divisi=divisi;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_prediksi_beli_order_notif_nonschedule;
CREATE PROCEDURE p_prediksi_beli_order_notif_nonschedule(IN INkd_divisi_tujuan CHAR (6),IN INsampling INT,IN INperiode INT)

BEGIN
SELECT a.*,stok, round(avg_satuan_terkecil*INperiode) as need,round(avg_satuan_terkecil*INperiode)-stok as qty,harga_beli,supplier FROM
(
SELECT 
avg_tmp.kd_barang as kd_barang,
INkd_divisi_tujuan as kd_divisi,
(select kd_satuan FROM m_barang_satuan WHERE kd_barang=avg_tmp.kd_barang AND jumlah=1) as satuan_terkecil,
sum(avg_tmp.qty*jumlah) as avg_satuan_terkecil
FROM
(SELECT
kd_barang,kd_satuan,ROUND(AVG(qty),2) as qty
FROM t_penjualan jual INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi= dt_jual.no_transaksi
WHERE date(tanggal)<= DATE_ADD(DATE(NOW()),INTERVAL -1 DAY)  AND DATE(tanggal)>= DATE_ADD(DATE(NOW()),INTERVAL (-1*(INsampling*INperiode))-1 DAY)
AND kd_divisi=INkd_divisi_tujuan
GROUP BY kd_barang,kd_satuan) avg_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=avg_tmp.kd_barang AND m_barang_satuan.kd_satuan=avg_tmp.kd_satuan
GROUP BY kd_barang
UNION 
SELECT
brg_divisi.kd_barang,
brg_divisi.kd_divisi,
(
SELECT
kd_satuan
FROM
m_barang_satuan
WHERE
kd_barang = brg_divisi.kd_barang
AND jumlah = 1
) AS kd_satuan,
IFNULL(max_tr.avg_item, 0) AS avg_item
FROM
(
SELECT
kd_barang,
kd_divisi
FROM
m_barang_divisi
WHERE
`status` <> 0
AND kd_divisi = INkd_divisi_tujuan
AND kd_barang NOT IN (
SELECT
kd_barang
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi = dt_jual.no_transaksi
WHERE
kd_divisi = INkd_divisi_tujuan
AND date(tanggal) <= DATE(NOW())
AND DATE(tanggal) > DATE_ADD(date(NOW()), INTERVAL - 30 DAY)
)
) brg_divisi
LEFT JOIN (
SELECT
t_penjualan_detail.kd_barang,
t_penjualan.kd_divisi,
ROUND(SUM(qty * jumlah) / 30, 2) AS avg_item
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN (
SELECT
MAX(date(tanggal)) last_sale,
kd_barang,
kd_divisi
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
GROUP BY
kd_divisi,
kd_barang
) max_tgl ON t_penjualan_detail.kd_barang = max_tgl.kd_barang
AND t_penjualan.kd_divisi = max_tgl.kd_divisi
INNER JOIN m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang
AND t_penjualan_detail.kd_satuan = m_barang_satuan.kd_satuan
WHERE
DATE(t_penjualan.tanggal) >= DATE_ADD(
max_tgl.last_sale,
INTERVAL - 30 DAY
)
AND DATE(t_penjualan.tanggal) < max_tgl.last_sale
AND t_penjualan.kd_divisi = INkd_divisi_tujuan
GROUP BY
kd_barang,
kd_divisi
) max_tr ON max_tr.kd_barang = brg_divisi.kd_barang
AND max_tr.kd_divisi = brg_divisi.kd_divisi
WHERE brg_divisi.kd_barang NOT IN(
SELECT 
avg_tmp.kd_barang
FROM
(SELECT
kd_barang,kd_satuan,ROUND(AVG(qty),2) as qty
FROM t_penjualan jual INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi= dt_jual.no_transaksi
WHERE date(tanggal)<= DATE_ADD(DATE(NOW()),INTERVAL -1 DAY)  AND DATE(tanggal)>= DATE_ADD(DATE(NOW()),INTERVAL -31 DAY)
AND kd_divisi=INkd_divisi_tujuan
GROUP BY kd_barang,kd_satuan) avg_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=avg_tmp.kd_barang AND m_barang_satuan.kd_satuan=avg_tmp.kd_satuan
GROUP BY kd_barang)
) a
INNER JOIN
(SELECT t_pembelian_detail.kd_barang,t_pembelian.kd_supplier,harga_brg_min.harga_beli,nama as supplier FROM 
m_supplier INNER JOIN
t_pembelian inner join t_pembelian_detail ON t_pembelian.no_transaksi=t_pembelian_detail.no_transaksi
ON t_pembelian.kd_supplier=m_supplier.kd_supplier
INNER JOIN
(SELECT kd_barang,MIN(harga_beli) as harga_beli FROM 
(SELECT dt_sup.kd_barang,dt_sup.kd_supplier,harga_beli FROM 
(SELECT m_supplier_jadwal.kd_supplier,kd_barang FROM m_barang_supplier INNER JOIN m_supplier_jadwal ON m_supplier_jadwal.kd_supplier=m_barang_supplier.kd_supplier
WHERE visit_time=0) dt_sup
INNER JOIN
(SELECT kd_barang, kd_supplier,harga_beli
FROM t_pembelian INNER JOIN t_pembelian_detail
ON t_pembelian.no_transaksi=t_pembelian_detail.no_transaksi
) dt_beli
ON dt_sup.kd_supplier=dt_beli.kd_supplier AND dt_beli.kd_barang=dt_sup.kd_barang) beli_barang
GROUP BY kd_barang) harga_brg_min
ON harga_brg_min.kd_barang=t_pembelian_detail.kd_barang AND t_pembelian_detail.harga_beli=harga_brg_min.harga_beli
GROUP BY t_pembelian_detail.kd_barang,t_pembelian.kd_supplier,harga_brg_min.harga_beli) min_harga_supplier
ON min_harga_supplier.kd_barang=a.kd_barang

LEFT JOIN g_stok_akhir ON g_stok_akhir.kd_barang=a.kd_barang AND g_stok_akhir.kd_divisi=a.kd_divisi
WHERE ROUND(avg_satuan_terkecil*INperiode)-stok>1
;


END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_prediksi_mutasi;
CREATE PROCEDURE p_prediksi_mutasi(IN INkd_divisi_tujuan CHAR (6),IN INsampling INT,IN INperiode INT)

BEGIN
SELECT a.*,stok, round(avg_satuan_terkecil*INperiode) as need,round(avg_satuan_terkecil*INperiode)-stok as qty_mutasi FROM
(
SELECT 
avg_tmp.kd_barang as kd_barang,
INkd_divisi_tujuan as kd_divisi,
(select kd_satuan FROM m_barang_satuan WHERE kd_barang=avg_tmp.kd_barang AND jumlah=1) as satuan_terkecil,
sum(avg_tmp.qty*jumlah) as avg_satuan_terkecil
FROM
(SELECT
kd_barang,kd_satuan,ROUND(AVG(qty),2) as qty
FROM t_penjualan jual INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi= dt_jual.no_transaksi
WHERE date(tanggal)<= DATE_ADD(DATE(NOW()),INTERVAL -1 DAY)  AND DATE(tanggal)>= DATE_ADD(DATE(NOW()),INTERVAL (-1*(INsampling*INperiode))-1 DAY)
AND kd_divisi=INkd_divisi_tujuan
GROUP BY kd_barang,kd_satuan) avg_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=avg_tmp.kd_barang AND m_barang_satuan.kd_satuan=avg_tmp.kd_satuan
GROUP BY kd_barang
UNION 
SELECT
brg_divisi.kd_barang,
brg_divisi.kd_divisi,
(
SELECT
kd_satuan
FROM
m_barang_satuan
WHERE
kd_barang = brg_divisi.kd_barang
AND jumlah = 1
) AS kd_satuan,
IFNULL(max_tr.avg_item, 0) AS avg_item
FROM
(
SELECT
kd_barang,
kd_divisi
FROM
m_barang_divisi
WHERE
`status` <> 0
AND kd_divisi = INkd_divisi_tujuan
AND kd_barang NOT IN (
SELECT
kd_barang
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi = dt_jual.no_transaksi
WHERE
kd_divisi = INkd_divisi_tujuan
AND date(tanggal) <= DATE(NOW())
AND DATE(tanggal) > DATE_ADD(date(NOW()), INTERVAL - 30 DAY)
)
) brg_divisi

LEFT JOIN (
SELECT
t_penjualan_detail.kd_barang,
t_penjualan.kd_divisi,
ROUND(SUM(qty * jumlah) / 30, 2) AS avg_item
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN (
SELECT
MAX(date(tanggal)) last_sale,
kd_barang,
kd_divisi
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
GROUP BY
kd_divisi,
kd_barang
) max_tgl ON t_penjualan_detail.kd_barang = max_tgl.kd_barang
AND t_penjualan.kd_divisi = max_tgl.kd_divisi
INNER JOIN m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang
AND t_penjualan_detail.kd_satuan = m_barang_satuan.kd_satuan
WHERE
DATE(t_penjualan.tanggal) >= DATE_ADD(
max_tgl.last_sale,
INTERVAL - 30 DAY
)
AND DATE(t_penjualan.tanggal) < max_tgl.last_sale
AND t_penjualan.kd_divisi = INkd_divisi_tujuan
GROUP BY
kd_barang,
kd_divisi
) max_tr ON max_tr.kd_barang = brg_divisi.kd_barang
AND max_tr.kd_divisi = brg_divisi.kd_divisi
WHERE brg_divisi.kd_barang NOT IN(
SELECT 
avg_tmp.kd_barang
FROM
(SELECT
kd_barang,kd_satuan,ROUND(AVG(qty),2) as qty
FROM t_penjualan jual INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi= dt_jual.no_transaksi
WHERE date(tanggal)<= DATE_ADD(DATE(NOW()),INTERVAL -1 DAY)  AND DATE(tanggal)>= DATE_ADD(DATE(NOW()),INTERVAL -31 DAY)
AND kd_divisi=INkd_divisi_tujuan
GROUP BY kd_barang,kd_satuan) avg_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=avg_tmp.kd_barang AND m_barang_satuan.kd_satuan=avg_tmp.kd_satuan
GROUP BY kd_barang)
) a
INNER JOIN  m_barang ON m_barang.kd_barang=a.kd_barang
INNER JOIN (SELECT kd_kategori FROM m_kategori WHERE `status` <>0 AND `status`<>2) stok_item
ON m_barang.kd_kategori=stok_item.kd_kategori
LEFT JOIN g_stok_akhir ON g_stok_akhir.kd_barang=a.kd_barang AND g_stok_akhir.kd_divisi=a.kd_divisi
WHERE ROUND(avg_satuan_terkecil*INperiode)-stok>1
;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS send_opname_data;
CREATE PROCEDURE send_opname_data(IN kd_divisi CHAR (6),IN dt VARCHAR (10))

BEGIN
SELECT
bdiv.kd_barang,
m_barang.nama AS Barang,
CASE
WHEN opname.kd_satuan IS NOT NULL THEN
'1'
ELSE
'0'
END AS status_op,
satuan.kd_satuan,
m_satuan.nama AS Satuan,
opname.qty AS jumlah,
opname.tanggal,
opname.date_add,
opname.date_modif
FROM
m_barang
INNER JOIN m_barang_divisi bdiv ON m_barang.kd_barang = bdiv.kd_barang
INNER JOIN (SELECT kd_satuan,kd_barang FROM m_barang_satuan WHERE jumlah=1) satuan ON m_barang.kd_barang=satuan.kd_barang
INNER JOIN m_satuan ON satuan.kd_satuan=m_satuan.kd_satuan
LEFT JOIN (
SELECT
*
FROM
(
SELECT
kd_barang,
m_satuan.kd_satuan,
qty,
tanggal,
t_opname_stok.date_add AS date_add,
t_opname_stok.date_modif AS date_modif
FROM
t_opname_stok
INNER JOIN m_satuan ON t_opname_stok.kd_satuan = m_satuan.kd_satuan
UNION
SELECT
m_barang_satuan.kd_barang,
m_barang_satuan.kd_satuan,
qty,
t_opname_stok_tmp.date_add AS tanggal,
t_opname_stok_tmp.date_add AS date_add,
t_opname_stok_tmp.date_modif AS date_modif
FROM
t_opname_stok_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=t_opname_stok_tmp.kd_barang
AND jumlah=1
INNER JOIN m_satuan ON m_satuan.kd_satuan=m_barang_satuan.kd_satuan
) op
WHERE
(
DATE(date_add) >= dt
OR DATE(date_modif) >= dt
OR DATE(tanggal) >= dt
)
) opname ON opname.kd_barang = bdiv.kd_barang
WHERE
bdiv.kd_divisi = kd_divisi;


END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_set_mutasi_order;
CREATE PROCEDURE p_set_mutasi_order(IN INdiv_sumber CHAR (6),IN INdiv_tujuan CHAR (6))

BEGIN
SELECT
a.kd_barang,
kd_satuan,
CASE
WHEN ROUND(a.avg_harian * 7) - a.stok_tujuan < 0 THEN
0
ELSE
ROUND(a.avg_harian * 7) - a.stok_tujuan
END AS qty_mutasi,
'ONLINE' as divisi_id
FROM
v_spk_mutasi_barang_baru a
INNER JOIN (
SELECT
kd_barang,
stok
FROM
g_stok_akhir
WHERE
kd_divisi = INdiv_sumber
) c ON a.kd_barang = c.kd_barang
WHERE
a.kd_divisi = INdiv_tujuan
AND c.stok <> 0
AND ROUND(a.avg_harian * 7) <> 0
AND ROUND(a.avg_harian * 7) <= c.stok
AND k_status = 1;
END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_spk_item_promo;
CREATE PROCEDURE p_spk_item_promo()

BEGIN
TRUNCATE TABLE x_sp_barang_promo_tmp;
INSERT INTO x_sp_barang_promo_tmp(kd_barang,kd_divisi,kd_satuan,nama,stok,keterangan,harga_beli,harga_jual)
SELECT nmi_list.kode,nmi_list.divisi,kd_satuan,nama,stok,keterangan,harga_beli,harga_jual FROM
(SELECT kd_barang,kd_satuan,harga_jual FROM m_barang_satuan WHERE jumlah=1) min_st
INNER JOIN
(SELECT nmi_item.*,harga_beli_bersih.nama,harga_beli_bersih.harga_beli FROM
(SELECT kode,divisi,MAX(keterangan) as keterangan,stok FROM
(SELECT nmi1.*,stok FROM 
(SELECT kode,divisi,'NMI 3 MONTH (Disc. 25%)' as keterangan FROM x_fmi_smi WHERE awal >=
CONCAT(CASE WHEN MONTH(NOW())>3 THEN YEAR(NOW()) ELSE YEAR(NOW())-1 END,"-",
CASE 
WHEN MONTH(NOW())>3 THEN MONTH(NOW())
ELSE
MONTH(NOW())+12-3
END,'-01')
AND nomor=999999999
AND DATE(f_GetLastPurchase(kode)) < akhir
GROUP BY kode,divisi,nomor HAVING COUNT(*)=3) nmi1
INNER JOIN g_stok_akhir ON g_stok_akhir.kd_barang=nmi1.kode AND g_stok_akhir.kd_divisi=nmi1.divisi
WHERE stok>0
UNION
SELECT nmi1.*,stok FROM 
(SELECT kode,divisi,'NMI 4 MONTH (Disc. 50%)' as keterangan FROM x_fmi_smi WHERE awal >=
CONCAT(CASE WHEN MONTH(NOW())>4 THEN YEAR(NOW()) ELSE YEAR(NOW())-1 END,"-",
CASE 
WHEN MONTH(NOW())>4 THEN MONTH(NOW())
ELSE
MONTH(NOW())+12-4
END,'-01')
AND nomor=999999999
AND DATE(f_GetLastPurchase(kode)) < akhir
GROUP BY kode,divisi,nomor HAVING COUNT(*)=4) nmi1
INNER JOIN g_stok_akhir ON g_stok_akhir.kd_barang=nmi1.kode AND g_stok_akhir.kd_divisi=nmi1.divisi
WHERE stok>0
UNION
SELECT nmi1.*,stok FROM 
(SELECT kode,divisi,'NMI 5 MONTH (Disc. 75%)' as keterangan FROM x_fmi_smi WHERE awal >=
CONCAT(CASE WHEN MONTH(NOW())>5 THEN YEAR(NOW()) ELSE YEAR(NOW())-1 END,"-",
CASE 
WHEN MONTH(NOW())>5 THEN MONTH(NOW())
ELSE
MONTH(NOW())+12-5
END,'-01')
AND nomor=999999999
AND DATE(f_GetLastPurchase(kode)) < akhir
GROUP BY kode,divisi,nomor HAVING COUNT(*)=5) nmi1
INNER JOIN g_stok_akhir ON g_stok_akhir.kd_barang=nmi1.kode AND g_stok_akhir.kd_divisi=nmi1.divisi
WHERE stok>0
UNION
SELECT nmi1.*,stok FROM 
(SELECT kode,divisi,'NMI 6 MONTH (Retur)' as keterangan FROM x_fmi_smi WHERE awal >=
CONCAT(CASE WHEN MONTH(NOW())>5 THEN YEAR(NOW()) ELSE YEAR(NOW())-1 END,"-",
CASE 
WHEN MONTH(NOW())>6 THEN MONTH(NOW())
ELSE
MONTH(NOW())+12-6
END,'-01')
AND nomor=999999999
AND DATE(f_GetLastPurchase(kode)) < akhir
GROUP BY kode,divisi,nomor HAVING COUNT(*)=6) nmi1
INNER JOIN g_stok_akhir ON g_stok_akhir.kd_barang=nmi1.kode AND g_stok_akhir.kd_divisi=nmi1.divisi
WHERE stok>0) intersect_item
GROUP BY kode,divisi,stok) nmi_item
INNER JOIN
(SELECT
m_barang.kd_barang,nama,IFNULL(harga_beli_bersih_tmp.harga_beli,0) as harga_beli
FROM
(
SELECT
last_buy.kd_barang,
CASE
WHEN jumlah <> 1 THEN
GetHargaBersih (
GetHargaBersih (
t_pembelian_detail.harga_beli / jumlah,
t_pembelian_detail.diskon1,
t_pembelian_detail.diskon2,
t_pembelian_detail.diskon3,
t_pembelian_detail.diskon4,
0,
0
),
t_pembelian.diskon1,
t_pembelian.diskon2,
t_pembelian.diskon3,
t_pembelian.diskon4,
pajak,
ppnbm
)
ELSE
GetHargaBersih (
GetHargaBersih (
t_pembelian_detail.harga_beli,
t_pembelian_detail.diskon1,
t_pembelian_detail.diskon2,
t_pembelian_detail.diskon3,
t_pembelian_detail.diskon4,
0,
0
),
t_pembelian.diskon1,
t_pembelian.diskon2,
t_pembelian.diskon3,
t_pembelian.diskon4,
pajak,
ppnbm
)
END AS harga_beli
FROM
t_pembelian
INNER JOIN t_pembelian_detail ON t_pembelian.no_transaksi = t_pembelian_detail.no_transaksi
INNER JOIN (
SELECT
kd_barang,
MAX(tanggal_server) date_max
FROM
t_pembelian beli
INNER JOIN t_pembelian_detail bl_dtl ON beli.no_transaksi = bl_dtl.no_transaksi
GROUP BY
kd_barang
) last_buy ON last_buy.kd_barang = t_pembelian_detail.kd_barang
AND last_buy.date_max = t_pembelian.tanggal_server
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang = t_pembelian_detail.kd_barang
AND m_barang_satuan.kd_satuan = t_pembelian_detail.kd_satuan
WHERE
jenis <> 0
) harga_beli_bersih_tmp
RIGHT JOIN m_barang ON m_barang.kd_barang=harga_beli_bersih_tmp.kd_barang
)
harga_beli_bersih
on nmi_item.kode=harga_beli_bersih.kd_barang) nmi_list
ON min_st.kd_barang=nmi_list.kode;
END




//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_supplier_data;
CREATE PROCEDURE p_supplier_data(IN INkd_supplier CHAR (6))

BEGIN
SELECT sup_data.*,cnt_brg_sup.jml_barang,max_item_sup.item,max_item_sup.avg_item,IFNULL(htg_sup.sisa_cicilan,0) AS sisa_hutang FROM
(SELECT kd_supplier ,COUNT(*) as jml_barang FROM m_barang_supplier WHERE kd_supplier=INkd_supplier AND `status`<>0 GROUP BY kd_supplier) cnt_brg_sup
INNER JOIN
(SELECT m_supplier.kd_supplier,nama,alamat,email,kontak,hp,visit_time,lead_time,hari FROM m_supplier
INNER JOIN m_supplier_jadwal ON m_supplier.kd_supplier=m_supplier_jadwal.kd_supplier WHERE m_supplier.kd_supplier=INkd_supplier
AND m_supplier.jenis<>0
)sup_data
ON sup_data.kd_supplier=cnt_brg_sup.kd_supplier
INNER JOIN
(SELECT kd_supplier,GROUP_CONCAT(nama SEPARATOR ';_;') as item, GROUP_CONCAT(avg SEPARATOR ';_;') as avg_item FROM
(SELECT kd_supplier,m_barang.nama,avg FROM x_pembelian_order_tmp order_tmp INNER JOIN m_barang ON m_barang.kd_barang=order_tmp.kd_barang 
where kd_supplier=INkd_supplier ORDER BY avg DESC LIMIT 3) avg_max_sup
) max_item_sup
ON max_item_sup.kd_supplier=sup_data.kd_supplier
LEFT JOIN
(SELECT kd_supplier,SUM(sisa_cicilan) sisa_cicilan FROM v_hutang_pembelian WHERE kd_supplier=INkd_supplier GROUP BY kd_supplier) htg_sup
ON htg_sup.kd_supplier=max_item_sup.kd_supplier


;
END



//xyvdelimiter //
DROP PROCEDURE
IF EXISTS proc_prepare_order;

CREATE PROCEDURE proc_prepare_order (
)
BEGIN
TRUNCATE TABLE x_pembelian_order_tmp;
INSERT INTO x_pembelian_order_tmp
SELECT
	m_barang.kd_barang,m_barang.nama,
	CASE 
		WHEN
		(
			SELECT COUNT(t_pembelian.no_transaksi)
			FROM t_pembelian INNER JOIN
			t_pembelian_detail ON t_pembelian.no_transaksi = t_pembelian_detail.no_transaksi
			WHERE t_pembelian_detail.kd_barang = avg_item.kd_barang
		) = 0 THEN 'Baru'
			ELSE 'Lama' 
	END AS sts_barang,
	avg_item.avg,
	avg_item.stok,
	IFNULL(
		avg_item.avg * (m_supplier_jadwal.visit_time + m_supplier_jadwal.lead_time),
		0
	) AS need,
	CASE
		WHEN 
			IFNULL(
		((avg_item.avg * (m_supplier_jadwal.visit_time + m_supplier_jadwal.lead_time))+IFNULL(0*(avg_item.avg * (m_supplier_jadwal.visit_time + m_supplier_jadwal.lead_time))/100,0))-IFNULL(avg_item.stok,0),
			0) < 0
		THEN 0
		ELSE
		IFNULL(
		((avg_item.avg * (m_supplier_jadwal.visit_time + m_supplier_jadwal.lead_time))+IFNULL(0*(avg_item.avg * (m_supplier_jadwal.visit_time + m_supplier_jadwal.lead_time))/100,0))-IFNULL(avg_item.stok,0),
			0)
	END AS qty,
	satuan_terkecil.kd_satuan,
	satuan_terkecil.satuan AS satuan,
	purchasing.last_price AS harga_beli_terakhir,
	0 AS Diskon,
	purchasing.kd_supplier,
	purchasing.supplier AS Supplier,
	m_supplier_jadwal.hari as Kunjungan,
	CASE
		WHEN
			m_supplier_jadwal.visit_time<7 THEN m_supplier_jadwal.hari+m_supplier_jadwal.visit_time
		ELSE m_supplier_jadwal.hari
	END AS 'Kunjungan2',
	IFNULL((SELECT stok FROM mon_g_stok_barang_per_divisi_vd WHERE kd_divisi='DAA001' AND kd_barang=purchasing.kd_barang),0) AS expired,
	NOW(),
	purchasing.kd_satuan_beli,
	purchasing.satuan_beli,
	(SELECT SUBSTRING_INDEX(gambar,'\\',-1) FROM m_barang_gambar WHERE kd_barang=purchasing.kd_barang) AS gambar
FROM
(SELECT kd_barang,kd_supplier FROM m_barang_supplier WHERE status<>0) mbsup
INNER JOIN
(
	SELECT
		g_stok.kd_barang AS kd_barang,
		ifnull(
			round(penjualan.avg, 2),
			0
		) AS avg,
		g_stok.stok AS stok
	FROM
		(
			(
				(
					SELECT
						mon_g_stok_barang_per_divisi_vd.kd_barang AS kd_barang,
						sum(
							mon_g_stok_barang_per_divisi_vd.stok
						) AS stok
					FROM
						mon_g_stok_barang_per_divisi_vd
					GROUP BY
						mon_g_stok_barang_per_divisi_vd.kd_barang
					HAVING
						sum(
							mon_g_stok_barang_per_divisi_vd.stok
						) > 0
				)
			) g_stok
			LEFT JOIN (
				SELECT
					t_penjualan_detail.kd_barang AS kd_barang,
					sum(
						m_barang_satuan.jumlah * t_penjualan_detail.qty
					) / 21 AS avg
				FROM
					(
						(
							t_penjualan
							JOIN t_penjualan_detail ON (
								t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
							)
						)
						JOIN m_barang_satuan ON (
							t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang
							AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
						)
					)
				WHERE
					t_penjualan.tanggal >= (
						SELECT
							curdate() + INTERVAL (7 * 3 * - 1) DAY
					)
				GROUP BY
					t_penjualan_detail.kd_barang
			) penjualan ON (
				penjualan.kd_barang = g_stok.kd_barang
			)
		)
	UNION
	SELECT
		g_stok.kd_barang AS kd_barang,
		ifnull(
			round(penjualan.avg, 2),
			0
		) AS avg,
		g_stok.stok AS stok
	FROM
		(
				(
					(
						SELECT
							mon_g_stok_barang_per_divisi_vd.kd_barang AS kd_barang,
							sum(
								mon_g_stok_barang_per_divisi_vd.stok
							) AS stok
						FROM
							mon_g_stok_barang_per_divisi_vd
						GROUP BY
							mon_g_stok_barang_per_divisi_vd.kd_barang
						HAVING
							sum(
								mon_g_stok_barang_per_divisi_vd.stok
							) <= 0
					)
				) g_stok
				LEFT JOIN (
					SELECT
						t_penjualan_detail.kd_barang AS kd_barang,
						sum(
							m_barang_satuan.jumlah * t_penjualan_detail.qty
						) / (7 * 3) AS avg
					FROM
						(
							(
								t_penjualan
								JOIN t_penjualan_detail ON (
									t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
								)
							)
							JOIN m_barang_satuan ON (
								t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang
								AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
							)
						)
					WHERE
						t_penjualan.kd_divisi <> 'DAA001'
					AND t_penjualan.tanggal >= (
						SELECT
							max(
								t_penjualan.tanggal
							) + INTERVAL (7 * 3 * - 1) DAY
						FROM
							(
								t_penjualan
								JOIN t_penjualan_detail ON (
									t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
								)
							)
						WHERE
							t_penjualan.kd_divisi <> 'DAA001'
					)
					GROUP BY
						t_penjualan_detail.kd_barang
				) penjualan ON (
					g_stok.kd_barang = penjualan.kd_barang
				)
			)
) avg_item
ON avg_item.kd_barang=mbsup.kd_barang
INNER JOIN (SELECT * FROM m_barang WHERE status<>0) m_barang ON m_barang.kd_barang= mbsup.kd_barang
INNER JOIN 
	(
		SELECT kd_barang,kd_satuan,(SELECT nama FROM m_satuan WHERE kd_satuan=m_barang_satuan.kd_satuan) as satuan FROM m_barang_satuan WHERE jumlah=1 
	) satuan_terkecil 
ON satuan_terkecil.kd_barang=mbsup.kd_barang
INNER JOIN m_supplier_jadwal ON m_supplier_jadwal.kd_supplier=mbsup.kd_supplier
LEFT JOIN(
SELECT last_purchase.kd_barang,
	last_purchase.kd_satuan_beli,
	last_purchase.satuan_beli,
	last_purchase.kd_supplier,
	last_purchase.supplier,
	last_purchase.last_price AS last_price
	FROM
	(
		SELECT beli_dt.kd_barang,kd_supplier,GROUP_CONCAT(DISTINCT(m_satuan.kd_satuan)) AS kd_satuan_beli, GROUP_CONCAT(DISTINCT(m_satuan.nama)) AS satuan_beli,
		(SELECT nama FROM m_supplier WHERE kd_supplier=beli.kd_supplier) AS supplier,
			GROUP_CONCAT(harga_beli ORDER BY tanggal DESC LIMIT 1)/GROUP_CONCAT(jumlah ORDER BY tanggal DESC LIMIT 1) AS last_price
		FROM t_pembelian beli INNER JOIN t_pembelian_detail beli_dt ON beli.no_transaksi=beli_dt.no_transaksi
		INNER JOIN m_satuan ON m_satuan.kd_satuan=beli_dt.kd_satuan
		INNER JOIN m_barang_satuan mbs ON mbs.kd_barang=beli_dt.kd_barang AND mbs.kd_satuan=beli_dt.kd_satuan
		WHERE mbs.status<>0
		GROUP BY beli_dt.kd_barang,kd_supplier
	) last_purchase

) purchasing ON purchasing.kd_barang=mbsup.kd_barang AND purchasing.kd_supplier=mbsup.kd_supplier;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS proc_mon_laba_rugi;
CREATE PROCEDURE proc_mon_laba_rugi(IN `awal` datetime,IN `akhir` datetime)

BEGIN
	DECLARE persediaan_awal decimal;
	DECLARE pembelian decimal;
	DECLARE retur_pembelian decimal;
	DECLARE siap_dijual decimal;
	DECLARE penjualan_bruto decimal;
	DECLARE penjualan_netto DECIMAL;
	DECLARE potongan decimal;
	DECLARE pajak decimal;
	DECLARE retur_penjualan decimal;
	DECLARE penjualan_tunai decimal;
	DECLARE penjualan_kredit decimal;
	DECLARE persediaan_akhir decimal;
	DECLARE harga_pokok_penjualan decimal;
	DECLARE rugi_laba_penjualan decimal;
	DECLARE rasio_kontribusi FLOAT;
	DECLARE biaya decimal;
	DECLARE pendapatan decimal;
	DECLARE tagihan_piutang decimal;
	DECLARE penjualan_jasa decimal;
	DECLARE persewaan decimal;
	DECLARE pendapatan_surcharge decimal;
	DECLARE rugi_laba_bersih decimal;
	DECLARE rasio_kontribusi_bersih FLOAT;
	DECLARE awal1 DATETIME;	
	DECLARE awal2 DATETIME;
	DROP TEMPORARY TABLE IF EXISTS result_table;
	CREATE TEMPORARY TABLE result_table(Keterangan VARCHAR(50),Nominal DECIMAL);
	SET persediaan_awal = 0;
	SET pembelian = 0;
	SET retur_pembelian = 0;
	
	SET siap_dijual = 0;
	SET penjualan_bruto = 0;
	SET penjualan_netto = 0;
	SET potongan = 0;
	SET pajak = 0;
	SET retur_penjualan = 0;
	
	SET penjualan_tunai = 0;
	SET penjualan_kredit = 0;
	SET persediaan_akhir = 0; 
	SET harga_pokok_penjualan = 0;
	SET rugi_laba_penjualan = 0;
	SET rasio_kontribusi = 0;
	
	SET biaya = 0; 
	SET pendapatan = 0;
	SET tagihan_piutang = 0;
	SET penjualan_jasa = 0;
	SET persewaan = 0;
	SET pendapatan_surcharge = 0;
	
	SET rugi_laba_bersih = 0;
	SET rasio_kontribusi_bersih = 0;
	
	SET awal1 = awal;
	IF awal1 < GetTanggalTerakhirTutupBuku() THEN
	SET awal1 = DATE_ADD(GetTanggalTerakhirTutupBuku(),INTERVAL 1 DAY);
	END IF;
	
	SET awal2 = DATE_ADD(awal1,INTERVAL -1 DAY);

	
	SELECT SUM(total_bersih)
	INTO pembelian

	FROM x_total_pembelian_bersih
	WHERE DATE(tanggal_tr) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Pembelian', pembelian;

	SELECT  IFNULL(SUM(qty * harga), 0)
	INTO retur_pembelian
	FROM t_pembelian_retur INNER JOIN t_pembelian_retur_detail ON
		t_pembelian_retur_detail.no_retur = t_pembelian_retur.no_retur
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Retur Pembelian', retur_pembelian;
	
	SET  siap_dijual = persediaan_awal + pembelian - retur_pembelian;
	
	INSERT INTO result_table
	SELECT 'Stok Yang Tersedia', siap_dijual;
	
	SELECT SUM(qty * harga_jual),
		SUM((dtl.harga_jual - (GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
      			jual.diskon3, jual.diskon4, 0, 0))) * dtl.qty),
		SUM((GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
      			jual.diskon3, jual.diskon4, 0, 0)) * dtl.qty * jual.pajak)
	INTO penjualan_bruto,potongan,pajak
	FROM t_penjualan jual INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
	WHERE DATE(jual.tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Penjualan Bruto', penjualan_bruto;
	
	SELECT potongan + SUM(diskon_uang)
	INTO potongan
	FROM t_penjualan jual 
	WHERE DATE(jual.tanggal) BETWEEN awal1 AND akhir;
	
	
	INSERT INTO result_table
	SELECT 'Potongan', potongan;
	
	INSERT INTO result_table
	SELECT 'Pajak', pajak;

	SELECT IFNULL(SUM(harga_jual * qty), 0)
	INTO retur_penjualan
	FROM t_penjualan_retur INNER JOIN t_penjualan_retur_detail ON 
		t_penjualan_retur.no_retur = t_penjualan_retur_detail.no_retur
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Retur Penjualan', retur_penjualan;
	
	SET penjualan_netto = penjualan_bruto - potongan + pajak - retur_penjualan;
	
	INSERT INTO result_table
	SELECT 'Penjualan Netto', penjualan_netto;
	
	SET harga_pokok_penjualan = siap_dijual - persediaan_akhir;
	
	INSERT INTO result_table
	SELECT 'Harga Pokok Penjualan', harga_pokok_penjualan;
	
	SET rugi_laba_penjualan = penjualan_netto - harga_pokok_penjualan;
	
	INSERT INTO result_table
	SELECT 'Rugi Laba Penjualan Barang', rugi_laba_penjualan;
	
	IF harga_pokok_penjualan = 0 THEN
		SET harga_pokok_penjualan = 1;
	END IF;
	SET rasio_kontribusi = rugi_laba_penjualan / harga_pokok_penjualan;
	
	INSERT INTO result_table
	SELECT 'Rasio Kontribusi Kotor (%)' , rasio_kontribusi* 100;

	
	SELECT IFNULL(SUM(GetTotalPenjualanJasa(t_penjualan_jasa.no_transaksi)), 0)
	INTO penjualan_jasa
	FROM t_penjualan_jasa INNER JOIN t_penjualan_jasa_detail ON  t_penjualan_jasa.no_transaksi = t_penjualan_jasa.no_transaksi INNER JOIN m_jasa ON t_penjualan_jasa_detail.kd_jasa = m_jasa.kd_jasa
		INNER JOIN m_jasa_kategori ON m_jasa.kd_jasa_kategori = m_jasa_kategori.kd_jasa_kategori
	WHERE DATE(tanggal_pesan) BETWEEN awal1 AND akhir AND m_jasa_kategori.status = 2;
	
	INSERT INTO result_table
	SELECT 'Penjualan Jasa', penjualan_jasa;
	 
	SELECT IFNULL(SUM(GetTotalPenjualanJasa(t_penjualan_jasa.no_transaksi)), 0)
	INTO persewaan
	FROM t_penjualan_jasa INNER JOIN t_penjualan_jasa_detail ON  t_penjualan_jasa.no_transaksi = t_penjualan_jasa.no_transaksi INNER JOIN m_jasa ON t_penjualan_jasa_detail.kd_jasa = m_jasa.kd_jasa
		INNER JOIN m_jasa_kategori ON m_jasa.kd_jasa_kategori = m_jasa_kategori.kd_jasa_kategori
	WHERE DATE(tanggal_pesan) BETWEEN awal1 AND akhir AND m_jasa_kategori.status = 1;
	
	INSERT INTO result_table
	SELECT 'Persewaan', persewaan;
	
	
	SELECT IFNULL(SUM(GetTotalPenjualanJasa(t_penjualan_jasa.no_transaksi) * t_penjualan_jasa.other), 0)
	INTO  pendapatan_surcharge
	FROM t_penjualan_jasa INNER JOIN t_penjualan_jasa_detail ON  t_penjualan_jasa.no_transaksi = t_penjualan_jasa.no_transaksi INNER JOIN m_jasa ON t_penjualan_jasa_detail.kd_jasa = m_jasa.kd_jasa
		INNER JOIN m_jasa_kategori ON m_jasa.kd_jasa_kategori = m_jasa_kategori.kd_jasa_kategori
	WHERE DATE(tanggal_pesan) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Pendapatan Surcharge', pendapatan_surcharge;
	
	SELECT IFNULL(SUM(nominal), 0)
	INTO biaya
	FROM t_biaya_operasional
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Biaya Operasional', biaya;
	
	SELECT IFNULL(SUM(nominal), 0)
	INTO pendapatan
	FROM t_pendapatan 
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Pendapatan', pendapatan;
	
	SET rugi_laba_bersih = rugi_laba_penjualan - biaya + pendapatan   + penjualan_jasa + persewaan + pendapatan_surcharge;
	
	INSERT INTO result_table
	SELECT 'Rugi Laba Bersih', rugi_laba_bersih;
	
	IF harga_pokok_penjualan = 0 THEN
		SET harga_pokok_penjualan = 1;
	END IF;
	SET rasio_kontribusi_bersih = rugi_laba_bersih / harga_pokok_penjualan;
	
	INSERT INTO result_table
	SELECT 'Rasio Kontribusi Bersih (%)', rasio_kontribusi_bersih * 100;
	
	SELECT IFNULL(SUM(nominal), 0)
	INTO tagihan_piutang
	FROM t_piutang_cicilan 
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	INSERT INTO result_table
	SELECT 'Tagihan Piutang', tagihan_piutang;

	SELECT * FROM result_table;
END

//xyvdelimiter //
DROP PROCEDURE
IF EXISTS proc_mon_laba_rugi_v4;
CREATE PROCEDURE proc_mon_laba_rugi_v4(
IN `awal` datetime,IN `akhir` datetime
)
BEGIN
	DECLARE persediaan_awal double;
	DECLARE pembelian double;
	DECLARE retur_pembelian double;
	DECLARE siap_dijual double;
	DECLARE penjualan_bruto double;
	DECLARE penjualan_netto double;
	DECLARE potongan_penjualan double;
	DECLARE pajak double;
	DECLARE retur_penjualan double;
	DECLARE penjualan_tunai double;
	DECLARE penjualan_kredit double;
	DECLARE persediaan_akhir double;
	DECLARE harga_avg_penjualan double;
	DECLARE harga_avg_retur double;
	DECLARE harga_pokok_penjualan double;
	DECLARE rata_rata_persediaan double;
	DECLARE rugi_laba_penjualan double;
	DECLARE rasio_kontribusi double;
	DECLARE biaya double;
	DECLARE pendapatan double;
	DECLARE tagihan_piutang double;
	DECLARE penjualan_jasa double;
	DECLARE persewaan double;
	DECLARE pendapatan_surcharge double;
	DECLARE rugi_laba_bersih double;
	DECLARE opname_stok double;
	
	DECLARE rasio_kontribusi_bersih double;
	DECLARE rasio_perputaran_persediaan double;
	DECLARE awal1 DATETIME;		-- jika parameter tanggal awal lebih kecil dari pada tanggal tutup buku terakhir
	DECLARE awal2 DATETIME;
	DROP TEMPORARY TABLE IF EXISTS result_table;
	CREATE TEMPORARY TABLE result_table(Keterangan VARCHAR(50),Nominal double);
	SET persediaan_awal = 0;
	SET pembelian = 0;
	SET retur_pembelian = 0;
	
	SET siap_dijual = 0;
	SET penjualan_bruto = 0;
	SET penjualan_netto = 0;
	SET potongan_penjualan = 0;
	SET pajak = 0;
	SET retur_penjualan = 0;
	
	SET penjualan_tunai = 0;
	SET penjualan_kredit = 0;
	SET persediaan_akhir = 0; 
	SET harga_pokok_penjualan = 0;
	SET rata_rata_persediaan = 0;
	SET rugi_laba_penjualan = 0;
	SET rasio_kontribusi = 0;
	
	SET biaya = 0; 
	SET pendapatan = 0;
	SET tagihan_piutang = 0;
	SET penjualan_jasa = 0;
	SET persewaan = 0;
	SET pendapatan_surcharge = 0;
	
	SET rugi_laba_bersih = 0;
	SET rasio_kontribusi_bersih = 0;
	SET rasio_perputaran_persediaan = 0;
	
	SET awal1 = awal;
	IF awal1 < GetTanggalTerakhirTutupBuku() THEN
	SET awal1 = DATE_ADD(GetTanggalTerakhirTutupBuku(),INTERVAL 1 DAY);
	-- SELECT DATE_ADD(GetTanggalTerakhirTutupBuku(),INTERVAL 1 DAY) INTO awal1;
	END IF;
	
	-- DECLARE awal2 DATETIME;		-- untuk mengambil stok akhir per tanggal perlu dikurangi dengan tanggal terakhir
	SET awal2 = DATE_ADD(awal1,INTERVAL -1 DAY);



	SELECT SUM(qty * harga_jual)
	INTO penjualan_bruto
	FROM t_penjualan jual INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
	WHERE DATE(jual.tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Penjualan Bruto', penjualan_bruto;
	
	-- POTONGAN PENJUALAN
	SELECT SUM(potongan)
	INTO potongan_penjualan
	FROM
	(
		SELECT jl.no_transaksi,ROUND(jl_dt.bruto-net.harga_net) AS potongan FROM (SELECT no_transaksi FROM t_penjualan WHERE DATE(tanggal) BETWEEN awal1 AND akhir) jl INNER JOIN (SELECT no_transaksi,SUM(qty*harga_jual) as bruto FROM t_penjualan_detail GROUP BY no_transaksi) jl_dt ON jl_dt.no_transaksi=	jl.no_transaksi
		INNER JOIN
		(SELECT no_transaksi, ((100/(100+(pajak*100)))*total) AS harga_net FROM x_total_penjualan) net ON net.no_transaksi=jl.no_transaksi
		UNION ALL
		SELECT net.no_transaksi,ROUND(bruto.total- net.total) AS potongan FROM
		(SELECT t_penjualan_detail.no_transaksi, SUM(qty*harga_jual) AS total FROM t_penjualan_detail INNER JOIN t_penjualan ON t_penjualan.no_transaksi=t_penjualan_detail.no_transaksi WHERE DATE(tanggal) BETWEEN awal1 AND akhir GROUP BY t_penjualan_detail.no_transaksi) bruto
		INNER JOIN
		(
			SELECT jl.no_transaksi,
			ROUND(
			SUM(GetHargaBersih(GetHargaBersih(harga_jual,jl_dt.diskon1,jl_dt.diskon2,jl_dt.diskon3,jl_dt.diskon4,0,0) *qty,jl.diskon1,jl.diskon2,jl.diskon3,jl.diskon4,pajak,0))
			) - diskon_uang  AS total
			FROM t_penjualan jl INNER JOIN t_penjualan_detail jl_dt ON jl_dt.no_transaksi=jl.no_transaksi
			WHERE `status`=0 AND DATE(tanggal) BETWEEN awal1 AND akhir
			GROUP BY jl.no_transaksi,kd_divisi) net
		ON bruto.no_transaksi=net.no_transaksi
	)pot;
	
-- 	FROM t_penjualan jual
-- 	WHERE DATE(jual.tanggal) BETWEEN awal1 AND akhir;
	
	
	INSERT INTO result_table
	SELECT 'Potongan', potongan_penjualan;
	
	-- PAJAK PENJUALAN	
-- 	INSERT INTO result_table
-- 	SELECT 'Pajak', pajak;

	-- RETUR PENJUALAN
	SELECT IFNULL(SUM(harga_jual * qty), 0)
	INTO retur_penjualan
	FROM t_penjualan_retur INNER JOIN t_penjualan_retur_detail ON 
		t_penjualan_retur.no_retur = t_penjualan_retur_detail.no_retur
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Retur Penjualan', retur_penjualan;
	
	-- SPACE
	-- INSERT INTO result_table
	-- SELECT '',0;
	
	-- PENJUALAN NETTO
-- 	SET penjualan_netto = penjualan_bruto - potongan + pajak - retur_penjualan;
	SELECT SUM(total)
	INTO penjualan_netto
	FROM
	(
			SELECT total FROM((SELECT sum(total) as total FROM x_total_penjualan WHERE DATE(tanggal_tr) BETWEEN awal1 AND akhir) net_tunai)
			UNION
			SELECT
			ROUND(SUM(GetHargaBersih(GetHargaBersih(harga_jual,jl_dt.diskon1,jl_dt.diskon2,jl_dt.diskon3,jl_dt.diskon4,0,0) *qty,jl.diskon1,jl.diskon2,jl.diskon3,jl.diskon4,pajak,0))) - diskon_uang  AS total
			FROM t_penjualan jl INNER JOIN t_penjualan_detail jl_dt ON jl_dt.no_transaksi=jl.no_transaksi
			INNER JOIN m_voucher ON m_voucher.kd_voucher=jl.kd_voucher
			WHERE jl.`status`=0 AND DATE(tanggal) BETWEEN awal1 AND akhir
			GROUP BY kd_divisi,nominal
	) penjualan_netto;
-- WHERE DATE(tanggal_tr) BETWEEN awal1 AND akhir;

	INSERT INTO result_table
	SELECT 'Penjualan Netto', penjualan_netto;

	-- PENJUALAN TUNAI
	SELECT SUM(total) AS total_penjualan
	INTO penjualan_tunai
	FROM x_total_penjualan jual WHERE DATE(tanggal_tr) BETWEEN awal1 AND akhir ;

	INSERT INTO result_table
	SELECT 'Penjualan Tunai', penjualan_tunai;

	-- PENJUALAN KREDIT
	SELECT SUM(total) 
	INTO penjualan_kredit
	FROM
	(
			SELECT
			ROUND(SUM(GetHargaBersih(GetHargaBersih(harga_jual,jl_dt.diskon1,jl_dt.diskon2,jl_dt.diskon3,jl_dt.diskon4,0,0) *qty,jl.diskon1,jl.diskon2,jl.diskon3,jl.diskon4,pajak,0))) - diskon_uang  AS total
			FROM t_penjualan jl INNER JOIN t_penjualan_detail jl_dt ON jl_dt.no_transaksi=jl.no_transaksi
			INNER JOIN m_voucher ON m_voucher.kd_voucher=jl.kd_voucher
			WHERE jl.`status`=0 AND DATE(tanggal) BETWEEN awal1 AND akhir
			GROUP BY jl.no_transaksi,kd_divisi,nominal
	) penjualan_kredit;
	

	INSERT INTO result_table
	SELECT 'Penjualan Kredit', penjualan_kredit;

SELECT 
ROUND(SUM(ha.harga_average*(jual_qty-retur_qty)))
INTO harga_pokok_penjualan
FROM
(
	SELECT penjualan.kd_barang,penjualan.jml AS jual_qty,IFNULL(penjualan_retur.jml,0) AS retur_qty FROM
	(
		SELECT mbs.kd_barang,SUM(qty*jumlah) jml FROM
		(
			SELECT no_transaksi 
			FROM t_penjualan WHERE DATE(tanggal) BETWEEN awal1 AND akhir
		) jual
		INNER JOIN
		(
			SELECT no_transaksi,kd_barang,kd_satuan,qty FROM t_penjualan_detail
		) dtl 
		ON jual.no_transaksi=dtl.no_transaksi
		INNER JOIN m_barang_satuan mbs 
		ON mbs.kd_barang=dtl.kd_barang AND mbs.kd_satuan=dtl.kd_satuan
		GROUP BY mbs.kd_barang
	) penjualan
	LEFT JOIN
	(
		SELECT mbs.kd_barang,SUM(qty*jumlah) jml FROM
		(
			SELECT no_retur 
			FROM t_penjualan_retur WHERE DATE(tanggal) BETWEEN awal1 AND akhir
		) jual
		INNER JOIN
		(
			SELECT no_retur,kd_barang,kd_satuan,qty FROM t_penjualan_retur_detail
		) dtl 
		ON jual.no_retur=dtl.no_retur
		INNER JOIN m_barang_satuan mbs ON mbs.kd_barang=dtl.kd_barang AND mbs.kd_satuan=dtl.kd_satuan
		GROUP BY mbs.kd_barang
	) penjualan_retur
	ON penjualan.kd_barang=penjualan_retur.kd_barang
	UNION ALL
	SELECT penjualan_retur.kd_barang,IFNULL(penjualan.jml,0)AS jual_qty,penjualan_retur.jml AS retur_qty FROM
	(
		SELECT mbs.kd_barang,SUM(qty*jumlah) jml FROM
		(
			SELECT no_transaksi 
			FROM t_penjualan WHERE DATE(tanggal) BETWEEN awal1 AND akhir
		) jual
		INNER JOIN
		(
			SELECT no_transaksi,kd_barang,kd_satuan,qty FROM t_penjualan_detail
		) dtl 
		ON jual.no_transaksi=dtl.no_transaksi
		INNER JOIN m_barang_satuan mbs 
		ON mbs.kd_barang=dtl.kd_barang AND mbs.kd_satuan=dtl.kd_satuan
		GROUP BY mbs.kd_barang
	) penjualan
	RIGHT JOIN
	(
		SELECT mbs.kd_barang,SUM(qty*jumlah) jml FROM
		(
			SELECT no_retur 
			FROM t_penjualan_retur WHERE DATE(tanggal) BETWEEN awal1 AND akhir
		) jual
		INNER JOIN
		(
			SELECT no_retur,kd_barang,kd_satuan,qty FROM t_penjualan_retur_detail
		) dtl 
		ON jual.no_retur=dtl.no_retur
		INNER JOIN m_barang_satuan mbs ON mbs.kd_barang=dtl.kd_barang AND mbs.kd_satuan=dtl.kd_satuan
		GROUP BY mbs.kd_barang
	) penjualan_retur
	ON penjualan.kd_barang=penjualan_retur.kd_barang
	
) selisih_jual
INNER JOIN
(
	SELECT kd_barang,
		IFNULL(SUM(bh.qty * bh.harga), 0) / 
		(
			CASE 
				WHEN IFNULL(SUM(bh.qty), 0) = 0 THEN 1 
				ELSE IFNULL(SUM(bh.qty), 0) 
			END
		) as harga_average, 0 as harga_akhir 
	FROM
	(
		SELECT kd_barang, (SELECT MAX(tanggal) FROM g_tutup_buku) as tanggal, 'STOK AWAL' as transaksi, 
			IFNULL(SUM(IFNULL(stok_awal, 0)), 0) as qty, 
			IFNULL(SUM(IFNULL(stok_awal * harga_beli_awal, 0)), 0) / 
			(
				CASE 
					WHEN IFNULL(SUM(IFNULL(stok_awal, 0)), 0) = 0 THEN 1 
					ELSE IFNULL(SUM(IFNULL(stok_awal, 0)), 0)
				END
			) AS harga
		FROM m_barang_divisi
		GROUP BY kd_barang 
		UNION ALL
		SELECT d.kd_barang, b.tanggal, 'PEMBELIAN', (bs.jumlah * d.qty),
			GetHargaBersih(GetHargaBersih(d.harga_beli, d.diskon1, d.diskon2, d.diskon3, d.diskon4, 0, 0), b.diskon1, b.diskon2, b.diskon3, b.diskon4, b.pajak, b.ppnbm) / 
			IFNULL(bs.jumlah, 0)
		FROM t_pembelian b INNER JOIN t_pembelian_detail d ON b.no_transaksi = d.no_transaksi 
		INNER JOIN m_barang_satuan bs ON d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
		WHERE DATE(b.tanggal) BETWEEN DATE_ADD(DATE((SELECT MAX(tanggal) FROM g_tutup_buku)),INTERVAL 1 DAY) AND akhir
	) bh
	GROUP BY bh.kd_barang
) ha
ON ha.kd_barang=selisih_jual.kd_barang;





	-- HARGA POKOK PENJUALAN
-- 	SET harga_pokok_penjualan = harga_avg_penjualan- harga_avg_retur;
	
	INSERT INTO result_table
	SELECT 'Harga Pokok Penjualan', harga_pokok_penjualan;
	
	-- LABA KOTOR
	SET rugi_laba_penjualan = penjualan_netto - harga_pokok_penjualan;
	
	INSERT INTO result_table
	SELECT 'Rugi Laba Penjualan Barang', rugi_laba_penjualan;
	
	-- RASIO KONTRIBUSI
	IF harga_pokok_penjualan = 0 THEN
		SET harga_pokok_penjualan = 1;
	END IF;
	SET rasio_kontribusi = rugi_laba_penjualan / harga_pokok_penjualan;
	
	INSERT INTO result_table
	SELECT 'Rasio Kontribusi Kotor (%)' , rasio_kontribusi* 100;
	
	-- SPACE
	-- INSERT INTO result_table
	-- SELECT '',0;
	
	
	
	
	
	-- BIAYA 
	SELECT IFNULL(SUM(nominal), 0)
	INTO biaya
	FROM t_biaya_operasional
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Biaya Operasional', biaya;
	
	-- PENDAPATAN
	SELECT IFNULL(SUM(nominal), 0)
	INTO pendapatan
	FROM t_pendapatan 
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Pendapatan', pendapatan;
	
	-- LABA BERSIH
	SET rugi_laba_bersih = rugi_laba_penjualan - biaya + pendapatan   + penjualan_jasa + persewaan + pendapatan_surcharge;
	
	INSERT INTO result_table
	SELECT 'Rugi Laba Bersih', rugi_laba_bersih;
	
	-- RASIO KONTRIBUSI
	IF harga_pokok_penjualan = 0 THEN
		SET harga_pokok_penjualan = 1;
	END IF;
	SET rasio_kontribusi_bersih = rugi_laba_bersih / harga_pokok_penjualan;
	
	INSERT INTO result_table
	SELECT 'Rasio Kontribusi Bersih (%)', rasio_kontribusi_bersih * 100;
	
	

	-- opname stok
select 
-- t_opname_stok.qty * ha.harga_average
IFNULL(sum(t_opname_stok.qty * ha.harga_average),0)
INTO opname_stok
from 
(
	SELECT mbs.kd_barang,sum(jumlah*qty) AS qty FROM
	(
		SELECT kd_barang,kd_satuan,SUM(qty) AS qty FROM
		(
			SELECT kd_barang,kd_satuan,
			CASE WHEN status<>2 AND qty>0 THEN (qty*-1)	ELSE qty END AS qty
			FROM t_opname_stok WHERE DATE(tanggal) >= awal1 AND DATE(tanggal) <= akhir
		) op_stat
		GROUP BY kd_barang,kd_satuan
	) op
	INNER JOIN
	(
		SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
	) mbs ON mbs.kd_barang=op.kd_barang AND mbs.kd_satuan=op.kd_satuan GROUP BY mbs.kd_barang
)t_opname_stok 
inner join 
(
	SELECT kd_barang,ROUND(
		IFNULL(SUM(bh.qty * bh.harga), 0) / 
		(
			CASE 
				WHEN IFNULL(SUM(bh.qty), 0) = 0 THEN 1 
				ELSE IFNULL(SUM(bh.qty), 0) 
			END
		),4) as harga_average, 0 as harga_akhir
	FROM
	(
		SELECT kd_barang, (SELECT MAX(tanggal) FROM g_tutup_buku) as tanggal, 'STOK AWAL' as transaksi, 
			IFNULL(SUM(IFNULL(stok_awal, 0)), 0) as qty, 
			IFNULL(SUM(IFNULL(stok_awal * harga_beli_awal, 0)), 0) / 
			(
				CASE 
					WHEN IFNULL(SUM(IFNULL(stok_awal, 0)), 0) = 0 THEN 1 
					ELSE IFNULL(SUM(IFNULL(stok_awal, 0)), 0)
				END
			) AS harga
		FROM m_barang_divisi
		GROUP BY kd_barang 
		UNION ALL
		SELECT d.kd_barang, b.tanggal, 'PEMBELIAN', (bs.jumlah * d.qty),
			GetHargaBersih(GetHargaBersih(d.harga_beli, d.diskon1, d.diskon2, d.diskon3, d.diskon4, 0, 0), b.diskon1, b.diskon2, b.diskon3, b.diskon4, b.pajak, b.ppnbm) / 
			IFNULL(bs.jumlah, 0)
		FROM t_pembelian b INNER JOIN t_pembelian_detail d ON b.no_transaksi = d.no_transaksi 
		INNER JOIN m_barang_satuan bs ON d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
		WHERE DATE(b.tanggal) > (SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal)<= akhir
	) bh
	GROUP BY bh.kd_barang
) ha 
	on ha.kd_barang=t_opname_stok.kd_barang;

	insert into result_table
	select 'Opname Stok', opname_stok;

-- ########################################## Rasio Perputaran Persedian ########################################

SELECT SUM(stok.stok_awal*ha_awal.harga_average) AS persediaan_awal, SUM(stok.stok_akhir*ha_akhir.harga_average) AS persediaan_akhir,SUM((stok.stok_awal*ha_awal.harga_average+stok.stok_akhir*ha_akhir.harga_average)/2) AS rata_rata_persediaan 
INTO persediaan_awal,persediaan_akhir,rata_rata_persediaan
FROM
(
	SELECT stok_awal.kd_barang AS kd_barang,stok_awal.stok AS stok_awal,stok_akhir.stok AS stok_akhir FROM
	(
		SELECT m_barang.kd_barang,SUM(
		stok_awal
		+IFNULL(penjualan.jual_qty*-1,0)
		+IFNULL(penjualan_retur.jual_retur_qty,0)
		+IFNULL(pembelian.beli_qty,0)
		+IFNULL(pembelian_retur.beli_retur_qty*-1,0)
		+IFNULL(opname.qty_opname,0)
		) AS stok
		FROM 
		(
			SELECT brg.kd_barang,brg.nama AS barang,m_div.stok_awal FROM
			(SELECT kd_kategori FROM m_kategori WHERE status<>2) kategori
			INNER JOIN
			(SELECT kd_kategori,kd_barang,nama FROM m_barang WHERE (m_barang.kd_barang LIKE '%%' OR m_barang.nama LIKE '%%')) brg
			ON brg.kd_kategori=kategori.kd_kategori
			INNER JOIN ( SELECT kd_barang,sum(stok_awal) AS stok_awal FROM m_barang_divisi  GROUP BY kd_barang) m_div 
			ON m_div.kd_barang=brg.kd_barang
		) m_barang 
		LEFT JOIN 
		(
			SELECT mbs.kd_barang,SUM(jual_item_div.jual_qty*mbs.jumlah) AS jual_qty FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS jual_qty FROM t_penjualan_detail jual_dt 
				INNER JOIN (
					SELECT no_transaksi FROM t_penjualan WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) < awal1
				) jual 
				ON jual.no_transaksi=jual_dt.no_transaksi 
				GROUP BY kd_barang,kd_satuan
			) jual_item_div
			INNER JOIN 
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=jual_item_div.kd_barang AND mbs.kd_satuan=jual_item_div.kd_satuan
			GROUP BY mbs.kd_barang
		) penjualan
		ON m_barang.kd_barang=penjualan.kd_barang
		LEFT JOIN
		(
			SELECT mbs.kd_barang,SUM(jual_item_div.jual_qty*mbs.jumlah) AS jual_retur_qty FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS jual_qty FROM t_penjualan_retur_detail jual_dt 
				INNER JOIN (
					SELECT no_retur FROM t_penjualan_retur WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) < awal1
				) jual 
				ON jual.no_retur=jual_dt.no_retur
				GROUP BY kd_barang,kd_satuan
			) jual_item_div
			INNER JOIN 
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=jual_item_div.kd_barang AND mbs.kd_satuan=jual_item_div.kd_satuan
			GROUP BY mbs.kd_barang
		) penjualan_retur
		ON m_barang.kd_barang=penjualan_retur.kd_barang
		LEFT JOIN
		(
			SELECT mbs.kd_barang,SUM(beli_item_div.beli_qty*mbs.jumlah) AS beli_qty FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS beli_qty FROM t_pembelian_detail beli_dt 
				INNER JOIN (
					SELECT no_transaksi FROM t_pembelian WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) < awal1
				) beli 
				ON beli.no_transaksi=beli_dt.no_transaksi 
				GROUP BY kd_barang,kd_satuan
			) beli_item_div
			INNER JOIN 
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=beli_item_div.kd_barang AND mbs.kd_satuan=beli_item_div.kd_satuan
			GROUP BY mbs.kd_barang
		) pembelian
		ON m_barang.kd_barang=pembelian.kd_barang
		LEFT JOIN
		(
			SELECT mbs.kd_barang,SUM(beli_item_div.beli_qty*mbs.jumlah) AS beli_retur_qty FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS beli_qty FROM t_pembelian_retur_detail beli_dt 
				INNER JOIN (
					SELECT no_retur FROM t_pembelian_retur WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) < awal1
				) beli 
				ON beli.no_retur=beli_dt.no_retur 
				GROUP BY kd_barang,kd_satuan
			) beli_item_div
			INNER JOIN 
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=beli_item_div.kd_barang AND mbs.kd_satuan=beli_item_div.kd_satuan
			GROUP BY mbs.kd_barang
		) pembelian_retur
		ON m_barang.kd_barang=pembelian_retur.kd_barang
		LEFT JOIN
		(
			SELECT mbs.kd_barang,sum(jumlah*qty) AS qty_opname FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS qty FROM
				(
					SELECT kd_barang,kd_satuan,
					CASE WHEN status<>2 AND qty>0 THEN (qty*-1)	ELSE qty END AS qty
					FROM t_opname_stok WHERE tanggal>(SELECT MAX(tanggal) FROM g_tutup_buku)
					AND DATE(tanggal) < awal1
				) op_stat
			GROUP BY kd_barang,kd_satuan
			) op
			INNER JOIN
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=op.kd_barang AND mbs.kd_satuan=op.kd_satuan GROUP BY mbs.kd_barang
		) opname
		ON m_barang.kd_barang=opname.kd_barang
		GROUP BY m_barang.kd_barang 
	) stok_awal
	INNER JOIN
	(
		SELECT m_barang.kd_barang,SUM(
		stok_awal
		+IFNULL(penjualan.jual_qty*-1,0)
		+IFNULL(penjualan_retur.jual_retur_qty,0)
		+IFNULL(pembelian.beli_qty,0)
		+IFNULL(pembelian_retur.beli_retur_qty*-1,0)
		+IFNULL(opname.qty_opname,0)
		)
		 AS stok
		FROM 
		(
			SELECT brg.kd_barang,brg.nama AS barang,m_div.stok_awal FROM
			(SELECT kd_kategori FROM m_kategori WHERE status<>2) kategori
			INNER JOIN
			(SELECT kd_kategori,kd_barang,nama FROM m_barang WHERE (m_barang.kd_barang LIKE '%%' OR m_barang.nama LIKE '%%')) brg
			ON brg.kd_kategori=kategori.kd_kategori
			INNER JOIN (SELECT kd_barang,sum(stok_awal) AS stok_awal FROM m_barang_divisi  GROUP BY kd_barang) m_div ON m_div.kd_barang=brg.kd_barang
		) m_barang 
		LEFT JOIN 
		(
			SELECT mbs.kd_barang,SUM(jual_item_div.jual_qty*mbs.jumlah) AS jual_qty FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS jual_qty FROM t_penjualan_detail jual_dt 
				INNER JOIN (
					SELECT no_transaksi FROM t_penjualan WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) <= akhir
				) jual 
				ON jual.no_transaksi=jual_dt.no_transaksi 
				GROUP BY kd_barang,kd_satuan
			) jual_item_div
			INNER JOIN 
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=jual_item_div.kd_barang AND mbs.kd_satuan=jual_item_div.kd_satuan
			GROUP BY mbs.kd_barang
		) penjualan
		ON m_barang.kd_barang=penjualan.kd_barang
		LEFT JOIN
		(
			SELECT mbs.kd_barang,SUM(jual_item_div.jual_qty*mbs.jumlah) AS jual_retur_qty FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS jual_qty FROM t_penjualan_retur_detail jual_dt 
				INNER JOIN (
					SELECT no_retur FROM t_penjualan_retur WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) <= akhir
				) jual 
				ON jual.no_retur=jual_dt.no_retur
				GROUP BY kd_barang,kd_satuan
			) jual_item_div
			INNER JOIN 
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=jual_item_div.kd_barang AND mbs.kd_satuan=jual_item_div.kd_satuan
			GROUP BY mbs.kd_barang
		) penjualan_retur
		ON m_barang.kd_barang=penjualan_retur.kd_barang
		LEFT JOIN
		(
			SELECT mbs.kd_barang,SUM(beli_item_div.beli_qty*mbs.jumlah) AS beli_qty FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS beli_qty FROM t_pembelian_detail beli_dt 
				INNER JOIN (
					SELECT no_transaksi FROM t_pembelian WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) <= akhir
				) beli 
				ON beli.no_transaksi=beli_dt.no_transaksi 
				GROUP BY kd_barang,kd_satuan
			) beli_item_div
			INNER JOIN 
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=beli_item_div.kd_barang AND mbs.kd_satuan=beli_item_div.kd_satuan
			GROUP BY mbs.kd_barang
		) pembelian
		ON m_barang.kd_barang=pembelian.kd_barang
		LEFT JOIN
		(
			SELECT mbs.kd_barang,SUM(beli_item_div.beli_qty*mbs.jumlah) AS beli_retur_qty FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS beli_qty FROM t_pembelian_retur_detail beli_dt 
				INNER JOIN (
					SELECT no_retur FROM t_pembelian_retur WHERE tanggal >(SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) <= akhir
				) beli 
				ON beli.no_retur=beli_dt.no_retur 
				GROUP BY kd_barang,kd_satuan
			) beli_item_div
			INNER JOIN 
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=beli_item_div.kd_barang AND mbs.kd_satuan=beli_item_div.kd_satuan
			GROUP BY mbs.kd_barang
		) pembelian_retur
		ON m_barang.kd_barang=pembelian_retur.kd_barang
		LEFT JOIN
		(
			SELECT mbs.kd_barang,sum(jumlah*qty) AS qty_opname FROM
			(
				SELECT kd_barang,kd_satuan,SUM(qty) AS qty FROM
				(
					SELECT kd_barang,kd_satuan,
					CASE WHEN status<>2 AND qty>0 THEN (qty*-1)	ELSE qty END AS qty
					FROM t_opname_stok WHERE tanggal>(SELECT MAX(tanggal) FROM g_tutup_buku)
					AND DATE(tanggal) <= akhir
				) op_stat
			GROUP BY kd_barang,kd_satuan
			) op
			INNER JOIN
			(
				SELECT kd_barang,kd_satuan,jumlah FROM m_barang_satuan WHERE kd_barang LIKE '%%'
			) mbs ON mbs.kd_barang=op.kd_barang AND mbs.kd_satuan=op.kd_satuan GROUP BY mbs.kd_barang
		) opname
		ON m_barang.kd_barang=opname.kd_barang
		GROUP BY m_barang.kd_barang
	) stok_akhir
	ON stok_awal.kd_barang=stok_akhir.kd_barang
) stok
INNER JOIN
(
SELECT kd_barang,ROUND(
		IFNULL(SUM(bh.qty * bh.harga), 0) / 
		(
			CASE 
				WHEN IFNULL(SUM(bh.qty), 0) = 0 THEN 1 
				ELSE IFNULL(SUM(bh.qty), 0) 
			END
		),4) as harga_average, 0 as harga_akhir 
	FROM
	(
		SELECT kd_barang, (SELECT MAX(tanggal) FROM g_tutup_buku) as tanggal, 'STOK AWAL' as transaksi, 
			IFNULL(SUM(IFNULL(stok_awal, 0)), 0) as qty, 
			IFNULL(SUM(IFNULL(stok_awal * harga_beli_awal, 0)), 0) / 
			(
				CASE 
					WHEN IFNULL(SUM(IFNULL(stok_awal, 0)), 0) = 0 THEN 1 
					ELSE IFNULL(SUM(IFNULL(stok_awal, 0)), 0)
				END
			) AS harga
		FROM m_barang_divisi
		GROUP BY kd_barang 
		UNION ALL
		SELECT d.kd_barang, b.tanggal, 'PEMBELIAN', (bs.jumlah * d.qty),
			GetHargaBersih(GetHargaBersih(d.harga_beli, d.diskon1, d.diskon2, d.diskon3, d.diskon4, 0, 0), b.diskon1, b.diskon2, b.diskon3, b.diskon4, b.pajak, b.ppnbm) / 
			IFNULL(bs.jumlah, 0)
		FROM t_pembelian b INNER JOIN t_pembelian_detail d ON b.no_transaksi = d.no_transaksi 
		INNER JOIN m_barang_satuan bs ON d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
		WHERE DATE(b.tanggal) > (SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) < awal1
	) bh
	GROUP BY bh.kd_barang
)ha_awal
ON ha_awal.kd_barang=stok.kd_barang
INNER JOIN
(
SELECT kd_barang,ROUND(
		IFNULL(SUM(bh.qty * bh.harga), 0) / 
		(
			CASE 
				WHEN IFNULL(SUM(bh.qty), 0) = 0 THEN 1 
				ELSE IFNULL(SUM(bh.qty), 0) 
			END
		),4) as harga_average, 0 as harga_akhir 
	FROM
	(
		SELECT kd_barang, (SELECT MAX(tanggal) FROM g_tutup_buku) as tanggal, 'STOK AWAL' as transaksi, 
			IFNULL(SUM(IFNULL(stok_awal, 0)), 0) as qty, 
			IFNULL(SUM(IFNULL(stok_awal * harga_beli_awal, 0)), 0) / 
			(
				CASE 
					WHEN IFNULL(SUM(IFNULL(stok_awal, 0)), 0) = 0 THEN 1 
					ELSE IFNULL(SUM(IFNULL(stok_awal, 0)), 0)
				END
			) AS harga
		FROM m_barang_divisi
		GROUP BY kd_barang 
		UNION ALL
		SELECT d.kd_barang, b.tanggal, 'PEMBELIAN', (bs.jumlah * d.qty),
			GetHargaBersih(GetHargaBersih(d.harga_beli, d.diskon1, d.diskon2, d.diskon3, d.diskon4, 0, 0), b.diskon1, b.diskon2, b.diskon3, b.diskon4, b.pajak, b.ppnbm) / 
			IFNULL(bs.jumlah, 0)
		FROM t_pembelian b INNER JOIN t_pembelian_detail d ON b.no_transaksi = d.no_transaksi 
		INNER JOIN m_barang_satuan bs ON d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
		WHERE DATE(b.tanggal) > (SELECT MAX(tanggal) FROM g_tutup_buku) AND DATE(tanggal) <= akhir
	) bh
	GROUP BY bh.kd_barang
)ha_akhir
ON ha_akhir.kd_barang=stok.kd_barang;

	
-- ########################################## Rasio Perputaran Persedian ########################################	


INSERT INTO result_table
	SELECT 'Persediaan Awal' , persediaan_awal;

INSERT INTO result_table
	SELECT 'Persediaan Akhir' , persediaan_akhir;

SET rasio_perputaran_persediaan = harga_pokok_penjualan / rata_rata_persediaan;

INSERT INTO result_table
	SELECT 'Rasio Perputaran Persediaan' , rasio_perputaran_persediaan;

	SELECT * FROM result_table;
END

//xyvdelimiter //
DROP PROCEDURE IF EXISTS proc_report_penjualan;
CREATE PROCEDURE proc_report_penjualan(p_tanggal VARCHAR(10),p_kd_divisi CHAR(6))

BEGIN

SELECT t_penjualan_detail.no_transaksi,kd_divisi,(SELECT m_divisi.nama FROM m_divisi WHERE m_divisi.kd_divisi=t_penjualan.kd_divisi) as divisi,COUNT(qty) AS jumlah,
SUM(
GetHargaBersih(
GetHargaBersih(
harga_jual,
t_penjualan_detail.diskon1,
t_penjualan_detail.diskon2,
t_penjualan_detail.diskon3,
t_penjualan_detail.diskon4,
0,
0
),
t_penjualan.diskon1,
t_penjualan.diskon2,
t_penjualan.diskon3,
t_penjualan.diskon4,
pajak,
0
)
*qty)
AS subtotal,date(tanggal) as tanggal, MONTH(tanggal) AS bulan
FROM t_penjualan_detail 
INNER JOIN t_penjualan ON t_penjualan.no_transaksi=t_penjualan_detail.no_transaksi
WHERE date(tanggal)=p_tanggal AND kd_divisi=p_kd_divisi
GROUP BY t_penjualan_detail.no_transaksi,kd_divisi;
END


//xyvdelimiter //
DROP PROCEDURE IF EXISTS reupdate_m_barang;
CREATE PROCEDURE reupdate_m_barang(IN `inTGLAWAL` datetime,IN `inTGLAKHIR` datetime,IN `inDIVISI` varchar(20))
BEGIN
INSERT INTO solidtech_hm_rumak.m_jenis_bahan SELECT * FROM m_jenis_bahan WHERE kd_jenis_bahan NOT IN (SELECT kd_jenis_bahan from solidtech_hm_rumak.m_jenis_bahan);
INSERT INTO solidtech_hm_rumak.m_warna SELECT * FROM m_warna WHERE kd_warna NOT IN (SELECT kd_warna from solidtech_hm_rumak.m_warna);
INSERT INTO solidtech_hm_rumak.m_model SELECT * FROM m_model WHERE kd_model NOT IN (SELECT kd_model from solidtech_hm_rumak.m_model);
INSERT INTO solidtech_hm_rumak.m_merk SELECT * FROM m_merk WHERE kd_merk NOT IN (SELECT kd_merk from solidtech_hm_rumak.m_merk);
INSERT INTO solidtech_hm_rumak.m_kategori SELECT * FROM m_kategori WHERE kd_kategori NOT IN (SELECT kd_kategori from solidtech_hm_rumak.m_kategori);
INSERT INTO solidtech_hm_rumak.m_barang SELECT * FROM m_barang WHERE kd_barang NOT IN (SELECT kd_barang from solidtech_hm_rumak.m_barang);
INSERT INTO solidtech_hm_rumak.m_satuan SELECT * FROM m_satuan WHERE kd_satuan NOT IN (SELECT kd_satuan from solidtech_hm_rumak.m_satuan);
INSERT INTO solidtech_hm_rumak.m_barang_divisi SELECT * FROM m_barang_divisi WHERE kd_barang NOT IN (SELECT kd_barang from solidtech_hm_rumak.m_barang_divisi);
INSERT INTO solidtech_hm_rumak.m_barang_supplier(kd_barang,kd_supplier,status) SELECT kd_barang,'SAA366','1' FROM m_barang WHERE kd_barang NOT IN (SELECT kd_barang from solidtech_hm_rumak.m_barang_supplier WHERE kd_supplier='SAA366');
INSERT IGNORE INTO solidtech_hm_rumak.m_barang_satuan SELECT * FROM m_barang_satuan;

UPDATE solidtech_hm_rumak.m_barang_satuan a,
(
SELECT kd_barang,kd_satuan,harga_jual_barux-(MOD(harga_jual_barux,100))+
CASE 
WHEN MOD(harga_jual_barux,100) = 0 THEN 0 
ELSE 100
END AS harga_jual 
FROM solidtech_hm_beta.dt_kenaikan_harga_jual_rumak
) b
SET a.harga_jual=b.harga_jual
WHERE a.kd_barang=b.kd_barang AND a.kd_satuan=b.kd_satuan;
END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS select_supplier_order;
CREATE PROCEDURE select_supplier_order(IN `nama_supplier` varchar(255))


BEGIN
DECLARE kode char(6);
SELECT kd_supplier INTO kode FROM m_supplier WHERE nama=nama_supplier;
TRUNCATE table x_order_detail_temp;
INSERT INTO x_order_detail_temp 
SELECT '' as no_order,kd_barang,kd_satuan,'' as jenis,qty,harga_beli_terakhir,0,0,0,0,CURRENT_TIMESTAMP(),'',CURRENT_TIMESTAMP(),'','ONLINE'
FROM v_spk_pembelian_order
WHERE kd_supplier=kode;
SELECT * 
FROM v_spk_pembelian_order
WHERE kd_supplier=kode;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS update_fmi_per_bulan2;
CREATE PROCEDURE update_fmi_per_bulan2(IN `inTGLAWAL` datetime,IN `inTGLAKHIR` datetime,IN `inDIVISI` varchar(20))

BEGIN

DECLARE varTotalPenjualan FLOAT(23,2);
DECLARE varKdBarang VARCHAR(100);
DECLARE varJumlah,varTotal,varSaldoTemp FLOAT;
DECLARE varNomorTemp BIGINT;
DECLARE varFMI,varSMI,selesai INT;

DECLARE cur_transaksi CURSOR FOR
SELECT rest.kdbarang, rest.qty, rest.total 
FROM rest;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET selesai = 1;

DROP TABLE IF EXISTS rest;
CREATE TEMPORARY TABLE rest(
awal DATETIME, 
akhir DATETIME, 
divisi VARCHAR(20), 
nomor BIGINT, 		
kdbarang VARCHAR(100), 		
qty FLOAT, 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT, 
SMI INT
);

INSERT INTO rest
SELECT   inTGLAWAL, inTGLAKHIR, inDIVISI,  0,
dtl.kd_barang, SUM(dtl.qty * bstn.jumlah) AS Jumlah, 
SUM(GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
jual.diskon3, jual.diskon4, jual.pajak, 0) * dtl.qty) AS total, 0, 0, 0
FROM         t_penjualan jual INNER JOIN
t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi INNER JOIN
m_barang brg ON dtl.kd_barang = brg.kd_barang INNER JOIN
m_divisi dv ON jual.kd_divisi = dv.kd_divisi INNER JOIN
m_barang_satuan bstn ON dtl.kd_barang = bstn.kd_barang AND dtl.kd_satuan = bstn.kd_satuan
WHERE dtl.jenis = 1 AND dv.kd_divisi = inDIVISI AND DATE(jual.tanggal) BETWEEN inTGLAWAL AND inTGLAKHIR
GROUP BY dtl.kd_barang
ORDER BY total DESC;

SET varTotalPenjualan=(SELECT SUM(rest.total)as Xtotal FROM rest);
SET varFMI=1;
SET varSMI=0;
SET varSaldoTemp=0;
SET varNomorTemp=0;

OPEN cur_transaksi;		
myloop: LOOP
FETCH cur_transaksi INTO varKdBarang,varJumlah,varTotal;
IF selesai THEN
LEAVE myloop;
END IF;
SET varNomorTemp = varNomorTemp + 1;
SET varSaldoTemp = varSaldoTemp + varTotal;

UPDATE rest SET rest.nomor=varNomorTemp, rest.saldo=varSaldoTemp,rest.FMI=varFMI,rest.SMI=varSMI WHERE rest.kdbarang=varKdBarang;
IF varSaldoTemp>(varTotalPenjualan*0.8) THEN
SET varFMI=0;
SET varSMI=1;
END IF;		
END LOOP;
CLOSE cur_transaksi;
INSERT INTO x_fmi_smi
SELECT DATE_FORMAT(tm.awal,"%M-%Y"),tm.awal, tm.akhir, tm.divisi, 
nomor, tm.kdbarang, br.nama, mr.nama, mdl.nama, kt.nama, wrn.nama,
qty, total, saldo, FMI, SMI, bmax.qty_max, bmax.satuan_max 
FROM rest tm 
INNER JOIN m_barang br ON tm.kdbarang = br.kd_barang 
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mr ON br.kd_merk = mr.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
INNER JOIN
(SELECT pd.kd_barang, br.nama as barang, SUM(pd.qty * bs.jumlah) / bsmax.jumlah as qty_max,`bsmax`.`nama` AS `satuan_max`
from t_pembelian pb INNER JOIN t_pembelian_detail pd ON pb.no_transaksi = pd.no_transaksi
INNER JOIN m_barang_satuan bs ON pd.kd_barang = bs.kd_barang AND pd.kd_satuan = bs.kd_satuan
INNER JOIN m_barang br ON pd.kd_barang = br.kd_barang
INNER JOIN 
(SELECT kd_barang, MAX(jumlah)  as jumlah,`stn`.`nama` AS `nama`
FROM m_barang_satuan bsmax  INNER JOIN m_satuan stn ON bsmax.kd_satuan = stn.kd_satuan
WHERE bsmax.status <> 0 
GROUP BY kd_barang) AS bsmax 	
ON pd.kd_barang = bsmax.kd_barang  
GROUP BY pd.kd_barang, bsmax.jumlah, br.nama) AS bmax
ON bmax.kd_barang=br.kd_barang

ORDER BY nomor;
INSERT INTO x_fmi_smi
SELECT DATE_FORMAT(inTGLAWAL,'%M-%Y'),inTGLAWAL,inTGLAKHIR,a.kd_divisi,999999999,b.kd_barang,nama,'-','-','-','-',0,0,0,0,0,0,'-'
FROM m_barang_divisi a
INNER JOIN m_barang b
ON a.kd_barang= b.kd_barang
AND a.kd_barang not in(SELECT kode FROM x_fmi_smi where divisi=inDIVISI AND awal=inTGLAWAL AND akhir=inTGLAKHIR)
AND kd_divisi=inDIVISI
AND b.tanggal_daftar<=inTGLAWAL
and a.`status`<>0;


END

//xyvdelimiter //
DROP FUNCTION
IF EXISTS getTotalPenjualanPerTransaksi;
CREATE FUNCTION getTotalPenjualanPerTransaksi(no_transaksi_p VARCHAR(30)) RETURNS FLOAT
BEGIN
SET @total =0;
SELECT SUM(
GetHargaBersih(
GetHargaBersih(harga_jual,b.diskon1,b.diskon2,b.diskon3,b.diskon4,0,0),a.diskon1,a.diskon2,a.diskon3,a.diskon4,pajak,0
)
) AS total INTO @total
FROM t_penjualan a INNER  JOIN t_penjualan_detail b ON a.no_transaksi=b.no_transaksi WHERE a.no_transaksi=no_transaksi_p
GROUP BY a.no_transaksi;

RETURN @total;
END

//xyvdelimiter //

DROP PROCEDURE
IF EXISTS proc_histori_kas;

CREATE PROCEDURE proc_histori_kas (
	IN INkd_kas varchar (20),
	IN INperiode_awal CHAR (20),
	IN INperiode_akhir CHAR (20)
)
BEGIN

SELECT `No. Rekening`,transaksi,INperiode_awal AS awal,INperiode_akhir AS akhir,SUM(debet) AS debet,SUM(kredit) AS kredit FROM
(
SELECT histori.tanggal, histori.transaksi, histori.no_transaksi AS `No. Transaksi`, 
                      histori.Objek, histori.debet, histori.kredit, m_kas.no_rekening AS `No. Rekening`, 
                      m_bank.nama AS Bank
FROM

(SELECT     kd_kas, GetTanggalTerakhirTutupBuku() AS tanggal, 'SALDO AWAL' AS transaksi, '-' AS no_transaksi, '-' AS 
Objek, saldo_awal AS debet, 0 AS kredit,
                       '' AS keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi,
                          (SELECT     MIN(kd_user)
                            FROM          m_userx
                            WHERE      status <> 0) AS `Kode User`,
                          (SELECT     nama
                            FROM          m_userx
                            WHERE      kd_user IN
                                                       (SELECT     MIN(kd_user)
                                                         FROM          m_userx
                                                         WHERE      status <> 0)) AS `User`
FROM         m_kas

where GetTanggalTerakhirTutupBuku() between INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_biaya_operasional.kd_kas, t_biaya_operasional.tanggal, 'BIAYA OPERASIONAL' AS transaksi, 

t_biaya_operasional.no_transaksi, 
                      '-' AS Objek, 0 AS debet, t_biaya_operasional.nominal AS kredit, 

t_biaya_operasional.keterangan, t_biaya_operasional.kd_divisi, 
                      m_divisi.nama, t_biaya_operasional.kd_user, m_userx.nama AS Expr1
FROM         t_biaya_operasional INNER JOIN
                      m_divisi ON t_biaya_operasional.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t_biaya_operasional.kd_user = m_userx.kd_user
WHERE     (t_biaya_operasional.tanggal > GetTanggalTerakhirTutupBuku()) AND (t_biaya_operasional.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_hutang_aset_cicilan.kd_kas, t_hutang_aset_cicilan.tanggal, 'CICILAN HUTANG ASET' AS transaksi, 
                      CAST(t_hutang_aset_cicilan.no_cicilan AS VARCHAR(20)) AS no_transaksi, '-' AS Objek, 0 AS debet, 

t_hutang_aset_cicilan.nominal AS kredit, 
                      t_hutang_aset_cicilan.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, 

t_hutang_aset_cicilan.kd_user, m_userx.nama
FROM         t_hutang_aset_cicilan INNER JOIN
                      m_userx ON t_hutang_aset_cicilan.kd_user = m_userx.kd_user
WHERE     (t_hutang_aset_cicilan.tanggal > GetTanggalTerakhirTutupBuku()) AND (t_hutang_aset_cicilan.no_bukti NOT 

IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_hutang_biaya_angkut_cicilan.kd_kas, t_hutang_biaya_angkut_cicilan.tanggal, 'CICILAN HUTANG BIAYA ANGKUT' 

AS transaksi, 
                      t_hutang_biaya_angkut_cicilan.no_cicilan AS no_transaksi, '-' AS Objek, 0 AS debet, 

t_hutang_biaya_angkut_cicilan.nominal AS kredit, 
                      t_hutang_biaya_angkut_cicilan.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, 

t_hutang_biaya_angkut_cicilan.kd_user, m_userx.nama
FROM         t_hutang_biaya_angkut_cicilan INNER JOIN
                      m_userx ON t_hutang_biaya_angkut_cicilan.kd_user = m_userx.kd_user
WHERE     (t_hutang_biaya_angkut_cicilan.tanggal > GetTanggalTerakhirTutupBuku()) AND 

(t_hutang_biaya_angkut_cicilan.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_hutang_cicilan.kd_kas, t_hutang_cicilan.tanggal, 'CICILAN HUTANG PEMBELIAN' AS transaksi, 

t_hutang_cicilan.no_cicilan, 
                      m_supplier.nama AS Objek, 0 AS debet, t_hutang_cicilan.nominal AS kredit, 

t_hutang_cicilan.keterangan, t_pembelian.kd_divisi, 
                      m_divisi.nama, t_hutang_cicilan.kd_user, m_userx.nama AS Expr1
FROM         t_hutang_cicilan INNER JOIN
                      t_pembelian ON t_hutang_cicilan.no_transaksi = t_pembelian.no_transaksi INNER JOIN
                      m_supplier ON t_pembelian.kd_supplier = m_supplier.kd_supplier INNER JOIN
                      m_divisi ON t_pembelian.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t_hutang_cicilan.kd_user = m_userx.kd_user
WHERE     (t_hutang_cicilan.tanggal > GetTanggalTerakhirTutupBuku()) AND (t_hutang_cicilan.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(t_hutang_cicilan.tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_hutang_pegawai_cicilan.kd_kas, t_hutang_pegawai_cicilan.tanggal, 'CICILAN HUTANG PEGAWAI' AS transaksi, 
                      CAST(t_hutang_pegawai_cicilan.no_cicilan AS VARCHAR(20)) AS no_transaksi, '-' AS Objek, 

t_hutang_pegawai_cicilan.nominal AS debet, 
                      0 AS kredit, t_hutang_pegawai_cicilan.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, 

t_hutang_pegawai_cicilan.kd_user, m_userx.nama
FROM         t_hutang_pegawai_cicilan INNER JOIN
                      m_userx ON t_hutang_pegawai_cicilan.kd_user = m_userx.kd_user
WHERE     (t_hutang_pegawai_cicilan.tanggal > GetTanggalTerakhirTutupBuku()) AND 

(t_hutang_pegawai_cicilan.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_hutang_pegawai.kd_kas, t_hutang_pegawai.tanggal, 'HUTANG PEGAWAI' AS transaksi, 

t_hutang_pegawai.no_transaksi, '-' AS Objek, 
                      0 AS debet, t_hutang_pegawai.nominal AS kredit, t_hutang_pegawai.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, t_hutang_pegawai.kd_user, 

m_userx.nama
FROM         t_hutang_pegawai INNER JOIN
                      m_userx ON t_hutang_pegawai.kd_user = m_userx.kd_user
WHERE     (t_hutang_pegawai.tanggal > GetTanggalTerakhirTutupBuku()) AND (t_hutang_pegawai.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_mutasi_kas.kd_kas_sumber, t_mutasi_kas.tanggal, 'MUTASI KAS (KELUAR)' AS transaksi, 

t_mutasi_kas.no_transaksi, '-' AS Objek, 
                      0 AS debet, t_mutasi_kas.nominal AS kredit, t_mutasi_kas.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, t_mutasi_kas.kd_user, 

m_userx.nama
FROM         t_mutasi_kas INNER JOIN
                      m_userx ON t_mutasi_kas.kd_user = m_userx.kd_user
WHERE     (t_mutasi_kas.tanggal > GetTanggalTerakhirTutupBuku())

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_mutasi_kas.kd_kas_tujuan, t_mutasi_kas.tanggal, 'MUTASI KAS (MASUK)' AS transaksi, 

t_mutasi_kas.no_transaksi, '-' AS Objek, 
                      t_mutasi_kas.nominal AS debet, 0 AS kredit, t_mutasi_kas.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, t_mutasi_kas.kd_user, 

m_userx.nama
FROM         t_mutasi_kas INNER JOIN
                      m_userx ON t_mutasi_kas.kd_user = m_userx.kd_user
WHERE     (t_mutasi_kas.tanggal > GetTanggalTerakhirTutupBuku())

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     b.kd_kas, b.tanggal, 'PEMBELIAN BARANG' AS transaksi, b.no_transaksi, m_supplier.nama AS Objek, 0 AS debet, 
                      SUM(GetHargaBersih(GetHargaBersih(d.harga_beli, d.diskon1, d.diskon2, d.diskon3, d.diskon4, 0, 

0), b.diskon1, b.diskon2, b.diskon3, 
                      b.diskon4, b.pajak, b.ppnbm) * d.qty) AS kredit, b.keterangan, b.kd_divisi, m_divisi.nama, 

b.kd_user, m_userx.nama AS Expr1
FROM         t_pembelian b INNER JOIN
                      t_pembelian_detail d ON b.no_transaksi = d.no_transaksi INNER JOIN
                      m_supplier ON b.kd_supplier = m_supplier.kd_supplier INNER JOIN
                      m_divisi ON b.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON b.kd_user = m_userx.kd_user
WHERE     (b.status = 1) AND (b.tanggal > GetTanggalTerakhirTutupBuku())
AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
GROUP BY b.kd_kas, b.tanggal, b.no_transaksi, b.keterangan, m_supplier.nama, b.kd_divisi, m_divisi.nama, b.kd_user, 

m_userx.nama

UNION ALL

SELECT     ba.kd_kas, b.tanggal, 'BIAYA ANGKUT PEMBELIAN' AS transaksi, ba.no_nota, '-' AS Objek, 0 AS debet, ba.nominal AS 

kredit, b.keterangan, b.kd_divisi, 
                      m_divisi.nama, b.kd_user, m_userx.nama AS Expr1
FROM         t_pembelian_biaya_angkut ba INNER JOIN
                      t_pembelian b ON ba.no_transaksi = b.no_transaksi INNER JOIN
                      m_divisi ON b.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON b.kd_user = m_userx.kd_user
WHERE     (b.tanggal > GetTanggalTerakhirTutupBuku()) AND (ba.status = 1)

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     r.kd_kas, r.tanggal, 'RETUR PEMBELIAN' AS transaksi, r.no_retur AS no_transaksi, m_supplier.nama AS Objek, 
                      SUM(GetHargaBersih(GetHargaBersih(rd.harga, rd.diskon1, rd.diskon2, rd.diskon3, rd.diskon4, 0, 

0), r.diskon1, r.diskon2, r.diskon3, r.diskon4, 
                      r.pajak, r.ppnbm) * rd.qty) AS debet, 0 AS kredit, r.keterangan, r.kd_divisi, m_divisi.nama, 

r.kd_user, m_userx.nama AS Expr1
FROM         t_pembelian_retur r INNER JOIN
                      t_pembelian_retur_detail rd ON r.no_retur = rd.no_retur INNER JOIN
                      m_supplier ON r.kd_supplier = m_supplier.kd_supplier INNER JOIN
                      m_divisi ON r.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON r.kd_user = m_userx.kd_user
WHERE     (r.tanggal > GetTanggalTerakhirTutupBuku()) AND (r.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))
AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
GROUP BY r.kd_kas, r.tanggal, r.no_retur, r.keterangan, m_supplier.nama, r.kd_divisi, m_divisi.nama, r.kd_user, 

m_userx.nama

UNION ALL

SELECT     t_pendapatan.kd_kas, t_pendapatan.tanggal, 'PENDAPATAN LAIN-LAIN' AS transaksi, 

t_pendapatan.no_transaksi, '-' AS Objek, 
                      t_pendapatan.nominal AS debet, 0 AS kredit, t_pendapatan.keterangan, 

t_pendapatan.kd_divisi, m_divisi.nama, 
                      t_pendapatan.kd_user, m_userx.nama AS Expr1
FROM         t_pendapatan INNER JOIN
                      m_divisi ON t_pendapatan.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t_pendapatan.kd_user = m_userx.kd_user
WHERE     (t_pendapatan.tanggal > GetTanggalTerakhirTutupBuku()) AND (t_pendapatan.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t.kd_kas, t.tanggal, 'PENJUALAN BARANG' AS transaksi, t.no_transaksi, m_customer.nama AS Objek, getTotalPenjualanPerTransaksi2(t.no_transaksi) AS 

debet, 0 AS kredit, t.keterangan, 
                      t.kd_divisi, m_divisi.nama, t.kd_user, m_userx.nama AS Expr1
FROM         t_penjualan t INNER JOIN
                      
                      m_customer ON t.kd_customer = m_customer.kd_customer INNER JOIN
                      m_divisi ON t.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t.kd_user = m_userx.kd_user
WHERE     (t.status = 1) 

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir AND (t.tanggal > GetTanggalTerakhirTutupBuku())
UNION ALL

SELECT     r.kd_kas, r.tanggal, 'RETUR PENJUALAN' AS transaksi, r.no_retur AS no_transaksi, m_customer.nama AS Objek, 0 

AS debet, 
                      SUM(GetHargaBersih(GetHargaBersih(rd.harga_jual, rd.diskon1, rd.diskon2, rd.diskon3, 

rd.diskon4, 0, 0), r.diskon1, r.diskon2, r.diskon3, 
                      r.diskon4, r.pajak, 0) * rd.qty) AS kredit, r.keterangan, r.kd_divisi, m_divisi.nama, r.kd_user, 

m_userx.nama AS Expr1
FROM         t_penjualan_retur r INNER JOIN
                      t_penjualan_retur_detail rd ON r.no_retur = rd.no_retur INNER JOIN
                      m_customer ON r.kd_customer = m_customer.kd_customer INNER JOIN
                      m_divisi ON r.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON r.kd_user = m_userx.kd_user
WHERE     (r.tanggal > GetTanggalTerakhirTutupBuku()) AND (r.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))
AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
GROUP BY r.kd_kas, r.tanggal, r.no_retur, r.keterangan, m_customer.nama, r.kd_divisi, m_divisi.nama, r.kd_user, 

m_userx.nama

UNION ALL

SELECT     t_piutang_cicilan.kd_kas, t_piutang_cicilan.tanggal, 'CICILAN PIUTANG' AS transaksi, 

t_piutang_cicilan.no_cicilan AS no_transaksi, 
                      m_customer.nama AS Objek, t_piutang_cicilan.nominal AS debet, 0 AS kredit, 

t_piutang_cicilan.keterangan, t_penjualan.kd_divisi, 
                      m_divisi.nama, t_piutang_cicilan.kd_user, m_userx.nama AS Expr1
FROM         t_piutang_cicilan INNER JOIN
                      t_penjualan ON t_piutang_cicilan.no_transaksi = t_penjualan.no_transaksi INNER JOIN
                      m_customer ON t_penjualan.kd_customer = m_customer.kd_customer INNER JOIN
                      m_userx ON t_piutang_cicilan.kd_user = m_userx.kd_user INNER JOIN
                      m_divisi ON t_penjualan.kd_divisi = m_divisi.kd_divisi
WHERE     (t_piutang_cicilan.tanggal > GetTanggalTerakhirTutupBuku()) AND (t_piutang_cicilan.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(t_piutang_cicilan.tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_piutang_cicilan.kd_kas, t_piutang_cicilan.tanggal, 'PENDATAPAN KARTU KREDIT DARI PIUTANG' AS transaksi, 
                      t_piutang_cicilan.no_cicilan AS no_transaksi, m_customer.nama AS Objek, 
                      t_piutang_cicilan.nominal * t_piutang_cicilan.other AS debet, 0 AS kredit, 

t_piutang_cicilan.keterangan, t_penjualan.kd_divisi, 
                      m_divisi.nama, t_piutang_cicilan.kd_user, m_userx.nama AS Expr1
FROM         t_piutang_cicilan INNER JOIN
                      t_penjualan ON t_piutang_cicilan.no_transaksi = t_penjualan.no_transaksi INNER JOIN
                      m_customer ON t_penjualan.kd_customer = m_customer.kd_customer INNER JOIN
                      m_userx ON t_piutang_cicilan.kd_user = m_userx.kd_user INNER JOIN
                      m_divisi ON t_penjualan.kd_divisi = m_divisi.kd_divisi
WHERE     (t_piutang_cicilan.tanggal > GetTanggalTerakhirTutupBuku()) AND (t_piutang_cicilan.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga)) AND (t_piutang_cicilan.other > 0)

AND DATE(t_piutang_cicilan.tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_surat_berharga.kd_kas_setor, t_surat_berharga.tanggal_cair, 'SURAT BERHARGA (KELUAR)' AS transaksi, 
                      t_surat_berharga.no_surat_berharga AS no_transaksi, '-' AS Objek, 0 AS debet, 

t_surat_berharga.nominal AS kredit, 
                      t_surat_berharga.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, t_surat_berharga.kd_user, 

m_userx.nama
FROM         t_surat_berharga INNER JOIN
                      m_userx ON t_surat_berharga.kd_user = m_userx.kd_user
WHERE     (t_surat_berharga.tanggal_cair > GetTanggalTerakhirTutupBuku()) AND (GetFormatTanggal

(t_surat_berharga.tanggal_cair) 
                      >= GetFormatTanggal(t_surat_berharga.tanggal_setor)) AND (t_surat_berharga.status_blong = 

0) AND 
                      (t_surat_berharga.status_asal = 0)

AND DATE(t_surat_berharga.tanggal_cair) between INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_surat_berharga.kd_kas_setor, t_surat_berharga.tanggal_cair, 'SURAT BERHARGA (MASUK)' AS transaksi, 
                      t_surat_berharga.no_surat_berharga AS no_transaksi, '-' AS Objek, t_surat_berharga.nominal AS 

debet, 0 AS kredit, 
                      t_surat_berharga.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, t_surat_berharga.kd_user, 

m_userx.nama
FROM         t_surat_berharga INNER JOIN
                      m_userx ON t_surat_berharga.kd_user = m_userx.kd_user
WHERE     (t_surat_berharga.tanggal_cair > GetTanggalTerakhirTutupBuku()) AND (GetFormatTanggal

(t_surat_berharga.tanggal_cair) 
                      >= GetFormatTanggal(t_surat_berharga.tanggal_setor)) AND (t_surat_berharga.status_blong = 

0) AND 
                      (t_surat_berharga.status_asal = 1)

AND t_surat_berharga.tanggal_cair between INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_penambahan_kas.kd_kas, t_penambahan_kas.tanggal, 'PENAMBAHAN MODAL' AS transaksi, 

t_penambahan_kas.no_transaksi, 
                      '-' AS Objek, t_penambahan_kas.nominal AS debet, 0 AS kredit, t_penambahan_kas.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, t_penambahan_kas.kd_user, 

m_userx.nama
FROM         t_penambahan_kas INNER JOIN
                      m_userx ON t_penambahan_kas.kd_user = m_userx.kd_user
WHERE     (t_penambahan_kas.tanggal > GetTanggalTerakhirTutupBuku())

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_prive.kd_kas, t_prive.tanggal, 'PRIVE' AS transaksi, t_prive.no_transaksi, '-' AS Objek, 0 AS debet, 

t_prive.nominal AS kredit, 
                      t_prive.keterangan,
                          (SELECT     MIN(kd_divisi)
                            FROM          m_divisi
                            WHERE      status <> 0) AS `Kode Divisi`,
                          (SELECT     nama
                            FROM          m_divisi
                            WHERE      kd_divisi IN
                                                       ((SELECT     MIN(kd_divisi)
                                                           FROM         m_divisi
                                                           WHERE     status <> 0))) AS Divisi, t_prive.kd_user, 

m_userx.nama
FROM         t_prive INNER JOIN
                      m_userx ON t_prive.kd_user = m_userx.kd_user
WHERE     (t_prive.tanggal > GetTanggalTerakhirTutupBuku())

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     m_aset.kd_kas, m_aset.tanggal_jual, 'PENJUALAN ASET' AS Expr1, 'PA-' + m_aset.kd_aset AS Expr2, '-' AS 

Objek, 
                      m_aset.harga_beli - GetPenyusutanAset(m_aset.kd_aset, m_aset.tanggal_beli, 

m_aset.tanggal_jual) AS debet, 0 AS kredit, 
                      'PENJUALAN ' + m_aset.nama AS Keterangan, m_aset.kd_divisi, m_divisi.nama,
                          (SELECT     MIN(kd_user)
                            FROM          m_userx
                            WHERE      status <> 0) AS `Kode User`,
                          (SELECT     nama
                            FROM          m_userx
                            WHERE      kd_user IN
                                                       (SELECT     MIN(kd_user)
                                                         FROM          m_userx
                                                         WHERE      status <> 0)) AS `User`
FROM         m_aset INNER JOIN
                      m_divisi ON m_aset.kd_divisi = m_divisi.kd_divisi
WHERE     (GetFormatTanggal(m_aset.tanggal_jual) >= GetFormatTanggal(m_aset.tanggal_beli)) AND 
                      (m_aset.tanggal_jual > GetTanggalTerakhirTutupBuku()) AND (m_aset.tanggal_jual > 

GetTanggalTerakhirTutupBuku()) AND 
                      (m_aset.no_bukti NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND m_aset.tanggal_jual between INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t.kd_kas, t.tanggal_pesan, 'PENJUALAN JASA' AS transaksi, t.no_transaksi, m_customer.nama AS Objek, 
                      SUM(GetHargaBersih(GetHargaBersih(d.harga, d.diskon, 0, 0, 0, 0, 0), t.diskon, 0, 0, 0, 

t.pajak, 0) * d.qty) AS debet, 0 AS kredit, t.keterangan, 
                      t.kd_divisi, m_divisi.nama, t.kd_user, m_userx.nama AS Expr1
FROM         m_jasa m INNER JOIN
                      t_penjualan_jasa_detail d ON m.kd_jasa = d.kd_jasa INNER JOIN
                      m_jasa_kategori k ON m.kd_jasa_kategori = k.kd_jasa_kategori INNER JOIN
                      t_penjualan_jasa t ON d.no_transaksi = t.no_transaksi INNER JOIN
                      m_customer ON t.kd_customer = m_customer.kd_customer INNER JOIN
                      m_divisi ON t.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t.kd_user = m_userx.kd_user
WHERE     (k.status = 2) AND (t.status = 1) AND (t.tanggal_pesan > GetTanggalTerakhirTutupBuku())
AND t.tanggal_pesan between INperiode_awal AND INperiode_akhir
GROUP BY t.kd_kas, t.tanggal_pesan, t.no_transaksi, t.keterangan, m_customer.nama, t.kd_divisi, m_divisi.nama, 

t.kd_user, m_userx.nama

UNION ALL

SELECT     t.kd_kas, t.tanggal_pesan, 'PENDAPATAN KARTU KREDIT PENJUALAN JASA' AS transaksi, t.no_transaksi, 

m_customer.nama AS Objek, 
                      SUM(GetHargaBersih(GetHargaBersih(d.harga, d.diskon, 0, 0, 0, 0, 0), t.diskon, 0, 0, 0, 

t.pajak, 0) * d.qty * t.other) AS debet, 0 AS kredit, 
                      t.keterangan, t.kd_divisi, m_divisi.nama, t.kd_user, m_userx.nama AS Expr1
FROM         m_jasa m INNER JOIN
                      t_penjualan_jasa_detail d ON m.kd_jasa = d.kd_jasa INNER JOIN
                      m_jasa_kategori k ON m.kd_jasa_kategori = k.kd_jasa_kategori INNER JOIN
                      t_penjualan_jasa t ON d.no_transaksi = t.no_transaksi INNER JOIN
                      m_customer ON t.kd_customer = m_customer.kd_customer INNER JOIN
                      m_divisi ON t.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t.kd_user = m_userx.kd_user
WHERE     (k.status = 2) AND (t.status = 1) AND (t.tanggal_pesan > GetTanggalTerakhirTutupBuku())
AND t.tanggal_pesan between INperiode_awal AND INperiode_akhir
GROUP BY t.kd_kas, t.tanggal_pesan, t.no_transaksi, t.keterangan, m_customer.nama, t.kd_divisi, m_divisi.nama, 

t.kd_user, m_userx.nama


UNION ALL

SELECT     t.kd_kas, t.awal, 'PERSEWAAN' AS transaksi, t.no_transaksi, m_customer.nama AS `Customer /Supplier`, 
                      SUM(GetHargaBersih(GetHargaBersih(d.harga, d.diskon, 0, 0, 0, 0, 0), t.diskon, 0, 0, 0, 

t.pajak, 0) * d.qty) AS debet, 0 AS kredit, t.keterangan, 
                      t.kd_divisi, m_divisi.nama, t.kd_user, m_userx.nama AS Expr1
FROM         m_jasa m INNER JOIN
                      t_penjualan_jasa_detail d ON m.kd_jasa = d.kd_jasa INNER JOIN
                      m_jasa_kategori k ON m.kd_jasa_kategori = k.kd_jasa_kategori INNER JOIN
                      t_penjualan_jasa t ON d.no_transaksi = t.no_transaksi INNER JOIN
                      m_customer ON t.kd_customer = m_customer.kd_customer INNER JOIN
                      m_divisi ON t.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t.kd_user = m_userx.kd_user
WHERE     (k.status = 1) AND (t.status = 1) AND (t.tanggal_pesan > GetTanggalTerakhirTutupBuku())
AND t.awal between INperiode_awal AND INperiode_akhir
GROUP BY t.kd_kas, t.awal, t.no_transaksi, t.keterangan, m_customer.nama, t.kd_divisi, m_divisi.nama, t.kd_user, 

m_userx.nama

UNION ALL

SELECT     t.kd_kas, t.awal, 'PENDAPATAN KARTU KREDIT PERSEWAAN' AS transaksi, t.no_transaksi, m_customer.nama AS Objek, 
                      SUM(GetHargaBersih(GetHargaBersih(d.harga, d.diskon, 0, 0, 0, 0, 0), t.diskon, 0, 0, 0, 

t.pajak, 0) * d.qty * t.other) AS debet, 0 AS kredit, 
                      t.keterangan, t.kd_divisi, m_divisi.nama, t.kd_user, m_userx.nama AS Expr1
FROM         m_jasa m INNER JOIN
                      t_penjualan_jasa_detail d ON m.kd_jasa = d.kd_jasa INNER JOIN
                      m_jasa_kategori k ON m.kd_jasa_kategori = k.kd_jasa_kategori INNER JOIN
                      t_penjualan_jasa t ON d.no_transaksi = t.no_transaksi INNER JOIN
                      m_customer ON t.kd_customer = m_customer.kd_customer INNER JOIN
                      m_divisi ON t.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t.kd_user = m_userx.kd_user
WHERE     (k.status = 1) AND (t.status = 1) AND (t.tanggal_pesan > GetTanggalTerakhirTutupBuku())
AND t.awal between INperiode_awal AND INperiode_akhir
GROUP BY t.kd_kas, t.awal, t.no_transaksi, t.keterangan, m_customer.nama, t.kd_divisi, m_divisi.nama, t.kd_user, 

m_userx.nama

UNION ALL

SELECT     t_piutang_jasa_cicilan.kd_kas, t_piutang_jasa_cicilan.tanggal, 'CICILAN PIUTANG JASA' AS transaksi, 
                      t_piutang_jasa_cicilan.no_cicilan AS no_transaksi, m_customer.nama AS Objek, 

t_piutang_jasa_cicilan.nominal AS debet, 0 AS kredit, 
                      t_piutang_jasa_cicilan.keterangan, t_penjualan_jasa.kd_divisi, m_divisi.nama, 

t_piutang_jasa_cicilan.kd_user, 
                      m_userx.nama AS Expr1
FROM         t_piutang_jasa_cicilan INNER JOIN
                      t_penjualan_jasa ON t_piutang_jasa_cicilan.no_transaksi = t_penjualan_jasa.no_transaksi 

INNER JOIN
                      m_customer ON t_penjualan_jasa.kd_customer = m_customer.kd_customer INNER JOIN
                      m_divisi ON t_penjualan_jasa.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t_piutang_jasa_cicilan.kd_user = m_userx.kd_user
WHERE     (t_piutang_jasa_cicilan.tanggal > GetTanggalTerakhirTutupBuku()) AND (t_piutang_jasa_cicilan.no_bukti 

NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir
UNION ALL

SELECT     t_piutang_jasa_cicilan.kd_kas, t_piutang_jasa_cicilan.tanggal, 'PENDAPATAN KARTU KREDIT CICILAN PIUTANG JASA' AS transaksi, 
                      t_piutang_jasa_cicilan.no_cicilan AS no_transaksi, m_customer.nama AS Objek, 
                      t_piutang_jasa_cicilan.nominal * t_piutang_jasa_cicilan.other AS debet, 0 AS kredit, 

t_piutang_jasa_cicilan.keterangan, 
                      t_penjualan_jasa.kd_divisi, m_divisi.nama, t_piutang_jasa_cicilan.kd_user, m_userx.nama 

AS Expr1
FROM         t_piutang_jasa_cicilan INNER JOIN
                      t_penjualan_jasa ON t_piutang_jasa_cicilan.no_transaksi = t_penjualan_jasa.no_transaksi 

INNER JOIN
                      m_customer ON t_penjualan_jasa.kd_customer = m_customer.kd_customer INNER JOIN
                      m_divisi ON t_penjualan_jasa.kd_divisi = m_divisi.kd_divisi INNER JOIN
                      m_userx ON t_piutang_jasa_cicilan.kd_user = m_userx.kd_user
WHERE     ((t_piutang_jasa_cicilan.nominal * t_piutang_jasa_cicilan.other)>0) AND (t_piutang_jasa_cicilan.tanggal > GetTanggalTerakhirTutupBuku()) AND (t_piutang_jasa_cicilan.no_bukti 

NOT IN
                          (SELECT     no_surat_berharga
                            FROM          t_surat_berharga))

AND DATE(tanggal) BETWEEN INperiode_awal AND INperiode_akhir) histori
INNER JOIN
                      m_kas ON histori.kd_kas = m_kas.kd_kas INNER JOIN
                      m_bank ON m_kas.kd_bank = m_bank.kd_bank
WHERE histori.kd_kas=INkd_kas ) totalan GROUP BY `No. Rekening`,transaksi;

END

//xyvdelimiter //
DROP FUNCTION IF EXISTS `GetHargaBersih_vd`;
CREATE FUNCTION `GetHargaBersih_vd`(harga FLOAT, diskon1 FLOAT,diskon2 FLOAT,diskon3 FLOAT,diskon4 FLOAT,pajak1 FLOAT,ppnbm FLOAT,jenis FLOAT)
 RETURNS double
BEGIN 
	DECLARE harga_bersih FLOAT;
	DECLARE	diskon1_rp FLOAT;
	DECLARE	diskon2_rp FLOAT;
	DECLARE diskon3_rp FLOAT;
	DECLARE	diskon4_rp FLOAT;
	DECLARE	pajak_rp FLOAT;
	DECLARE ppnbm_rp FLOAT;
	DECLARE output FLOAT;
	SET harga_bersih = harga;
	SET diskon1_rp=0;
	SET diskon2_rp=0;
	SET diskon3_rp=0;
	SET diskon4_rp=0;
	SET pajak_rp=0;

-- jika harga lebih dari 0 baru diproses, jika tidak langsung return harga bersih menjadi 0
	IF harga_bersih > 0 THEN
-- 		BEGIN
		-- DISKON PERTAMA
			IF diskon1 >-1 AND diskon1 < 1 THEN
					SET diskon1_rp= (harga_bersih * diskon1);
					SET harga_bersih = harga_bersih - (harga_bersih * diskon1);
			ELSEIF diskon1 >= 1 OR diskon1 <= -1 THEN
					SET diskon1_rp= diskon1;
					SET harga_bersih = harga_bersih - diskon1;
			END IF;

		-- DISKON KEDUA
			IF diskon2 > -1 AND diskon2 < 1 THEN
				SET diskon2_rp= (harga_bersih * diskon2);
				SET harga_bersih = harga_bersih - (harga_bersih * diskon2);
			ELSEIF diskon2 >=1 OR diskon2 <= -1 THEN
				SET diskon2_rp= diskon2;
				SET harga_bersih = harga_bersih - diskon2;
			END IF;

		
		-- DISKON KETIGA
			IF diskon3 > -1 AND diskon3 < 1 THEN
				SET diskon3_rp= (harga_bersih * diskon3);
				SET harga_bersih = harga_bersih - (harga_bersih * diskon3);
			ELSEIF diskon3 >=1 OR diskon3 <= -1 THEN
				SET diskon3_rp= diskon3;
				SET harga_bersih = harga_bersih - diskon3;
			END IF;
			

		-- DISKON KEEMPAT
			IF diskon4 > -1 AND diskon4 < 1 THEN
				SET diskon4_rp= (harga_bersih * diskon4);
				SET harga_bersih = harga_bersih - (harga_bersih * diskon4);
			ELSEIF diskon4 >=1 OR diskon4 <= -1 THEN
				SET diskon4_rp= diskon4;
				SET harga_bersih = harga_bersih - diskon4;
			END IF;
			
		-- PAJAK
			SET pajak_rp= (harga_bersih * pajak1);
			SET harga_bersih = harga_bersih + (harga_bersih * pajak1);

	 	-- PPNBM
			SET ppnbm_rp= (harga_bersih * ppnbm);
			SET harga_bersih = harga_bersih + (harga_bersih * ppnbm);
	END IF;
		 
		
	IF jenis = 0 THEN
		SET output=harga_bersih;
	ELSEIF jenis = 1 THEN
		SET output=diskon1_rp;
	ELSEIF jenis = 2 THEN
		SET output=diskon2_rp;
	ELSEIF jenis = 3 THEN
		SET output=diskon3_rp;
	ELSEIF jenis = 4 THEN
		SET output=diskon4_rp;
	ELSEIF jenis = 5 THEN
		SET output=pajak_rp;
	ELSEIF jenis = 6 THEN
		SET output=ppnbm_rp;
	END IF;
	RETURN output;
END

//xyvdelimiter //
DROP VIEW IF EXISTS `mon_all_t_penjualan_retur`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `mon_all_t_penjualan_retur` AS select `penjualan`.`no_retur` AS `no_retur`,`penjualan`.`kd_customer` AS `kd_customer`,(select `m_customer`.`nama` from `m_customer` where `m_customer`.`kd_customer` = `penjualan`.`kd_customer`) AS `nama`,`penjualan`.`kd_divisi` AS `kd_divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` = `penjualan`.`kd_divisi`) AS `divisi`,`penjualan`.`kd_jenis` AS `kd_jenis`,(select `m_jenis_bayar`.`nama` from `m_jenis_bayar` where `m_jenis_bayar`.`kd_jenis` = `penjualan`.`kd_jenis`) AS `jenis_bayar`,`penjualan`.`kd_kas` AS `kd_kas`,(select `m_kas`.`no_rekening` from `m_kas` where `m_kas`.`kd_kas` = `penjualan`.`kd_kas`) AS `no_rekening`,`penjualan`.`no_bukti` AS `no_bukti`,`penjualan`.`tanggal` AS `tanggal`,`penjualan`.`keterangan` AS `keterangan`,`penjualan`.`kd_user` AS `kd_user`,`penjualan`.`tanggal_server` AS `tanggal_server`,`penjualan`.`kd_barang` AS `kd_barang`,(select `m_barang`.`nama` from `m_barang` where `m_barang`.`kd_barang` = `penjualan`.`kd_barang`) AS `barang`,`penjualan`.`kd_satuan` AS `kd_satuan`,`penjualan`.`kd_pegawai` AS `kd_pegawai`,(select `m_pegawai`.`nama` from `m_pegawai` where `m_pegawai`.`kd_pegawai` = `penjualan`.`kd_pegawai`) AS `pegawai`,`penjualan`.`qty` AS `qty`,`penjualan`.`qty_konversi` AS `qty_konversi`,`penjualan`.`harga_jual` AS `harga_jual`,`penjualan`.`mdiskon1` AS `mdiskon1`,`penjualan`.`mdiskon2` AS `mdiskon2`,`penjualan`.`mdiskon3` AS `mdiskon3`,`penjualan`.`mdiskon4` AS `mdiskon4`,`penjualan`.`ddiskon1` * `penjualan`.`qty` AS `ddiskon1`,`penjualan`.`ddiskon2` * `penjualan`.`qty` AS `ddiskon2`,`penjualan`.`ddiskon3` * `penjualan`.`qty` AS `ddiskon3`,`penjualan`.`ddiskon4` * `penjualan`.`qty` AS `ddiskon14`,`penjualan`.`mdiskon1` + `penjualan`.`mdiskon2` + `penjualan`.`mdiskon3` + `penjualan`.`mdiskon4` + (`penjualan`.`ddiskon1` + `penjualan`.`ddiskon2` + `penjualan`.`ddiskon3` + `penjualan`.`ddiskon4`) * `penjualan`.`qty` + `penjualan`.`jumlah` / (111 / 100) AS `dpp_kotor`,`penjualan`.`mdiskon1` + `penjualan`.`mdiskon2` + `penjualan`.`mdiskon3` + `penjualan`.`mdiskon4` + (`penjualan`.`ddiskon1` + `penjualan`.`ddiskon2` + `penjualan`.`ddiskon3` + `penjualan`.`ddiskon4`) * `penjualan`.`qty` AS `jumlah_diskon`,`penjualan`.`jumlah` / (111 / 100) AS `dpp_bersih`,`penjualan`.`jumlah` / (111 / 100) * 111 / 100 AS `jumlah_ppn`,`penjualan`.`jumlah` AS `total`,(select `m_satuan`.`nama` from `m_satuan` where `m_satuan`.`kd_satuan` = `penjualan`.`kd_satuan_terkecil`) AS `satuan_terkecil`,`penjualan`.`jumlah_bs` AS `jumlah_bs` from (select `jl`.`no_retur` AS `no_retur`,`jl`.`kd_customer` AS `kd_customer`,`jl`.`kd_divisi` AS `kd_divisi`,`jl`.`kd_jenis` AS `kd_jenis`,`jl`.`kd_kas` AS `kd_kas`,`jl`.`no_bukti` AS `no_bukti`,`jl`.`tanggal` AS `tanggal`,`jl`.`keterangan` AS `keterangan`,`jl`.`kd_user` AS `kd_user`,`jl`.`tanggal_server` AS `tanggal_server`,`jl_dt`.`kd_barang` AS `kd_barang`,`jl_dt`.`kd_satuan` AS `kd_satuan`,`jl_dt`.`kd_pegawai` AS `kd_pegawai`,`jl_dt`.`qty` AS `qty`,`jl_dt`.`qty` * `bst`.`jumlah` AS `qty_konversi`,`jl_dt`.`harga_jual` AS `harga_jual`,`jl_dt`.`ddiskon1` AS `ddiskon1`,`jl_dt`.`ddiskon2` AS `ddiskon2`,`jl_dt`.`ddiskon3` AS `ddiskon3`,`jl_dt`.`ddiskon4` AS `ddiskon4`,`GetHargaBersih_vd`(`jl_dt`.`dsubtotal`,`jl`.`diskon1`,`jl`.`diskon2`,`jl`.`diskon3`,`jl`.`diskon4`,0,0,1) AS `mdiskon1`,`GetHargaBersih_vd`(`jl_dt`.`dsubtotal`,`jl`.`diskon1`,`jl`.`diskon2`,`jl`.`diskon3`,`jl`.`diskon4`,0,0,2) AS `mdiskon2`,`GetHargaBersih_vd`(`jl_dt`.`dsubtotal`,`jl`.`diskon1`,`jl`.`diskon2`,`jl`.`diskon3`,`jl`.`diskon4`,0,0,3) AS `mdiskon3`,`GetHargaBersih_vd`(`jl_dt`.`dsubtotal`,`jl`.`diskon1`,`jl`.`diskon2`,`jl`.`diskon3`,`jl`.`diskon4`,0,0,4) AS `mdiskon4`,`GetHargaBersih_vd`(`jl_dt`.`dsubtotal`,`jl`.`diskon1`,`jl`.`diskon2`,`jl`.`diskon3`,`jl`.`diskon4`,`jl`.`pajak`,0,0) * `jl_dt`.`qty` AS `jumlah`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`kd_barang` = `jl_dt`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `kd_satuan_terkecil`,`bst`.`jumlah` AS `jumlah_bs` from ((((select `t_penjualan_retur`.`no_retur` AS `no_retur`,`t_penjualan_retur`.`kd_divisi` AS `kd_divisi`,`t_penjualan_retur`.`kd_customer` AS `kd_customer`,`t_penjualan_retur`.`kd_jenis` AS `kd_jenis`,`t_penjualan_retur`.`kd_kas` AS `kd_kas`,`t_penjualan_retur`.`tanggal` AS `tanggal`,`t_penjualan_retur`.`no_bukti` AS `no_bukti`,`t_penjualan_retur`.`diskon1` AS `diskon1`,`t_penjualan_retur`.`diskon2` AS `diskon2`,`t_penjualan_retur`.`diskon3` AS `diskon3`,`t_penjualan_retur`.`diskon4` AS `diskon4`,`t_penjualan_retur`.`pajak` AS `pajak`,`t_penjualan_retur`.`keterangan` AS `keterangan`,`t_penjualan_retur`.`kd_user` AS `kd_user`,`t_penjualan_retur`.`tanggal_server` AS `tanggal_server`,`t_penjualan_retur`.`date_add` AS `date_add`,`t_penjualan_retur`.`user_add` AS `user_add`,`t_penjualan_retur`.`date_modif` AS `date_modif`,`t_penjualan_retur`.`user_modif` AS `user_modif`,`t_penjualan_retur`.`divisi_id` AS `divisi_id` from `t_penjualan_retur`) `jl` join (select `t_penjualan_retur_detail`.`no_retur` AS `no_retur`,`t_penjualan_retur_detail`.`kd_barang` AS `kd_barang`,`t_penjualan_retur_detail`.`kd_satuan` AS `kd_satuan`,`t_penjualan_retur_detail`.`kd_pegawai` AS `kd_pegawai`,`t_penjualan_retur_detail`.`qty` AS `qty`,`t_penjualan_retur_detail`.`harga_jual` AS `harga_jual`,`GetHargaBersih_vd`(`t_penjualan_retur_detail`.`harga_jual`,`t_penjualan_retur_detail`.`diskon1`,`t_penjualan_retur_detail`.`diskon2`,`t_penjualan_retur_detail`.`diskon3`,`t_penjualan_retur_detail`.`diskon4`,0,0,1) AS `ddiskon1`,`GetHargaBersih_vd`(`t_penjualan_retur_detail`.`harga_jual`,`t_penjualan_retur_detail`.`diskon1`,`t_penjualan_retur_detail`.`diskon2`,`t_penjualan_retur_detail`.`diskon3`,`t_penjualan_retur_detail`.`diskon4`,0,0,2) AS `ddiskon2`,`GetHargaBersih_vd`(`t_penjualan_retur_detail`.`harga_jual`,`t_penjualan_retur_detail`.`diskon1`,`t_penjualan_retur_detail`.`diskon2`,`t_penjualan_retur_detail`.`diskon3`,`t_penjualan_retur_detail`.`diskon4`,0,0,3) AS `ddiskon3`,`GetHargaBersih_vd`(`t_penjualan_retur_detail`.`harga_jual`,`t_penjualan_retur_detail`.`diskon1`,`t_penjualan_retur_detail`.`diskon2`,`t_penjualan_retur_detail`.`diskon3`,`t_penjualan_retur_detail`.`diskon4`,0,0,4) AS `ddiskon4`,`GetHargaBersih_vd`(`t_penjualan_retur_detail`.`harga_jual`,`t_penjualan_retur_detail`.`diskon1`,`t_penjualan_retur_detail`.`diskon2`,`t_penjualan_retur_detail`.`diskon3`,`t_penjualan_retur_detail`.`diskon4`,0,0,0) AS `dsubtotal` from `t_penjualan_retur_detail`) `jl_dt` on(`jl`.`no_retur` = `jl_dt`.`no_retur`)) join (select `t_penjualan_retur`.`no_retur` AS `no_retur`,sum(`t_penjualan_retur_detail`.`harga_jual` * `t_penjualan_retur_detail`.`qty`) AS `subtotal_kotor` from (`t_penjualan_retur` join `t_penjualan_retur_detail` on(`t_penjualan_retur`.`no_retur` = `t_penjualan_retur_detail`.`no_retur`)) group by `t_penjualan_retur`.`no_retur`) `penjualan_kotor` on(`penjualan_kotor`.`no_retur` = `jl`.`no_retur`)) join `m_barang_satuan` `bst` on(`jl_dt`.`kd_barang` = `bst`.`kd_barang` and `jl_dt`.`kd_satuan` = `bst`.`kd_satuan`))) `penjualan`;

//xyvdelimiter //
DROP VIEW IF EXISTS `v_mon_report_GetLaporanMutasiStokFull`;
CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW `v_mon_report_GetLaporanMutasiStokFull` AS select `result`.`no_transaksi` AS `no_transaksi`,`result`.`kd_barang` AS `kd_barang`,`result`.`kd_satuan` AS `kd_satuan`,`result`.`tanggal` AS `tanggal`,`result`.`qty_masuk` AS `qty_masuk`,`result`.`rupiah_masuk` AS `rupiah_masuk`,`result`.`qty_keluar` AS `qty_keluar`,`result`.`rupiah_keluar` AS `rupiah_keluar`,`result`.`jenis` AS `jenis`,`result`.`jenis_transaksi` AS `jenis_transaksi`,`result`.`keterangan` AS `keterangan`,`result`.`satuan_terkecil` AS `satuan_terkecil`,row_number() over ( partition by `result`.`kd_barang` order by `result`.`kd_barang`,`result`.`tanggal`) AS `rn` from (select '-' AS `no_transaksi`,`m_barang_divisi`.`kd_barang` AS `kd_barang`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`kd_barang` = `m_barang_divisi`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `kd_satuan`,(select max(`g_tutup_buku`.`tanggal`) from `g_tutup_buku`) AS `tanggal`,`m_barang_divisi`.`stok_awal` AS `qty_masuk`,`m_barang_divisi`.`harga` AS `rupiah_masuk`,0 AS `qty_keluar`,0 AS `rupiah_keluar`,0 AS `jenis`,'stok awal' AS `jenis_transaksi`,'saldo awal' AS `keterangan`,(select `m_satuan`.`nama` from (`m_satuan` join `m_barang_satuan` on(`m_satuan`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) where `m_barang_satuan`.`kd_barang` = `m_barang_divisi`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `satuan_terkecil` from (select `m_barang_divisi`.`kd_barang` AS `kd_barang`,sum(`m_barang_divisi`.`stok_awal`) AS `stok_awal`,sum(`m_barang_divisi`.`harga_beli_awal`) AS `harga_beli_awal`,case when sum(`m_barang_divisi`.`stok_awal`) = 0 then 0 else sum(`m_barang_divisi`.`harga_beli_awal` * `m_barang_divisi`.`stok_awal`) / sum(`m_barang_divisi`.`stok_awal`) end AS `harga` from `m_barang_divisi` group by `m_barang_divisi`.`kd_barang`) `m_barang_divisi` union all select `t_pembelian_detail`.`no_transaksi` AS `no_transaksi`,`t_pembelian_detail`.`kd_barang` AS `kd_barang`,`t_pembelian_detail`.`kd_satuan` AS `kd_satuan`,`t_pembelian`.`tanggal` AS `tanggal`,`t_pembelian_detail`.`qty` * `satuan`.`jumlah` AS `qty_masuk`,`GetHargaBersih`(`GetHargaBersih`(`t_pembelian_detail`.`harga_beli`,`t_pembelian_detail`.`diskon1`,`t_pembelian_detail`.`diskon2`,`t_pembelian_detail`.`diskon3`,`t_pembelian_detail`.`diskon4`,0,0),`t_pembelian`.`diskon1`,`t_pembelian`.`diskon2`,`t_pembelian`.`diskon3`,`t_pembelian`.`diskon4`,0,0) / `satuan`.`jumlah` AS `rupiah_masuk`,0 AS `qty_keluar`,0 AS `rupiah_keluar`,5 AS `jenis`,'pembelian' AS `jenis_transaksi`,`t_pembelian`.`keterangan` AS `keterangan`,(select `m_satuan`.`nama` from `m_satuan` where `m_satuan`.`kd_satuan` = `t_pembelian_detail`.`kd_satuan_terkecil`) AS `satuan_terkecil` from (((select `t_pembelian_detail`.`no_transaksi` AS `no_transaksi`,`t_pembelian_detail`.`kd_barang` AS `kd_barang`,`t_pembelian_detail`.`kd_satuan` AS `kd_satuan`,`t_pembelian_detail`.`jenis` AS `jenis`,`t_pembelian_detail`.`qty` AS `qty`,`t_pembelian_detail`.`harga_beli` AS `harga_beli`,`t_pembelian_detail`.`diskon1` AS `diskon1`,`t_pembelian_detail`.`diskon2` AS `diskon2`,`t_pembelian_detail`.`diskon3` AS `diskon3`,`t_pembelian_detail`.`diskon4` AS `diskon4`,`t_pembelian_detail`.`point1` AS `point1`,`t_pembelian_detail`.`date_add` AS `date_add`,`t_pembelian_detail`.`user_add` AS `user_add`,`t_pembelian_detail`.`date_modif` AS `date_modif`,`t_pembelian_detail`.`user_modif` AS `user_modif`,`t_pembelian_detail`.`divisi_id` AS `divisi_id`,`t_pembelian_detail`.`keterangan` AS `keterangan`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`kd_barang` = `t_pembelian_detail`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `kd_satuan_terkecil` from `t_pembelian_detail`) `t_pembelian_detail` join `t_pembelian` on(`t_pembelian_detail`.`no_transaksi` = `t_pembelian`.`no_transaksi`)) join (select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_barang_satuan`.`status` AS `status`,`m_barang_satuan`.`margin` AS `margin`,`m_barang_satuan`.`date_add` AS `date_add`,`m_barang_satuan`.`user_add` AS `user_add`,`m_barang_satuan`.`date_modif` AS `date_modif`,`m_barang_satuan`.`user_modif` AS `user_modif`,`m_barang_satuan`.`divisi_id` AS `divisi_id`,`m_satuan`.`nama` AS `nama` from (`m_barang_satuan` join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`))) `satuan` on(`t_pembelian_detail`.`kd_barang` = `satuan`.`kd_barang` and `t_pembelian_detail`.`kd_satuan` = `satuan`.`kd_satuan`)) where cast(`t_pembelian`.`tanggal` as date) between (select max(`g_tutup_buku`.`tanggal`) from `g_tutup_buku`) and cast(current_timestamp() as date) union all select `t_penjualan_detail`.`no_transaksi` AS `no_transaksi`,`t_penjualan_detail`.`kd_barang` AS `kd_barang`,`t_penjualan_detail`.`kd_satuan` AS `kd_satuan`,`t_penjualan`.`tanggal` AS `tanggal`,0 AS `qty_masuk`,0 AS `rupiah_masuk`,`t_penjualan_detail`.`qty` * `satuan`.`jumlah` AS `qty_keluar`,`t_penjualan_detail`.`harga_jual` / `satuan`.`jumlah` AS `rupiah_keluar`,7 AS `jenis`,'penjualan' AS `jenis_transaksi`,`t_penjualan`.`keterangan` AS `keterangan`,(select `m_satuan`.`nama` from `m_satuan` where `m_satuan`.`kd_satuan` = `t_penjualan_detail`.`kd_satuan_terkecil`) AS `satuan_terkecil` from (((select `t_penjualan_detail`.`no_transaksi` AS `no_transaksi`,`t_penjualan_detail`.`kd_barang` AS `kd_barang`,`t_penjualan_detail`.`kd_satuan` AS `kd_satuan`,`t_penjualan_detail`.`kd_pegawai` AS `kd_pegawai`,`t_penjualan_detail`.`jenis` AS `jenis`,`t_penjualan_detail`.`diskon1` AS `diskon1`,`t_penjualan_detail`.`diskon2` AS `diskon2`,`t_penjualan_detail`.`diskon3` AS `diskon3`,`t_penjualan_detail`.`diskon4` AS `diskon4`,`t_penjualan_detail`.`harga_jual` AS `harga_jual`,`t_penjualan_detail`.`qty` AS `qty`,`t_penjualan_detail`.`point1` AS `point1`,`t_penjualan_detail`.`point2` AS `point2`,`t_penjualan_detail`.`date_add` AS `date_add`,`t_penjualan_detail`.`user_add` AS `user_add`,`t_penjualan_detail`.`date_modif` AS `date_modif`,`t_penjualan_detail`.`user_modif` AS `user_modif`,`t_penjualan_detail`.`divisi_id` AS `divisi_id`,`t_penjualan_detail`.`keterangan` AS `keterangan`,`t_penjualan_detail`.`group_id` AS `group_id`,`t_penjualan_detail`.`no_urut` AS `no_urut`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`kd_barang` = `t_penjualan_detail`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `kd_satuan_terkecil` from `t_penjualan_detail`) `t_penjualan_detail` join `t_penjualan` on(`t_penjualan_detail`.`no_transaksi` = `t_penjualan`.`no_transaksi`)) join (select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_barang_satuan`.`status` AS `status`,`m_barang_satuan`.`margin` AS `margin`,`m_barang_satuan`.`date_add` AS `date_add`,`m_barang_satuan`.`user_add` AS `user_add`,`m_barang_satuan`.`date_modif` AS `date_modif`,`m_barang_satuan`.`user_modif` AS `user_modif`,`m_barang_satuan`.`divisi_id` AS `divisi_id`,`m_satuan`.`nama` AS `nama` from (`m_barang_satuan` join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`))) `satuan` on(`t_penjualan_detail`.`kd_barang` = `satuan`.`kd_barang` and `t_penjualan_detail`.`kd_satuan` = `satuan`.`kd_satuan`)) where cast(`t_penjualan`.`tanggal` as date) between (select max(`g_tutup_buku`.`tanggal`) from `g_tutup_buku`) and cast(current_timestamp() as date) union all select `t_pembelian_retur_detail`.`no_retur` AS `no_retur`,`t_pembelian_retur_detail`.`kd_barang` AS `kd_barang`,`t_pembelian_retur_detail`.`kd_satuan` AS `kd_satuan`,`t_pembelian_retur`.`tanggal` AS `tanggal`,0 AS `qty_masuk`,0 AS `rupiah_masuk`,`t_pembelian_retur_detail`.`qty` * `satuan`.`jumlah` AS `qty_keluar`,`t_pembelian_retur_detail`.`total_detail` / `satuan`.`jumlah` AS `rupiah_keluar`,6 AS `jenis`,'pembelian retur' AS `jenis_transaksi`,`t_pembelian_retur`.`keterangan` AS `keterangan`,(select `m_satuan`.`nama` from `m_satuan` where `m_satuan`.`kd_satuan` = `t_pembelian_retur_detail`.`kd_satuan_terkecil`) AS `satuan_terkecil` from (((select `t_pembelian_retur_detail`.`no_retur` AS `no_retur`,`t_pembelian_retur_detail`.`kd_barang` AS `kd_barang`,`t_pembelian_retur_detail`.`kd_satuan` AS `kd_satuan`,`t_pembelian_retur_detail`.`qty` AS `qty`,`t_pembelian_retur_detail`.`harga` AS `harga`,`t_pembelian_retur_detail`.`diskon1` AS `diskon1`,`t_pembelian_retur_detail`.`diskon2` AS `diskon2`,`t_pembelian_retur_detail`.`diskon3` AS `diskon3`,`t_pembelian_retur_detail`.`diskon4` AS `diskon4`,`t_pembelian_retur_detail`.`date_add` AS `date_add`,`t_pembelian_retur_detail`.`user_add` AS `user_add`,`t_pembelian_retur_detail`.`date_modif` AS `date_modif`,`t_pembelian_retur_detail`.`user_modif` AS `user_modif`,`t_pembelian_retur_detail`.`divisi_id` AS `divisi_id`,`t_pembelian_retur_detail`.`keterangan` AS `keterangan`,`t_pembelian_retur_detail`.`harga` AS `total_detail`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`kd_barang` = `t_pembelian_retur_detail`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `kd_satuan_terkecil` from `t_pembelian_retur_detail`) `t_pembelian_retur_detail` join `t_pembelian_retur` on(`t_pembelian_retur_detail`.`no_retur` = `t_pembelian_retur`.`no_retur`)) join (select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_barang_satuan`.`status` AS `status`,`m_barang_satuan`.`margin` AS `margin`,`m_barang_satuan`.`date_add` AS `date_add`,`m_barang_satuan`.`user_add` AS `user_add`,`m_barang_satuan`.`date_modif` AS `date_modif`,`m_barang_satuan`.`user_modif` AS `user_modif`,`m_barang_satuan`.`divisi_id` AS `divisi_id`,`m_satuan`.`nama` AS `nama` from (`m_barang_satuan` join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`))) `satuan` on(`t_pembelian_retur_detail`.`kd_barang` = `satuan`.`kd_barang` and `t_pembelian_retur_detail`.`kd_satuan` = `satuan`.`kd_satuan`)) where cast(`t_pembelian_retur`.`tanggal` as date) between (select max(`g_tutup_buku`.`tanggal`) from `g_tutup_buku`) and cast(current_timestamp() as date) union all select `t_penjualan_retur`.`no_retur` AS `no_retur`,`t_penjualan_retur`.`kd_barang` AS `kd_barang`,`t_penjualan_retur`.`kd_satuan` AS `kd_satuan`,`t_penjualan_retur`.`tanggal` AS `tanggal`,`t_penjualan_retur`.`qty` * `t_penjualan_retur`.`jumlah_bs` AS `qty_masuk`,`t_penjualan_retur`.`dpp_bersih` / `t_penjualan_retur`.`qty_konversi` AS `rupiah_masuk`,0 AS `qty_keluar`,0 AS `rupiah_keluar`,8 AS `jenis`,'penjualan retur' AS `jenis_transaksi`,`t_penjualan_retur`.`keterangan` AS `keterangan`,`t_penjualan_retur`.`satuan_terkecil` AS `satuan_terkecil` from `mon_all_t_penjualan_retur` `t_penjualan_retur` where cast(`t_penjualan_retur`.`tanggal` as date) between (select max(`g_tutup_buku`.`tanggal`) from `g_tutup_buku`) and cast(current_timestamp() as date) union all select `t_opname_stok`.`no_transaksi` AS `no_transaksi`,`t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`kd_satuan` AS `kd_satuan`,`t_opname_stok`.`tanggal` AS `tanggal`,`t_opname_stok`.`qty` * `satuan`.`jumlah` AS `qty_masuk`,ifnull(`t_opname_stok`.`harga`,0) AS `rupiah_masuk`,0 AS `qty_keluar`,0 AS `rupiah_keluar`,3 AS `jenis`,'opname masuk' AS `jenis_transaksi`,`t_opname_stok`.`keterangan` AS `keterangan`,(select `m_satuan`.`nama` from `m_satuan` where `m_satuan`.`kd_satuan` = `t_opname_stok`.`kd_satuan_terkecil`) AS `satuan_terkecil` from ((select `t_opname_stok`.`no_transaksi` AS `no_transaksi`,`t_opname_stok`.`kd_divisi` AS `kd_divisi`,`t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`kd_satuan` AS `kd_satuan`,`t_opname_stok`.`tanggal` AS `tanggal`,`t_opname_stok`.`qty` AS `qty`,`t_opname_stok`.`keterangan` AS `keterangan`,`t_opname_stok`.`kd_user` AS `kd_user`,`t_opname_stok`.`status` AS `status`,`t_opname_stok`.`tanggal_server` AS `tanggal_server`,`t_opname_stok`.`date_add` AS `date_add`,`t_opname_stok`.`user_add` AS `user_add`,`t_opname_stok`.`date_modif` AS `date_modif`,`t_opname_stok`.`user_modif` AS `user_modif`,`t_opname_stok`.`divisi_id` AS `divisi_id`,`t_opname_stok`.`harga` AS `harga`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`kd_barang` = `t_opname_stok`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `kd_satuan_terkecil` from `t_opname_stok`) `t_opname_stok` join (select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_barang_satuan`.`status` AS `status`,`m_barang_satuan`.`margin` AS `margin`,`m_barang_satuan`.`date_add` AS `date_add`,`m_barang_satuan`.`user_add` AS `user_add`,`m_barang_satuan`.`date_modif` AS `date_modif`,`m_barang_satuan`.`user_modif` AS `user_modif`,`m_barang_satuan`.`divisi_id` AS `divisi_id`,`m_satuan`.`nama` AS `nama` from (`m_barang_satuan` join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`))) `satuan` on(`t_opname_stok`.`kd_barang` = `satuan`.`kd_barang` and `t_opname_stok`.`kd_satuan` = `satuan`.`kd_satuan`)) where cast(`t_opname_stok`.`tanggal` as date) between (select max(`g_tutup_buku`.`tanggal`) from `g_tutup_buku`) and cast(current_timestamp() as date) and `t_opname_stok`.`qty` <> 0 and `t_opname_stok`.`status` = 2 union all select `t_opname_stok`.`no_transaksi` AS `no_transaksi`,`t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`kd_satuan` AS `kd_satuan`,`t_opname_stok`.`tanggal` AS `tanggal`,0 AS `qty_masuk`,0 AS `rupiah_masuk`,`t_opname_stok`.`qty` * `satuan`.`jumlah` AS `qty_keluar`,ifnull(`t_opname_stok`.`harga`,0) AS `rupiah_keluar`,4 AS `jenis`,'opname keluar' AS `jenis_transaksi`,`t_opname_stok`.`keterangan` AS `keterangan`,(select `m_satuan`.`nama` from `m_satuan` where `m_satuan`.`kd_satuan` = `t_opname_stok`.`kd_satuan_terkecil`) AS `satuan_terkecil` from ((select `t_opname_stok`.`no_transaksi` AS `no_transaksi`,`t_opname_stok`.`kd_divisi` AS `kd_divisi`,`t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`kd_satuan` AS `kd_satuan`,`t_opname_stok`.`tanggal` AS `tanggal`,`t_opname_stok`.`qty` AS `qty`,`t_opname_stok`.`keterangan` AS `keterangan`,`t_opname_stok`.`kd_user` AS `kd_user`,`t_opname_stok`.`status` AS `status`,`t_opname_stok`.`tanggal_server` AS `tanggal_server`,`t_opname_stok`.`date_add` AS `date_add`,`t_opname_stok`.`user_add` AS `user_add`,`t_opname_stok`.`date_modif` AS `date_modif`,`t_opname_stok`.`user_modif` AS `user_modif`,`t_opname_stok`.`divisi_id` AS `divisi_id`,`t_opname_stok`.`harga` AS `harga`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`kd_barang` = `t_opname_stok`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `kd_satuan_terkecil` from `t_opname_stok`) `t_opname_stok` join (select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_barang_satuan`.`status` AS `status`,`m_barang_satuan`.`margin` AS `margin`,`m_barang_satuan`.`date_add` AS `date_add`,`m_barang_satuan`.`user_add` AS `user_add`,`m_barang_satuan`.`date_modif` AS `date_modif`,`m_barang_satuan`.`user_modif` AS `user_modif`,`m_barang_satuan`.`divisi_id` AS `divisi_id`,`m_satuan`.`nama` AS `nama` from (`m_barang_satuan` join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`))) `satuan` on(`t_opname_stok`.`kd_barang` = `satuan`.`kd_barang` and `t_opname_stok`.`kd_satuan` = `satuan`.`kd_satuan`)) where cast(`t_opname_stok`.`tanggal` as date) between (select max(`g_tutup_buku`.`tanggal`) from `g_tutup_buku`) and cast(current_timestamp() as date) and `t_opname_stok`.`qty` <> 0 and `t_opname_stok`.`status` <> 2 union all select `t_mutasi_internal_detail`.`no_transaksi` AS `no_transaksi`,`t_mutasi_internal_detail`.`kd_barang` AS `kd_barang`,`t_mutasi_internal_detail`.`kd_satuan` AS `kd_satuan`,`t_mutasi_internal`.`tanggal` AS `tanggal`,`t_mutasi_internal_detail`.`qty` * `satuan`.`jumlah` AS `qty_keluar`,`t_mutasi_internal_detail`.`harga` / `satuan`.`jumlah` AS `rupiah_keluar`,0 AS `qty_masuk`,0 AS `rupiah_masuk`,14 AS `jenis`,'mutasi internal keluar' AS `jenis_transaksi`,`t_mutasi_internal`.`keterangan` AS `keterangan`,(select `m_satuan`.`nama` from `m_satuan` where `m_satuan`.`kd_satuan` = `t_mutasi_internal_detail`.`kd_satuan_terkecil`) AS `satuan_terkecil` from (((select `t_mutasi_internal_detail`.`no_transaksi` AS `no_transaksi`,`t_mutasi_internal_detail`.`kd_barang` AS `kd_barang`,`t_mutasi_internal_detail`.`kd_satuan` AS `kd_satuan`,`t_mutasi_internal_detail`.`harga` AS `harga`,`t_mutasi_internal_detail`.`qty` AS `qty`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`kd_barang` = `t_mutasi_internal_detail`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `kd_satuan_terkecil` from `t_mutasi_internal_detail`) `t_mutasi_internal_detail` join `t_mutasi_internal` on(`t_mutasi_internal_detail`.`no_transaksi` = `t_mutasi_internal`.`no_transaksi`)) join (select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_barang_satuan`.`status` AS `status`,`m_barang_satuan`.`margin` AS `margin`,`m_barang_satuan`.`date_add` AS `date_add`,`m_barang_satuan`.`user_add` AS `user_add`,`m_barang_satuan`.`date_modif` AS `date_modif`,`m_barang_satuan`.`user_modif` AS `user_modif`,`m_barang_satuan`.`divisi_id` AS `divisi_id`,`m_satuan`.`nama` AS `nama` from (`m_barang_satuan` join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`))) `satuan` on(`t_mutasi_internal_detail`.`kd_barang` = `satuan`.`kd_barang` and `t_mutasi_internal_detail`.`kd_satuan` = `satuan`.`kd_satuan`)) where cast(`t_mutasi_internal`.`tanggal` as date) between (select max(`g_tutup_buku`.`tanggal`) from `g_tutup_buku`) and cast(current_timestamp() as date) and `t_mutasi_internal`.`jenis` = 1 union all select `t_mutasi_internal_detail`.`no_transaksi` AS `no_transaksi`,`t_mutasi_internal_detail`.`kd_barang` AS `kd_barang`,`t_mutasi_internal_detail`.`kd_satuan` AS `kd_satuan`,`t_mutasi_internal`.`tanggal` AS `tanggal`,`t_mutasi_internal_detail`.`qty` * `satuan`.`jumlah` AS `qty_masuk`,`t_mutasi_internal_detail`.`harga` / `satuan`.`jumlah` AS `rupiah_masuk`,0 AS `qty_keluar`,0 AS `rupiah_keluar`,15 AS `jenis`,'mutasi internal masuk' AS `jenis_transaksi`,`t_mutasi_internal`.`keterangan` AS `keterangan`,(select `m_satuan`.`nama` from `m_satuan` where `m_satuan`.`kd_satuan` = `t_mutasi_internal_detail`.`kd_satuan_terkecil`) AS `satuan_terkecil` from (((select `t_mutasi_internal_detail`.`no_transaksi` AS `no_transaksi`,`t_mutasi_internal_detail`.`kd_barang` AS `kd_barang`,`t_mutasi_internal_detail`.`kd_satuan` AS `kd_satuan`,`t_mutasi_internal_detail`.`harga` AS `harga`,`t_mutasi_internal_detail`.`qty` AS `qty`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`kd_barang` = `t_mutasi_internal_detail`.`kd_barang` and `m_barang_satuan`.`jumlah` = 1 limit 1) AS `kd_satuan_terkecil` from `t_mutasi_internal_detail`) `t_mutasi_internal_detail` join `t_mutasi_internal` on(`t_mutasi_internal_detail`.`no_transaksi` = `t_mutasi_internal`.`no_transaksi`)) join (select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_barang_satuan`.`status` AS `status`,`m_barang_satuan`.`margin` AS `margin`,`m_barang_satuan`.`date_add` AS `date_add`,`m_barang_satuan`.`user_add` AS `user_add`,`m_barang_satuan`.`date_modif` AS `date_modif`,`m_barang_satuan`.`user_modif` AS `user_modif`,`m_barang_satuan`.`divisi_id` AS `divisi_id`,`m_satuan`.`nama` AS `nama` from (`m_barang_satuan` join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`))) `satuan` on(`t_mutasi_internal_detail`.`kd_barang` = `satuan`.`kd_barang` and `t_mutasi_internal_detail`.`kd_satuan` = `satuan`.`kd_satuan`)) where cast(`t_mutasi_internal`.`tanggal` as date) between (select max(`g_tutup_buku`.`tanggal`) from `g_tutup_buku`) and cast(current_timestamp() as date) and `t_mutasi_internal`.`jenis` = 2) `result`;

//xyvdelimiter //
DROP PROCEDURE IF EXISTS `p_get_customer_item`;
CREATE PROCEDURE `p_get_customer_item`(IN comp_id VARCHAR ( 100 ), IN order_col VARCHAR(100), IN order_type VARCHAR (100), IN forlimit INT, IN forlength INT, IN search VARCHAR(6000), IN count_stats INT)
BEGIN 
	DECLARE query_sql VARCHAR (16000);
	DECLARE query_order VARCHAR(6000);
	DECLARE query_limit VARCHAR(6000);
	DECLARE query_search VARCHAR(6000);
	DECLARE query_count VARCHAR(6000);
	
	SET query_order = '';
	SET query_limit = '';
	SET query_search = '';
	SET query_count = '*';
	
	IF order_col <> '' AND order_type <> '' THEN 
		SET query_order=CONCAT(" ORDER BY ",order_col," ",order_type,"");
	ELSE 
		SET query_order=CONCAT(" ORDER BY item ASC");
	END IF;
	
	IF forlength <> 0 THEN 
		SET query_limit=CONCAT(" LIMIT ",forlimit,",",forlength,"") ;
	ELSE 
		SET query_limit="";
	END IF;
	
	IF search <> '' THEN
		SET query_search=CONCAT(" WHERE item LIKE '%",search,"%' OR merk LIKE '%",search,"%' OR kategori LIKE '%",search,"%'");
	END IF;
	
	IF count_stats <> 0 THEN 
		SET query_count=CONCAT(" COUNT(a.item) AS `jumlah record` ");
	END IF;

SET query_sql=CONCAT("SELECT ",query_count," FROM (SELECT
	barang.*,
	barang_satuan.kd_satuan,
	barang_satuan.satuan,
	barang_satuan.`status` AS mbs_status 
FROM
	(
	SELECT
		m_barang.kd_barang,
		m_barang.nama AS item,
		m_merk.kd_merk,
		m_merk.nama AS merk,
		m_kategori.kd_kategori,
		m_kategori.nama AS kategori 
	FROM
		misterkong_",comp_id,".m_barang m_barang
		INNER JOIN misterkong_",comp_id,".m_kategori m_kategori ON m_barang.kd_kategori = m_kategori.kd_kategori
		INNER JOIN misterkong_",comp_id,".m_merk m_merk ON m_merk.kd_merk = m_barang.kd_merk 
	WHERE
		m_barang.STATUS <> 0 
	) barang
	INNER JOIN (
	SELECT
		kd_barang,
		GROUP_CONCAT( m_satuan.kd_satuan ) AS kd_satuan,
		GROUP_CONCAT( nama ) AS satuan,
		GROUP_CONCAT( m_barang_satuan.`status` ) AS `status` 
	FROM
		misterkong_",comp_id,".m_barang_satuan m_barang_satuan
		INNER JOIN misterkong_",comp_id,".m_satuan m_satuan ON m_satuan.kd_satuan = m_barang_satuan.kd_satuan 
	WHERE
		m_barang_satuan.`status` <> 0 
	GROUP BY
	kd_barang 
	) barang_satuan ON barang.kd_barang = barang_satuan.kd_barang) a ",query_search, query_order, query_limit);
	PREPARE prepare_statement FROM query_sql;
	EXECUTE prepare_statement;
END


//xyvdelimiter //
DROP PROCEDURE IF EXISTS `p_getRekomendasiMenu`;
CREATE PROCEDURE `p_getRekomendasiMenu`(IN INlat DOUBLE, IN INlng DOUBLE,IN INoffset INT , IN INkategori INT)
BEGIN

	SELECT 
		m_user_company.id, 
		m_user_company.company_id,
		nama_usaha, 
		jml_transaksi,
		(
			3959 * ACOS (COS (RADIANS(koordinat_lat))
			* COS(RADIANS(INlat))
			* COS(RADIANS(INlng) - RADIANS(koordinat_lng))
			+ SIN (RADIANS(koordinat_lat))
			* SIN(RADIANS(INlat))
			)
		) AS distance 

	FROM m_user_company 
	INNER JOIN 
	(
		SELECT COUNT(no_transaksi) AS jml_transaksi, user_id_toko 
		FROM t_penjualan WHERE jenis_transaksi='FOOD' GROUP BY user_id_toko ORDER BY jml_transaksi DESC
	)	t_penjualan ON m_user_company.id = t_penjualan.user_id_toko
	INNER JOIN 
		(
			SELECT company_id FROM m_barang INNER JOIN 
			(
				SELECT barang_id FROM m_barang_gambar WHERE gambar <> ''
			) gambar ON m_barang.id = gambar.barang_id 
			INNER JOIN (SELECT barang_id FROM m_barang_verifikasi WHERE status_barang=1) brg_ver ON m_barang.id=brg_ver.barang_id
			INNER JOIN (SELECT barang_gambar_id FROM m_barang_gambar_verifikasi WHERE status_gambar=1) brg_gbr_ver ON gambar.id=brg_gbr_ver.barang_gambar_id
-- 			WHERE `status` = 2 
			GROUP BY company_id
		) barang_gambar ON m_user_company.id = barang_gambar.company_id	 
	INNER JOIN m_kategori_usaha ON m_user_company.kategori_usaha=m_kategori_usaha.kd_kategori_usaha
	WHERE m_kategori_usaha.kode_kategori=1
-- 	WHERE (kategori_usaha = 2 OR kategori_usaha = 7) and status = 1 
HAVING distance < 30
	LIMIT 10 OFFSET INoffset;

END

//xyvdelimiter //
DROP PROCEDURE IF EXISTS `p_labaRugi`;
CREATE PROCEDURE `p_labaRugi`(IN awal DATE, IN akhir DATE)
BEGIN

DECLARE pembelian DOUBLE;
DECLARE retur_pembelian DOUBLE;
DECLARE penjualan_bruto DOUBLE;
DECLARE potongan DOUBLE;
DECLARE pajak DOUBLE;
DECLARE retur_penjualan DOUBLE;
DECLARE penjualan_netto DOUBLE;


SELECT
	SUM(GetHargaBersih (
		GetHargaBersih ( harga_beli * qty, t_pembelian_detail.diskon1, t_pembelian_detail.diskon2, t_pembelian_detail.diskon3, t_pembelian_detail.diskon4, 0, 0 ),
		t_pembelian.diskon1,
		t_pembelian.diskon2,
		t_pembelian.diskon3,
		t_pembelian.diskon4,
		t_pembelian.pajak,
		t_pembelian.ppnbm 
	)) AS nominal
INTO pembelian
FROM 
	t_pembelian
	INNER JOIN t_pembelian_detail ON t_pembelian.no_transaksi = t_pembelian_detail.no_transaksi 
WHERE
	DATE ( tanggal ) BETWEEN awal AND akhir AND `status`=1;
	
	
SELECT
	SUM(GetHargaBersih (
		GetHargaBersih ( harga * qty, t_pembelian_retur_detail.diskon1, t_pembelian_retur_detail.diskon2, t_pembelian_retur_detail.diskon3, t_pembelian_retur_detail.diskon4, 0, 0 ),
		t_pembelian_retur.diskon1,
		t_pembelian_retur.diskon2,
		t_pembelian_retur.diskon3,
		t_pembelian_retur.diskon4,
		t_pembelian_retur.pajak,
		t_pembelian_retur.ppnbm 
	)) AS nominal
INTO retur_pembelian
FROM
	t_pembelian_retur
	INNER JOIN t_pembelian_retur_detail ON t_pembelian_retur.no_retur = t_pembelian_retur_detail.no_retur
WHERE
	DATE ( tanggal ) BETWEEN awal AND akhir;
	
	
SELECT
	SUM(harga_jual*qty) AS nominal
INTO penjualan_bruto
FROM
	t_penjualan
	INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi 
WHERE
	DATE ( tanggal ) BETWEEN awal AND akhir AND `status`=1;
	
	


SELECT
-- 	no_transaksi, kotor, bersih, kotor-bersih AS nominal
	SUM(kotor)-SUM(bersih) AS nominal
INTO potongan
FROM
	( SELECT 
			t_penjualan.no_transaksi,
			(harga_jual*qty) AS kotor,
			GetHargaBersih (
			GetHargaBersih ( harga_jual * qty, t_penjualan_detail.diskon1, t_penjualan_detail.diskon2, t_penjualan_detail.diskon3, t_penjualan_detail.diskon4, 0, 0 ),
			t_penjualan.diskon1,
			t_penjualan.diskon2,
			t_penjualan.diskon3,
			t_penjualan.diskon4,
			0,
			0 
		) AS bersih FROM t_penjualan
		INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi 
		WHERE
			DATE ( tanggal ) BETWEEN awal AND akhir AND `status`=1
	) penjualan;
	
	
	
SELECT
	SUM(bersih)-SUM(kotor) AS nominal
INTO pajak
FROM
		( SELECT 
			t_penjualan.no_transaksi,
			(harga_jual*qty) AS kotor,
			GetHargaBersih (
			GetHargaBersih ( harga_jual * qty, 0, 0, 0, 0, 0, 0 ),
			0,
			0,
			0,
			0,
			t_penjualan.pajak,
			0 
		) AS bersih
		FROM t_penjualan
		INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi 
		WHERE
			DATE ( tanggal ) BETWEEN awal AND akhir AND `status`=1
-- 			 AND t_penjualan.no_transaksi='HM2205220149'
	) penjualan;
	
	

SELECT
	SUM(GetHargaBersih (
		GetHargaBersih ( harga_jual * qty, t_penjualan_retur_detail.diskon1, t_penjualan_retur_detail.diskon2, t_penjualan_retur_detail.diskon3, t_penjualan_retur_detail.diskon4, 0, 0 ),
		t_penjualan_retur.diskon1,
		t_penjualan_retur.diskon2,
		t_penjualan_retur.diskon3,
		t_penjualan_retur.diskon4,
		t_penjualan_retur.pajak,
		0 
	)) AS nominal
INTO retur_penjualan
FROM
	t_penjualan_retur
	INNER JOIN t_penjualan_retur_detail ON t_penjualan_retur.no_retur = t_penjualan_retur_detail.no_retur
WHERE
	DATE ( tanggal ) BETWEEN awal AND akhir;
	
	
SELECT
	penjualan_bruto - potongan + pajak - retur_penjualan AS nominal
INTO penjualan_netto;



SELECT 'pembelian' AS keterangan, pembelian AS nominal
UNION
SELECT 'pembelian retur' AS keterangan, retur_pembelian AS nominal
UNION
SELECT 'penjualan bruto' AS keterangan, penjualan_bruto AS nominal
UNION
SELECT 'potongan' AS keterangan, potongan AS nominal
UNION
SELECT 'pajak' AS keterangan, pajak AS nominal
UNION
SELECT 'penjualan retur' AS keterangan, retur_penjualan AS nominal
UNION
SELECT 'penjualan netto' AS keterangan, penjualan_netto AS nominal;


END

//xyvdelimiter //
DROP PROCEDURE IF EXISTS `p_mon_report_kartu_stok`;
CREATE PROCEDURE `p_mon_report_kartu_stok`(IN awal DATE, IN akhir DATE, IN kode_item VARCHAR(60), IN for_limit INT, IN for_length INT)
BEGIN
DROP TEMPORARY TABLE IF EXISTS result_table;
CREATE TEMPORARY TABLE result_table AS


SELECT transaksi.*, @prev_barang AS prev_kd_barang,
		CASE 
			WHEN qty_masuk <> 0 THEN
					@harga := rupiah_masuk
			WHEN qty_masuk = 0 THEN
					@harga := rupiah_keluar
		END AS harga,
		CASE
		WHEN @prev_barang=kd_barang THEN
			CASE 
					WHEN jenis_transaksi='stok awal' THEN
							 @saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='pembelian' THEN 
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='penjualan' THEN
							@saldo_qty := @saldo_qty - qty_keluar
					WHEN jenis_transaksi='opname masuk' THEN
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='opname keluar' THEN
							@saldo_qty := @saldo_qty - qty_keluar
					WHEN jenis_transaksi='penjualan retur' THEN
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='pembelian retur' THEN
							@saldo_qty := @saldo_qty - qty_keluar
					WHEN jenis_transaksi='mutasi internal masuk' THEN
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='mutasi internal keluar' THEN
							@saldo_qty := @saldo_qty - qty_keluar
				END
				
		ELSE
			@saldo_qty:=qty_masuk-qty_keluar
	END as saldo_qty, 
	
	
	CASE WHEN @prev_barang=kd_barang THEN
		CASE WHEN (@prev_saldo_qty + qty_masuk - qty_keluar) <> 0 THEN
				CASE 
					WHEN jenis_transaksi='pembelian' OR jenis_transaksi='opname masuk' OR jenis_transaksi='mutasi internal masuk' OR jenis_transaksi='penjualan retur'  THEN
-- 							@average:=IFNULL(((@prev_saldo_qty * @prev_average) + ((qty_masuk - qty_keluar) * @harga)) / (@prev_saldo_qty + qty_masuk - qty_keluar),0)
						CASE 
							WHEN @saldo_qty <= 0 THEN
								@average:=@harga
							ELSE
								@average:=IFNULL(((@prev_saldo_qty * @prev_average) + ((qty_masuk - qty_keluar) * @harga)	) / (@prev_saldo_qty + qty_masuk - qty_keluar),0)
						END
					ELSE 
							@average:=@prev_average
				END
	  ELSE
		   @average:=@prev_average
		END 
	ELSE
		@prev_average:=@harga
	END AS average,
	
	CASE
		WHEN @prev_barang=kd_barang THEN
			CASE 
					WHEN jenis_transaksi='stok awal' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='pembelian' THEN 
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='penjualan' THEN
							@saldo_rp := (@average * @saldo_qty) 
					WHEN jenis_transaksi='opname masuk' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='opname keluar' THEN
							@saldo_rp := (@average * @saldo_qty) 
					WHEN jenis_transaksi='penjualan retur' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='pembelian retur' THEN
							@saldo_rp := (@average * @saldo_qty) 
					WHEN jenis_transaksi='mutasi internal masuk' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='mutasi internal keluar' THEN
							@saldo_rp := (@average * @saldo_qty) 
				END
		ELSE
			@saldo_rp:= (rupiah_masuk*qty_masuk)-(rupiah_keluar*qty_keluar)
	END as saldo_rp, 
	
	CASE WHEN @prev_barang=kd_barang THEN
		@prev_average
	ELSE
		0
	END AS prev_average,
	CASE WHEN @prev_barang=kd_barang THEN
		@prev_average:=@average
	ELSE
		@prev_average:=@harga
	END AS current_average,
	CASE WHEN @prev_barang=kd_barang THEN
		@prev_saldo_qty 
	ELSE
		0
END AS prev_saldo_qty,
	@prev_barang:=kd_barang AS current_kd_barang,
	@prev_saldo_qty:=@saldo_qty AS current_saldo_qty
FROM v_t_mon_report_GetLaporanMutasiStokFull transaksi 
	CROSS JOIN (SELECT @saldo_qty := 0) saldo_qty
	CROSS JOIN (SELECT @saldo_rp := 0) saldo_rp
	CROSS JOIN (SELECT @prev_barang := '') br
	CROSS JOIN (SELECT @average := 0) average
	CROSS JOIN (SELECT @prev_average := 0) prev_average 
	CROSS JOIN (SELECT @prev_saldo_qty := 0) prev_saldo_qty WHERE kd_barang=kode_item;
	
-- 	SELECT * FROM result_table WHERE kd_barang='GASISI3KG'; 	
	
SELECT * FROM (
SELECT * FROM 
( SELECT 
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL
ELSE MAX(no_transaksi) 
END
AS no_transaksi,
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL 
ELSE GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1)
END
AS qty_masuk, 
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL 
ELSE GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1) 
END
AS rupiah_masuk, 
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL 
ELSE 0
END
AS qty_keluar,
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL 
ELSE 0
END
AS rupiah_keluar,
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL 
ELSE 'stok awal'
END
AS jenis_transaksi,
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL 
ELSE GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1)
END
AS saldo_qty, 
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL 
ELSE GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1)
END
AS saldo_rp,
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL 
ELSE GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1) / GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1)
END
AS average, 
-- 0 AS average,
CASE WHEN ISNULL(MAX(no_transaksi)) THEN NULL 
ELSE MAX(tanggal)
END
AS tanggal_tr 
FROM result_table WHERE DATE(tanggal) < awal AND kd_barang=kode_item) a WHERE saldo_rp IS NOT NULL
UNION
SELECT no_transaksi, qty_masuk, rupiah_masuk, qty_keluar, rupiah_keluar, jenis_transaksi, saldo_qty, saldo_rp, average, tanggal AS tanggal_tr FROM result_table WHERE DATE(tanggal) BETWEEN awal AND akhir AND kd_barang=kode_item) for_alias LIMIT for_limit, for_length;
END

//xyvdelimiter //
-- Procedure structure for p_mon_report_kartu_stok_test
DROP PROCEDURE IF EXISTS `p_mon_report_kartu_stok_test`;

CREATE PROCEDURE `p_mon_report_kartu_stok_test`(IN awal DATE, IN akhir DATE, IN kode_item VARCHAR(60))
BEGIN
DROP TEMPORARY TABLE IF EXISTS result_table;
CREATE TEMPORARY TABLE result_table AS


SELECT transaksi.*, @prev_barang AS prev_kd_barang,
		CASE 
			WHEN qty_masuk <> 0 THEN
					@harga := rupiah_masuk
			WHEN qty_masuk = 0 THEN
					@harga := rupiah_keluar
		END AS harga,
		CASE
		WHEN @prev_barang=kd_barang THEN
			CASE 
					WHEN jenis_transaksi='stok awal' THEN
							 @saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='pembelian' THEN 
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='penjualan' THEN
							@saldo_qty := @saldo_qty - qty_keluar
					WHEN jenis_transaksi='opname masuk' THEN
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='opname keluar' THEN
							@saldo_qty := @saldo_qty - qty_keluar
					WHEN jenis_transaksi='penjualan retur' THEN
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='pembelian retur' THEN
							@saldo_qty := @saldo_qty - qty_keluar
					WHEN jenis_transaksi='mutasi internal masuk' THEN
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='mutasi internal keluar' THEN
							@saldo_qty := @saldo_qty - qty_keluar
				END
				
		ELSE
			@saldo_qty:=qty_masuk-qty_keluar
	END as saldo_qty, 
	CASE
		WHEN @prev_barang=kd_barang THEN
			CASE 
					WHEN jenis_transaksi='stok awal' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='pembelian' THEN 
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='penjualan' THEN
							@saldo_rp := @saldo_rp + (rupiah_keluar * qty_keluar)
					WHEN jenis_transaksi='opname masuk' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='opname keluar' THEN
							@saldo_rp := @saldo_rp + (rupiah_keluar * qty_keluar)
					WHEN jenis_transaksi='penjualan retur' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='pembelian retur' THEN
							@saldo_rp := @saldo_rp + (rupiah_keluar * qty_keluar)
					WHEN jenis_transaksi='mutasi internal masuk' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='mutasi internal keluar' THEN
							@saldo_rp := @saldo_rp + (rupiah_keluar * qty_keluar)
				END
		ELSE
			@saldo_rp:= (rupiah_masuk*qty_masuk)-(rupiah_keluar*qty_keluar)
	END as saldo_rp, 
	

	CASE WHEN @prev_barang=kd_barang THEN
		CASE WHEN (@prev_saldo_qty + qty_masuk - qty_keluar) <> 0 THEN
				CASE 
					WHEN jenis_transaksi='pembelian' OR jenis_transaksi='opname masuk' OR jenis_transaksi='mutasi internal masuk' OR jenis_transaksi='penjualan retur'  THEN
-- 							@average:=IFNULL(((@prev_saldo_qty * @prev_average) + ((qty_masuk - qty_keluar) * @harga)) / (@prev_saldo_qty + qty_masuk - qty_keluar),0)
-- 						CASE 
-- 							WHEN @saldo_qty <= 0 THEN
-- 								@average:=IFNULL(((0 * @prev_average) + ((qty_masuk - qty_keluar) * @harga)) / (0 + qty_masuk - qty_keluar),0)
-- 							ELSE
								@average:=IFNULL(((@prev_saldo_qty * @prev_average) + ((qty_masuk - qty_keluar) * @harga)	) / (@prev_saldo_qty + qty_masuk - qty_keluar),0)
-- 						END
					ELSE 
							@average:=@prev_average
				END
	  ELSE
		   @average:=@prev_average
		END 
	ELSE
		@average=@harga
	END 
	AS average,
	CASE WHEN @prev_barang=kd_barang THEN
		@prev_average
	ELSE
		0
	END AS prev_average,
	CASE WHEN @prev_barang=kd_barang THEN
		@prev_average:=@average
	ELSE
		@prev_average:=@harga
	END AS current_average,
	CASE WHEN @prev_barang=kd_barang THEN
		@prev_saldo_qty 
	ELSE
		0
END AS prev_saldo_qty,
	@prev_barang:=kd_barang AS current_kd_barang,
	@prev_saldo_qty:=@saldo_qty AS current_saldo_qty
FROM v_t_mon_report_GetLaporanMutasiStokFull transaksi 
	CROSS JOIN (SELECT @saldo_qty := 0) saldo_qty
	CROSS JOIN (SELECT @saldo_rp := 0) saldo_rp
	CROSS JOIN (SELECT @prev_barang := '') br
	CROSS JOIN (SELECT @average := 0) average
	CROSS JOIN (SELECT @prev_average := 0) prev_average 
	CROSS JOIN (SELECT @prev_saldo_qty := 0) prev_saldo_qty WHERE kd_barang=kode_item;
	
SELECT * FROM result_table;
-- SELECT awal AS tanggal, MAX(no_transaksi) as no_transaksi, GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1) AS qty_masuk, GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1) rupiah_masuk, 0 AS qty_keluar, 0 AS rupiah_keluar, 'stok awal' AS jenis_transaksi, GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1) AS saldo_qty, GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1) AS saldo_rp, 0 AS average, MAX(tanggal) AS tanggal_tr FROM result_table WHERE DATE(tanggal) < awal
-- UNION ALL
-- SELECT awal AS tanggal, no_transaksi, qty_masuk, rupiah_masuk, qty_keluar, rupiah_keluar, jenis_transaksi, saldo_qty, saldo_rp, average, tanggal AS tanggal_tr FROM result_table WHERE DATE(tanggal) BETWEEN awal AND akhir;
END

//xyvdelimiter //
DROP PROCEDURE IF EXISTS `p_mon_report_labaRugi`;
CREATE PROCEDURE `p_mon_report_labaRugi`(IN awal DATE, IN akhir DATE)
BEGIN

-- SET awal = '2022-9-1';
-- SET akhir = '2022-12-31';
DROP TEMPORARY TABLE IF EXISTS result_table;
CREATE TEMPORARY TABLE result_table AS
SELECT transaksi.*, @prev_barang AS prev_kd_barang,
		CASE 
			WHEN qty_masuk <> 0 THEN
					@harga := rupiah_masuk
			WHEN qty_masuk = 0 THEN
					@harga := rupiah_keluar
		END AS harga,
		CASE
		WHEN @prev_barang=kd_barang THEN
			CASE 
					WHEN jenis_transaksi='stok awal' THEN
							 @saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='pembelian' THEN 
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='penjualan' THEN
							@saldo_qty := @saldo_qty - qty_keluar
					WHEN jenis_transaksi='opname masuk' THEN
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='opname keluar' THEN
							@saldo_qty := @saldo_qty - qty_keluar
					WHEN jenis_transaksi='penjualan retur' THEN
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='pembelian retur' THEN
							@saldo_qty := @saldo_qty - qty_keluar
					WHEN jenis_transaksi='mutasi internal masuk' THEN
							@saldo_qty := @saldo_qty + qty_masuk
					WHEN jenis_transaksi='mutasi internal keluar' THEN
							@saldo_qty := @saldo_qty - qty_keluar
				END
				
		ELSE
			@saldo_qty:=qty_masuk-qty_keluar
	END as saldo_qty, 
	
	
	CASE WHEN @prev_barang=kd_barang THEN
		CASE WHEN (@prev_saldo_qty + qty_masuk - qty_keluar) <> 0 THEN
				CASE 
					WHEN jenis_transaksi='pembelian' OR jenis_transaksi='opname masuk' OR jenis_transaksi='mutasi internal masuk' OR jenis_transaksi='penjualan retur'  THEN
-- 							@average:=IFNULL(((@prev_saldo_qty * @prev_average) + ((qty_masuk - qty_keluar) * @harga)) / (@prev_saldo_qty + qty_masuk - qty_keluar),0)
						CASE 
							WHEN @saldo_qty <= 0 THEN
								@average:=@harga
							ELSE
								@average:=IFNULL(((@prev_saldo_qty * @prev_average) + ((qty_masuk - qty_keluar) * @harga)	) / (@prev_saldo_qty + qty_masuk - qty_keluar),0)
						END
					ELSE 
							@average:=@prev_average
				END
	  ELSE
		   @average:=@prev_average
		END 
	ELSE
		@prev_average:=@harga
	END AS average,
	
	CASE
		WHEN @prev_barang=kd_barang THEN
			CASE 
					WHEN jenis_transaksi='stok awal' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='pembelian' THEN 
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='penjualan' THEN
							@saldo_rp := (@average * @saldo_qty) 
					WHEN jenis_transaksi='opname masuk' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='opname keluar' THEN
							@saldo_rp := (@average * @saldo_qty) 
					WHEN jenis_transaksi='penjualan retur' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='pembelian retur' THEN
							@saldo_rp := (@average * @saldo_qty) 
					WHEN jenis_transaksi='mutasi internal masuk' THEN
							@saldo_rp := @saldo_rp + (rupiah_masuk * qty_masuk)
					WHEN jenis_transaksi='mutasi internal keluar' THEN
							@saldo_rp := (@average * @saldo_qty) 
				END
		ELSE
			@saldo_rp:= (rupiah_masuk*qty_masuk)-(rupiah_keluar*qty_keluar)
	END as saldo_rp, 
	
	CASE WHEN @prev_barang=kd_barang THEN
		@prev_average
	ELSE
		0
	END AS prev_average,
	CASE WHEN @prev_barang=kd_barang THEN
		@prev_average:=@average
	ELSE
		@prev_average:=@harga
	END AS current_average,
	CASE WHEN @prev_barang=kd_barang THEN
		@prev_saldo_qty 
	ELSE
		0
END AS prev_saldo_qty,
	@prev_barang:=kd_barang AS current_kd_barang,
	@prev_saldo_qty:=@saldo_qty AS current_saldo_qty
FROM v_t_mon_report_GetLaporanMutasiStokFull transaksi 
	CROSS JOIN (SELECT @saldo_qty := 0) saldo_qty
	CROSS JOIN (SELECT @saldo_rp := 0) saldo_rp
	CROSS JOIN (SELECT @prev_barang := '') br
	CROSS JOIN (SELECT @average := 0) average
	CROSS JOIN (SELECT @prev_average := 0) prev_average 
	CROSS JOIN (SELECT @prev_saldo_qty := 0) prev_saldo_qty;

SELECT SUM(average*qty_keluar) INTO @hpp_jual FROM result_table WHERE jenis_transaksi='penjualan';
SELECT SUM(average*qty_masuk) INTO @hpp_retur_jual FROM result_table WHERE jenis_transaksi='penjualan retur';

SELECT SUM(saldo) INTO @temp_awal FROM (SELECT kd_barang, GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1) AS saldo FROM result_table WHERE DATE(tanggal) < awal GROUP BY kd_barang) awal;

SELECT SUM(saldo) INTO @temp_akhir FROM (SELECT kd_barang, GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1) AS saldo FROM result_table WHERE DATE(tanggal) <= akhir GROUP BY kd_barang) akhir; 


-- PEMBELIAN
SELECT
	SUM( bersih ) AS bersih
INTO @pembelian
FROM
	v_t_mon_report_GetLaporanMutasiStokFull 
WHERE
	DATE ( tanggal ) BETWEEN awal 
	AND akhir AND jenis=5 
-- 	AND `status`=1
GROUP BY
	jenis_transaksi;
	
	

-- RETUR PEMBELIAN
SELECT
	SUM( bersih ) AS bersih
INTO @retur_pembelian
FROM
	v_t_mon_report_GetLaporanMutasiStokFull 
WHERE
	DATE ( tanggal ) BETWEEN awal 
	AND akhir AND jenis=6
GROUP BY
	jenis_transaksi;



-- RETUR PEMBELIAN
-- 		SELECT SUM(bersih) AS retur_beli_rp INTO @pembelian_retur_test FROM result_table WHERE DATE(tanggal) BETWEEN awal AND  akhir AND jenis=6 GROUP BY kd_barang;



-- PENJUALAN BRUTO, POTONGAN, PAJAK
SELECT
	SUM( kotor ) AS kotor,
	SUM( potongan ) AS potongan,
	SUM( pajak ) AS pajak,
	SUM( bersih ) AS bersih
INTO @penjualan_bruto, @potongan, @pajak, @penjualan_netto
FROM
	v_t_mon_report_GetLaporanMutasiStokFull 
WHERE
	DATE ( tanggal ) BETWEEN awal 
	AND akhir 
-- 	AND `status`=1 
	AND jenis=7
GROUP BY
	jenis_transaksi;
	


-- RETUR PENJUALAN
SELECT
	SUM( bersih ) AS retur_jual
INTO @retur_penjualan
FROM
	v_t_mon_report_GetLaporanMutasiStokFull 
WHERE
	DATE ( tanggal ) BETWEEN awal 
	AND akhir AND jenis=8
GROUP BY
	jenis_transaksi;
	
	
	
-- PENJUALAN NETTO
-- SELECT
-- 	SUM( bersih )
-- INTO @penjualan_netto_test
-- FROM
-- 	v_t_mon_report_GetLaporanMutasiStokFull 
-- WHERE
-- 	DATE ( tanggal ) BETWEEN awal 
-- 	AND akhir AND `status`=1 AND jenis=7
-- GROUP BY
-- 	jenis_transaksi;



-- PENJUALAN TUNAI
SELECT SUM(total)
INTO @penjualan_tunai
FROM x_total_penjualan jual WHERE DATE(tanggal_tr) BETWEEN awal AND akhir ;



-- PENJUALAN KREDIT
	SELECT SUM(total) 
	INTO @penjualan_kredit
	FROM
	(
			SELECT
			ROUND(SUM(GetHargaBersih(GetHargaBersih(harga_jual,jl_dt.diskon1,jl_dt.diskon2,jl_dt.diskon3,jl_dt.diskon4,0,0) *qty,jl.diskon1,jl.diskon2,jl.diskon3,jl.diskon4,pajak,0))) - diskon_uang  AS total
			FROM t_penjualan jl INNER JOIN t_penjualan_detail jl_dt ON jl_dt.no_transaksi=jl.no_transaksi
			INNER JOIN m_voucher ON m_voucher.kd_voucher=jl.kd_voucher
			WHERE jl.`status`=0 AND DATE(tanggal) BETWEEN awal AND akhir
			GROUP BY jl.no_transaksi,kd_divisi,nominal
	) penjualan_kredit;



-- PENJUALAN JASA
SELECT
	IFNULL( SUM( GetTotalPenjualanJasa ( t_penjualan_jasa.no_transaksi )), 0 ) INTO @penjualan_jasa 
FROM
	t_penjualan_jasa
	INNER JOIN t_penjualan_jasa_detail ON t_penjualan_jasa.no_transaksi = t_penjualan_jasa.no_transaksi
	INNER JOIN m_jasa ON t_penjualan_jasa_detail.kd_jasa = m_jasa.kd_jasa
	INNER JOIN m_jasa_kategori ON m_jasa.kd_jasa_kategori = m_jasa_kategori.kd_jasa_kategori 
WHERE
	DATE ( tanggal_pesan ) BETWEEN awal 
	AND akhir 
	AND m_jasa_kategori.STATUS = 2;
	
	
	
-- PENYEWAAN
SELECT
	IFNULL( SUM( GetTotalPenjualanJasa ( t_penjualan_jasa.no_transaksi )), 0 ) INTO @penyewaan 
FROM
	t_penjualan_jasa
	INNER JOIN t_penjualan_jasa_detail ON t_penjualan_jasa.no_transaksi = t_penjualan_jasa.no_transaksi
	INNER JOIN m_jasa ON t_penjualan_jasa_detail.kd_jasa = m_jasa.kd_jasa
	INNER JOIN m_jasa_kategori ON m_jasa.kd_jasa_kategori = m_jasa_kategori.kd_jasa_kategori 
WHERE 
	DATE ( tanggal_pesan ) BETWEEN awal 
	AND akhir 
	AND m_jasa_kategori.`status` = 1;
	
	
	
-- HARGA POKOK PENJUALAN
-- SELECT
-- 	 ROUND(@hpp_jual,0)-ROUND(@hpp_retur_jual,0)
-- INTO @harga_pokok_penjualan;
SELECT
	@temp_awal + @pembelian - @temp_akhir - @retur_pembelian AS nominal
INTO @harga_pokok_penjualan;


-- BIAYA OPERASIONAL
SELECT
	IFNULL( SUM( nominal ), 0 ) INTO @biaya 
FROM
	t_biaya_operasional 
WHERE
	DATE ( tanggal ) BETWEEN awal 
	AND akhir;



-- PENDAPATAN
SELECT
	IFNULL( SUM( nominal ), 0 ) INTO @pendapatan 
FROM
	t_pendapatan 
WHERE
	DATE ( tanggal ) BETWEEN awal 
	AND akhir ;
	
	
	
-- TAGIHAN PIUTANG	
SELECT
	IFNULL( SUM( nominal ), 0 ) INTO @tagihan_piutang 
FROM
	t_piutang_cicilan 
WHERE
	DATE ( tanggal ) BETWEEN awal 
	AND akhir ;
	
	
	
-- OPNAME STOCK
SELECT SUM(qty_masuk*rupiah_masuk) INTO @opname_masuk FROM v_t_mon_report_GetLaporanMutasiStokFull WHERE jenis=3 AND DATE ( tanggal ) BETWEEN awal 
	AND akhir;
SELECT SUM(qty_keluar*rupiah_keluar) INTO @opname_keluar FROM v_t_mon_report_GetLaporanMutasiStokFull WHERE jenis=4 AND DATE ( tanggal ) BETWEEN awal 
	AND akhir;
SELECT (@opname_masuk-@opname_keluar) INTO @opname;



-- LABA KOTOR
SELECT
	@penjualan_netto - @harga_pokok_penjualan AS nominal
INTO @rugi_laba_penjualan;



-- RASIO KONTRIBUSI
SELECT 
	CASE 
		WHEN @harga_pokok_penjualan=0 THEN (@rugi_laba_penjualan / 1) * 100 
		ELSE (@rugi_laba_penjualan / @harga_pokok_penjualan) * 100 
	END 
INTO @rasio_kontribusi;


-- LABA BERSIH
SELECT @rugi_laba_penjualan - @biaya + @pendapatan + @penjualan_jasa + @penyewaan + 0 INTO @rugi_laba_bersih;



-- RASIO KONTRIBUSI BERSIH
SELECT 
	CASE 
		WHEN 
			@harga_pokok_penjualan=0 
		THEN (@rugi_laba_bersih / 1) * 100 
	ELSE 
			(@rugi_laba_bersih / @harga_pokok_penjualan) * 100 
	END 
INTO @rasio_kontribusi_bersih;




SELECT (@temp_awal + @temp_akhir) / 2 INTO @rata_rata_persediaan;
SELECT @harga_pokok_penjualan / @rata_rata_persediaan INTO @rasio_perputaran_persediaan;
	


-- 	SET rugi_laba_bersih = rugi_laba_penjualan - biaya + pendapatan   + penjualan_jasa + persewaan + pendapatan_surcharge;


IF ISNULL(@penjualan_bruto) THEN
		SET @penjualan_bruto=0;
END IF;
IF ISNULL(@potongan) THEN
		SET @potongan=0;
END IF;
IF ISNULL(@retur_penjualan) THEN
		SET @retur_penjualan=0;
END IF;
IF ISNULL(@penjualan_netto) THEN
		SET @penjualan_netto=0;
END IF;
IF ISNULL(@temp_awal) THEN
		SET @temp_awal=0;
END IF;
IF ISNULL(@pembelian) THEN
		SET @pembelian=0;
END IF;
IF ISNULL(@retur_pembelian) THEN
		SET @retur_pembelian=0;
END IF;
IF ISNULL(@temp_akhir) THEN
		SET @temp_akhir=0;
END IF;
IF ISNULL(@harga_pokok_penjualan) THEN
		SET @harga_pokok_penjualan=0;
END IF;
IF ISNULL(@rugi_laba_penjualan) THEN
		SET @rugi_laba_penjualan=0;
END IF;
IF ISNULL(@biaya) THEN
		SET @biaya=0;
END IF;
IF ISNULL(@pendapatan) THEN
		SET @pendapatan=0;
END IF;
IF ISNULL(@rugi_laba_bersih) THEN
		SET @rugi_laba_bersih=0;
END IF;
-- IF ISNULL(@penjualan_netto_test) THEN
-- 		SET @penjualan_netto_test=0;
-- END IF;
-- IF ISNULL(@retur_pembelian_test) THEN
-- 		SET @retur_pembelian_test=0;
-- END IF;



SELECT 1 AS id, 'Total penjualan' AS keterangan, IFNULL( @penjualan_bruto, 0) AS nominal
UNION
SELECT 2, 'Potongan' AS keterangan, IFNULL(@potongan, 0) AS nominal
UNION
SELECT 3, 'Retur Penjualan' AS keterangan, IFNULL(@retur_penjualan, 0) AS nominal
UNION
SELECT 4, 'Penjualan Bersih' AS keterangan, IFNULL(@penjualan_netto, 0) AS nominal
UNION
SELECT 5, 'Persediaan Awal' AS keterangan, IFNULL(@temp_awal, 0) AS nominal
UNION
SELECT 6,'Pembelian' AS keterangan, @pembelian AS nominal
UNION
SELECT 7,'Retur Pembelian' AS keterangan, @retur_pembelian AS nominal
UNION
SELECT 8, 'Persediaan Akhir' AS keterangan, IFNULL(@temp_akhir, 0) AS nominal
UNION
SELECT 9, 'Harga Pokok Penjualan' AS keterangan, IFNULL(@harga_pokok_penjualan, 0) AS nominal
UNION
SELECT 10, 'Rugi Laba Kotor' AS keterangan, IFNULL(@rugi_laba_penjualan, 0) AS nominal
UNION
SELECT 11, 'Biaya Operasional' AS keterangan, IFNULL(@biaya, 0) AS nominal
UNION
SELECT 12, 'Pendapatan' AS keterangan, IFNULL(@pendapatan, 0) AS nominal
UNION
SELECT 13, 'Rugi Laba Bersih' AS keterangan, IFNULL(@rugi_laba_bersih, 0) AS nominal
-- UNION
-- SELECT 14, 'Penjualan Netto test' AS keterangan, IFNULL(@penjualan_netto_test,0) AS nominal
-- UNION
-- SELECT 15, 'Retur Pembelian test' AS keterangan, IFNULL(@retur_pembelian_test,0) AS nominal
;

END

//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_mon_report_mutasi_stok;

CREATE PROCEDURE p_mon_report_mutasi_stok(IN awal DATE, IN akhir DATE, IN in_jenis INT, IN search VARCHAR(100), IN order_col VARCHAR(100), IN order_type VARCHAR(100), IN q_limit INT, IN q_length INT, IN count_stats INT)

BEGIN
-- jenis 
-- 1. sisa stok
-- 3. tingkat laku produk
-- 4. pergerakan stok
-- 5. usia stok	
-- 6. daftar harga

DECLARE sql_query TEXT;
DECLARE sql_final VARCHAR(100);
DECLARE query_limit VARCHAR(100);

IF(count_stats = 1) THEN
	SET sql_final = "COUNT(*) AS jumlah_record";
	SET query_limit = " ";
ELSE
	SET sql_final = "*";
	SET query_limit = CONCAT("LIMIT ",q_limit,", ",q_length,""); 
END IF;

IF ( in_jenis = 1 ) THEN
SET sql_query = CONCAT("SELECT ",sql_final," FROM (
		SELECT 
			sisa_stok.*
		FROM
			(SELECT v_t_result_table.kd_barang, m_barang.nama AS nama_barang, GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1) AS sisa_stok, GROUP_CONCAT(stok_min ORDER BY rn ASC LIMIT 1) AS stok_min, GROUP_CONCAT(satuan_terkecil ORDER BY rn ASC LIMIT 1) AS satuan_terkecil FROM v_t_result_table INNER JOIN m_barang ON v_t_result_table.kd_barang = m_barang.kd_barang WHERE DATE(tanggal) <= '",akhir,"' AND (m_barang.kd_barang LIKE '%",search,"%' OR m_barang.nama LIKE '%",search,"%') GROUP BY v_t_result_table.kd_barang, m_barang.nama ORDER BY TRIM(m_barang.nama) ASC) sisa_stok	
	) for_alias ",query_limit," ");
			 
ELSEIF ( in_jenis = 3 ) THEN
SET sql_query = CONCAT("SELECT ",sql_final," FROM (
			SELECT 
				(SELECT nama FROM m_barang WHERE kd_barang=a_sisa_stok.kd_barang) AS nama_barang,
				a_sisa_stok.*, IFNULL(total_sales,0) AS total_sales, IFNULL(qty_sales,0) AS qty_sales
			FROM
				(SELECT kd_barang, GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1) AS sisa_stok, GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1) AS nominal_persediaan, GROUP_CONCAT(satuan_terkecil ORDER BY rn DESC LIMIT 1) AS satuan_terkecil FROM v_t_result_table WHERE DATE(tanggal) <= '",akhir,"' GROUP BY kd_barang ) a_sisa_stok
						LEFT JOIN 
						( 	
							SELECT kd_barang, SUM(bersih) AS total_sales, SUM(qty_keluar) AS qty_sales FROM v_t_result_table WHERE jenis=7 AND DATE(tanggal) <= '",akhir,"'
							GROUP BY kd_barang 
						) bersih ON a_sisa_stok.kd_barang = bersih.kd_barang
				) for_alias WHERE kd_barang LIKE '%",search,"%' OR nama_barang LIKE '%",search,"%'
	 ORDER BY sisa_stok DESC ",query_limit," ");
				 
ELSEIF ( in_jenis = 4 ) THEN
	 SET sql_query = CONCAT("SELECT ",sql_final," FROM (
			SELECT 
				(SELECT nama FROM m_barang WHERE kd_barang=sisa_stok.kd_barang) AS nama_barang,
				sisa_stok.*, saldo_awal_rp, saldo_awal_qty, saldo_akhir_rp, saldo_akhir_qty, IFNULL(qty_masuk,0) AS debet_qty, IFNULL(rupiah_masuk,0) AS debet_rp, IFNULL(qty_keluar,0) AS kredit_qty, IFNULL(rupiah_keluar,0) AS kredit_rp
			FROM
				(SELECT kd_barang, satuan_terkecil, GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1) AS sisa_stok, GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1) AS nominal_persediaan FROM v_t_result_table WHERE DATE(tanggal) <= '",akhir,"' GROUP BY kd_barang ) sisa_stok
						LEFT JOIN 
						(
							SELECT kd_barang, GROUP_CONCAT(saldo_rp ORDER BY rn DESC LIMIT 1) AS saldo_awal_rp, GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1) AS saldo_awal_qty FROM v_t_result_table WHERE DATE(tanggal) < '",awal,"' GROUP BY kd_barang, satuan_terkecil
						) saldo_awal ON sisa_stok.kd_barang = saldo_awal.kd_barang
						LEFT JOIN 
						(
							SELECT kd_barang, GROUP_CONCAT(saldo_rp ORDER BY rn ASC LIMIT 1) AS saldo_akhir_rp, GROUP_CONCAT(saldo_qty ORDER BY rn ASC LIMIT 1) AS saldo_akhir_qty FROM v_t_result_table WHERE DATE(tanggal) <= '",akhir,"' GROUP BY kd_barang
						) saldo_akhir ON sisa_stok.kd_barang = saldo_akhir.kd_barang
						LEFT JOIN
						(
							SELECT kd_barang, SUM(qty_masuk) AS qty_masuk, SUM(qty_keluar) AS qty_keluar, SUM(qty_masuk*rupiah_masuk) AS rupiah_masuk, SUM(qty_keluar*rupiah_keluar) AS rupiah_keluar FROM v_t_result_table WHERE DATE(tanggal) BETWEEN '",awal,"' AND '",akhir,"' GROUP BY kd_barang
						) debet_kredit ON saldo_awal.kd_barang = debet_kredit.kd_barang
				) for_alias WHERE kd_barang LIKE '%",search,"%' OR nama_barang LIKE '%",search,"%' ORDER BY TRIM(nama_barang) ASC ",query_limit," ");

ELSEIF ( in_jenis = 5 ) THEN
SET sql_query = CONCAT("SELECT ",sql_final," FROM (
			SELECT 
				(SELECT nama FROM m_barang WHERE kd_barang=sisa_stok.kd_barang) AS nama_barang,
				sisa_stok.*, 
				IFNULL(terakhir_jual.tanggal,'-') AS tgl_jual_terakhir, 
				IFNULL(terakhir_beli.tanggal,'-') AS tgl_terakhir_beli 
			FROM
				(SELECT kd_barang, GROUP_CONCAT(saldo_qty ORDER BY rn DESC LIMIT 1) AS sisa_stok, GROUP_CONCAT(satuan_terkecil ORDER BY rn DESC LIMIT 1) AS satuan_terkecil FROM v_t_result_table WHERE DATE(tanggal) <= '",akhir,"' GROUP BY kd_barang ) sisa_stok
						LEFT JOIN 
						(
							SELECT kd_barang, GROUP_CONCAT(tanggal ORDER BY rn DESC LIMIT 1) AS tanggal FROM v_t_result_table WHERE 
							DATE(tanggal) <='",akhir,"' AND jenis=7 GROUP BY kd_barang
						) terakhir_jual ON sisa_stok.kd_barang = terakhir_jual.kd_barang
						LEFT JOIN 
						(
							SELECT kd_barang, tanggal, GetHargaBersih(GetHargaBersih(harga, ddiskon1, ddiskon2, ddiskon3, ddiskon4, 0, 0), mdiskon1, mdiskon2, mdiskon3, mdiskon4, mpajak, mppnbm) / jumlah AS last_purchase FROM
							(
							SELECT
								mbs.kd_barang,
								GROUP_CONCAT( mbs.jumlah ORDER BY DATE ( tanggal ) DESC, harga_beli DESC LIMIT 1 ) AS jumlah,
								GROUP_CONCAT( t_pembelian.tanggal ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS tanggal,
								GROUP_CONCAT( harga_beli ORDER BY DATE ( tanggal ) DESC, harga_beli DESC LIMIT 1 ) AS harga,
								GROUP_CONCAT( t_pembelian_detail.kd_satuan ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS kd_satuan,
								GROUP_CONCAT( t_pembelian.diskon1 ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS mdiskon1,
								GROUP_CONCAT( t_pembelian.diskon2 ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS mdiskon2,
								GROUP_CONCAT( t_pembelian.diskon3 ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS mdiskon3,	
								GROUP_CONCAT( t_pembelian.diskon4 ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS mdiskon4,
								GROUP_CONCAT( t_pembelian.pajak ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS mpajak,
								GROUP_CONCAT( t_pembelian.ppnbm ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS mppnbm,
								GROUP_CONCAT( t_pembelian_detail.diskon1 ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS ddiskon1,
								GROUP_CONCAT( t_pembelian_detail.diskon2 ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS ddiskon2,
								GROUP_CONCAT( t_pembelian_detail.diskon3 ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS ddiskon3,	
								GROUP_CONCAT( t_pembelian_detail.diskon4 ORDER BY DATE ( tanggal ) DESC LIMIT 1 ) AS ddiskon4	
							FROM
								t_pembelian
								INNER JOIN t_pembelian_detail ON t_pembelian.no_transaksi = t_pembelian_detail.no_transaksi 
								INNER JOIN m_barang_satuan mbs ON t_pembelian_detail.kd_barang=mbs.kd_barang AND t_pembelian_detail.kd_satuan=mbs.kd_satuan
							WHERE
								DATE ( tanggal ) <= '",akhir,"'
							GROUP BY
								mbs.kd_barang
							) a
						) terakhir_beli ON sisa_stok.kd_barang = terakhir_beli.kd_barang) for_alias WHERE kd_barang LIKE '%",search,"%' OR nama_barang LIKE '%",search,"%' ORDER BY tgl_jual_terakhir DESC
			",query_limit," ");

ELSEIF ( in_jenis = 6 ) THEN
SET sql_query = CONCAT("SELECT ",sql_final," FROM (
		SELECT
			( SELECT nama FROM m_barang WHERE kd_barang = a.kd_barang ) AS nama_barang,
			a.* 
		FROM
			( SELECT kd_barang, GROUP_CONCAT( harga ORDER BY rn DESC LIMIT 1 ) AS harga FROM v_t_result_table GROUP BY kd_barang ) a ) for_alias WHERE kd_barang LIKE '%",search,"%' OR nama_barang LIKE '%",search,"%' ORDER BY TRIM(nama_barang) ASC ",query_limit," ");
END IF;

-- select sql_query;
PREPARE prepared_stmt FROM sql_query;
EXECUTE prepared_stmt;
	

END

//xyvdelimiter //
DROP PROCEDURE IF EXISTS `p_proc_prepare_order_kontrak`;
CREATE PROCEDURE `p_proc_prepare_order_kontrak`(IN INcompany_id VARCHAR(20), IN INkd_supplier VARCHAR(20))
BEGIN

DECLARE query_sql VARCHAR(16000);
DECLARE select_with_contract VARCHAR(1000);
DECLARE query_with_contract VARCHAR(6000);

DECLARE contract_status INT;

SELECT COUNT(*) INTO contract_status FROM misterkong_mp.h_kontrak_request 
WHERE kd_supplier=INkd_supplier AND NOW() BETWEEN tanggal_kontrak AND tanggal_jatuh_tempo AND status=1;


IF contract_status > 0 THEN
SET select_with_contract=",satuan_sup,kd_barang_supplier,kd_satuan_min,satuan_supplier_min";
SET query_with_contract=CONCAT("
	INNER JOIN 
	(
		SELECT mb_sup.kd_barang_supplier AS kd_brg_supplier,kd_satuan_min,satuan_supplier_min FROM
		(
			SELECT kd_barang_supplier FROM m_barang_satuan_supplier WHERE kd_supplier='",INkd_supplier,"'
			GROUP BY kd_barang
		) mb_sup
		INNER JOIN 
		(
			SELECT kd_barang,kd_satuan AS kd_satuan_min,
			(SELECT nama FROM misterkong_",INcompany_id,".m_satuan WHERE kd_satuan=mbs.kd_satuan) AS satuan_supplier_min
			FROM misterkong_",INcompany_id,".m_barang_satuan mbs WHERE jumlah=1
		) mbs_sup
		ON mb_sup.kd_barang_supplier=mbs_sup.kd_barang
	) barang_supplier_min
	ON data_sp.kd_barang=barang_supplier_min.kd_brg_supplier
	INNER JOIN
	(
		SELECT mb_sup.kd_barang_supplier,
		GROUP_CONCAT(CONCAT(satuan_supplier,' ( ',jumlah,' )') ORDER BY jumlah) AS satuan_sup 
		FROM
		(
			SELECT kd_barang_supplier FROM m_barang_satuan_supplier WHERE kd_supplier='",INkd_supplier,"'
			GROUP BY kd_barang
		) mb_sup
		INNER JOIN 
		(
			SELECT kd_barang,kd_satuan,
			(SELECT nama FROM misterkong_",INcompany_id,".m_satuan WHERE kd_satuan=mbs.kd_satuan) AS satuan_supplier
			,jumlah
			FROM misterkong_",INcompany_id,".m_barang_satuan mbs
		) mbs_sup
		ON mb_sup.kd_barang_supplier=mbs_sup.kd_barang
		GROUP BY mb_sup.kd_barang_supplier
	) barang_supplier_cross
	ON data_sp.kd_barang=barang_supplier_cross.kd_barang_supplier");
ELSE
	SET select_with_contract="";
	SET query_with_contract="";
END IF;

DROP TEMPORARY TABLE IF EXISTS stok_item;
	CREATE TEMPORARY TABLE stok_item(kd_barang VARCHAR(50),stok double);
INSERT INTO stok_item(kd_barang,stok)
SELECT kd_barang,SUM(stok) AS stok_akhir FROM mon_g_stok_barang_per_divisi_vd GROUP BY kd_barang;


SET query_sql=CONCAT("SELECT kd_barang, nama AS supplier,kd_supplier,lead_time,visit_time,kunjungan,kunjungan2,st_retur,
pembayaran,jenis,stok,avg,need,rekomendasi,
g_kd_satuan,g_satuan,g_jumlah",select_with_contract,"

FROM
(
	SELECT data_sp.*,stok,avg,
	ROUND(CASE 
	WHEN ISNULL(visit_time) THEN (avg*(7+IFNULL(lead_time,2))) + (avg*buffer)
	ELSE (avg*(visit_time*IFNULL(lead_time,2))) + (avg*buffer)
	END,0) AS need,
	CASE WHEN ((CASE 
	WHEN ISNULL(visit_time) THEN (avg*(7+IFNULL(lead_time,2))) + (avg*buffer)
	ELSE (avg*(visit_time*IFNULL(lead_time,2))) + (avg*buffer)
	END) - stok) <0 THEN 0
	ELSE
	ROUND((CASE 
	WHEN ISNULL(visit_time) THEN (avg*(7*IFNULL(lead_time,2))) + (avg*buffer)
	ELSE (avg*(visit_time*IFNULL(lead_time,2))) + (avg*buffer)
	END) - stok,0)
	END AS rekomendasi,
	g_kd_satuan,g_satuan,g_jumlah",select_with_contract,"
	FROM
	(
		SELECT item_sup.kd_barang,nama,sp_jadwal.*
		FROM
		(
			SELECT kd_supplier,nama FROM m_supplier WHERE kd_supplier='",INkd_supplier,"'
		) supplier
		INNER JOIN 
		(
			SELECT kd_supplier,kd_barang FROM m_barang_supplier WHERE `status` <> 0 
		) item_sup
		ON supplier.kd_supplier=item_sup.kd_supplier
		INNER JOIN
		(
			SELECT kd_supplier,lead_time,visit_time,hari AS kunjungan,
			CASE
				WHEN
					m_supplier_jadwal.visit_time<7 THEN m_supplier_jadwal.hari+m_supplier_jadwal.visit_time
				ELSE m_supplier_jadwal.hari
			END AS kunjungan2,
			st_retur,pembayaran,jenis FROM m_supplier_jadwal
		) sp_jadwal
		ON supplier.kd_supplier=sp_jadwal.kd_supplier
	) data_sp
	INNER JOIN
	(
		SELECT penjualan.kd_barang, stok,buffer,
		CASE 
			WHEN stok =0 THEN
			(
				select SUM(qty*jumlah)/(periode*sampling) FROM t_penjualan jual INNER JOIN t_penjualan_detail dtl
				ON jual.no_transaksi=dtl.no_transaksi
				INNER JOIN m_barang_satuan mbs ON mbs.kd_barang=dtl.kd_barang AND dtl.kd_satuan=mbs.kd_satuan
				WHERE tanggal BETWEEN DATE_ADD(last_sales,INTERVAL -(periode*sampling) DAY) AND last_sales AND dtl.kd_barang=penjualan.kd_barang
			)
			ELSE
			(
				select IFNULL(SUM(qty*jumlah)/(periode*sampling),0) FROM t_penjualan jual INNER JOIN t_penjualan_detail dtl
				ON jual.no_transaksi=dtl.no_transaksi
				INNER JOIN m_barang_satuan mbs ON mbs.kd_barang=dtl.kd_barang AND dtl.kd_satuan=mbs.kd_satuan
				WHERE tanggal BETWEEN DATE_ADD(NOW(),INTERVAL -(periode*sampling) DAY) AND NOW() AND dtl.kd_barang=penjualan.kd_barang
			)
		END AS avg
		FROM stok_item
		INNER JOIN 
		(
			SELECT kd_barang,MAX(tanggal) AS last_sales FROM t_penjualan INNER JOIN t_penjualan_detail
			ON t_penjualan.no_transaksi=t_penjualan_detail.no_transaksi
			GROUP BY kd_barang
		) penjualan
		ON penjualan.kd_barang=stok_item.kd_barang
		CROSS JOIN ans_item
	) penjualan_stok
	ON data_sp.kd_barang=penjualan_stok.kd_barang
	INNER JOIN
	(
		SELECT kd_barang, 
		GROUP_CONCAT(m_satuan.kd_satuan ORDER BY jumlah) AS g_kd_satuan,
		GROUP_CONCAT(nama ORDER BY jumlah) AS g_satuan,
		GROUP_CONCAT(jumlah ORDER BY jumlah) AS g_jumlah
		FROM m_barang_satuan
		INNER JOIN m_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan
		GROUP BY kd_barang
	) mbs
	ON data_sp.kd_barang=mbs.kd_barang ",query_with_contract,"

	
) data_order");

-- SELECT query_sql;
-- '2020-10-03 11:44:03'
PREPARE prepared_stmt FROM query_sql;

EXECUTE prepared_stmt;
END;

//xyvdelimiter //
-- Procedure structure for p_report_penjuanNewBorn
DROP PROCEDURE IF EXISTS `p_report_penjuanNewBorn`;

CREATE PROCEDURE `p_report_penjuanNewBorn`(IN awal DATE, IN akhir DATE, IN jenis INT, IN q_limit INT, IN q_length INT)
BEGIN

-- jenis 1 = penjualan pertanggal v
-- jenis 2 = penjualan perstatus transaksi v
-- jenis 3 = penjualan belum realisasi
-- jenis 4 = penjualan belum lunas v

IF(jenis = 1) THEN
	-- penjualan pertanggal
	 SELECT DATE_FORMAT(jumlah.tanggal,'%d-%m-%Y') AS tanggal, IFNULL(jumlah.jumlah, 0) AS jumlah
	 , IFNULL(tunai.jumlah_tunai, 0) AS jumlah_tunai, IFNULL(kredit.jumlah_kredit, 0) AS jumlah_kredit 
	 FROM 
	 (
	 SELECT DATE(tanggal) AS tanggal, COUNT(t_penjualan.no_transaksi) AS jumlah FROM t_penjualan WHERE DATE(tanggal) BETWEEN awal AND akhir GROUP BY DATE(tanggal)
	 ) jumlah
	 LEFT JOIN
	 (
	 SELECT DATE(tanggal) AS tanggal, COUNT(t_penjualan.no_transaksi) AS jumlah_tunai FROM t_penjualan WHERE DATE(tanggal) BETWEEN awal AND akhir AND `status`=1 GROUP BY DATE(tanggal) 
	 ) tunai ON DATE(jumlah.tanggal) = DATE(tunai.tanggal)
	 LEFT JOIN
	 (
	 SELECT DATE(tanggal) AS tanggal, COUNT(t_penjualan.no_transaksi) AS jumlah_kredit FROM t_penjualan WHERE DATE(tanggal) BETWEEN awal AND akhir AND `status`=0 GROUP BY DATE(tanggal) 
	 ) kredit ON DATE(jumlah.tanggal) = DATE(kredit.tanggal) LIMIT q_limit, q_length; 
END IF;


IF(jenis = 2) THEN
	-- penjualan per status transaksi
	SELECT COUNT(*) AS jumlah_tunai, a.jumlah_kredit, b.online_kredit, c.online_tunai, d.offline_kredit, e.offline_tunai FROM t_penjualan 
	CROSS JOIN ( SELECT 'kredit' AS keterangan, COUNT(*) AS jumlah_kredit FROM t_penjualan WHERE `status`=0 AND DATE(tanggal) BETWEEN awal AND akhir) a
	CROSS JOIN ( SELECT 'online_kredit' AS keterangan, COUNT(*) AS online_kredit FROM t_penjualan  WHERE kd_customer=-1 AND `status`=0 AND DATE(tanggal) BETWEEN awal AND akhir) b
	CROSS JOIN ( SELECT 'online_tunai' AS keterangan, COUNT(*) AS online_tunai FROM t_penjualan  WHERE kd_customer=-1 AND `status`=1 AND DATE(tanggal) BETWEEN awal AND akhir) c
	CROSS JOIN ( SELECT 'offline_kredit' AS keterangan, COUNT(*) AS offline_kredit FROM t_penjualan  WHERE kd_customer<>-1 AND `status`=0 AND DATE(tanggal) BETWEEN awal AND akhir) d
	CROSS JOIN ( SELECT 'offline_tunai' AS keterangan, COUNT(*) AS offline_tunai FROM t_penjualan  WHERE kd_customer<>-1 AND `status`=1 AND DATE(tanggal) BETWEEN awal AND akhir) e
	WHERE `status`=1 AND DATE(tanggal) BETWEEN awal AND akhir;
END IF;


IF(jenis = 3) THEN
	-- penjualan belum lunas
	SELECT * FROM (
	SELECT MAX(no_cicilan) AS no_cicilan, SUM(nominal) AS nominal, MAX(t_piutang_cicilan.tanggal) AS tanggal_cicil, penjualan.* FROM t_piutang_cicilan
	INNER JOIN 
	(
		SELECT
			t_penjualan.no_transaksi, t_penjualan.kd_customer, m_customer.nama AS customer, tanggal, t_penjualan.`status`, t_penjualan_detail.jumlah
		FROM
			t_penjualan
			INNER JOIN (SELECT no_transaksi, SUM(harga_jual*qty) AS jumlah FROM t_penjualan_detail GROUP BY no_transaksi) t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
			INNER JOIN m_customer ON t_penjualan.kd_customer = m_customer.kd_customer	
		WHERE t_penjualan.`status`=0
	) penjualan ON t_piutang_cicilan.no_transaksi = penjualan.no_transaksi
	WHERE 
	DATE(t_piutang_cicilan.tanggal) BETWEEN awal AND akhir
	 GROUP BY t_piutang_cicilan.no_transaksi ORDER BY t_piutang_cicilan.no_transaksi
	 ) a WHERE jumlah - nominal <> 0 LIMIT q_limit, q_length;
END IF;


IF(jenis = 4) THEN
	-- penjualan belum realisasi
	SELECT 
		t_penjualan_order.no_order, 
		m_customer.kd_customer, 
		m_customer.nama AS customer,
		tanggal, 
		t_penjualan_order.`status`, 
		diskon_uang, 
		t_penjualan_order.keterangan, 
		no_transaksi, 
		jumlah, 
		Jumlah-diskon_uang AS total 
	FROM t_penjualan_order 
		INNER JOIN 
		(
		SELECT no_order, SUM(qty*harga_jual) AS jumlah FROM t_penjualan_order_detail GROUP BY no_order
		) t_penjualan_order_detail ON t_penjualan_order.no_order = t_penjualan_order_detail.no_order 
		INNER JOIN m_customer ON t_penjualan_order.kd_customer = m_customer.kd_customer
	WHERE no_transaksi NOT IN (SELECT no_transaksi FROM t_penjualan) AND DATE(tanggal) BETWEEN awal AND akhir LIMIT q_limit, q_length;
END IF;

END

//xyvdelimiter //
DROP PROCEDURE IF EXISTS `p_update_histori_stok`;

CREATE PROCEDURE `p_update_histori_stok`()
BEGIN
	DROP TABLE IF EXISTS v_t_histori_stok_temp;
	CREATE TABLE v_t_histori_stok_temp AS
	SELECT
		no_transaksi,
		kd_barang,
		kd_satuan,
		GROUP_CONCAT( tanggal ORDER BY last_update DESC LIMIT 1 ) AS tanggal,
		GROUP_CONCAT( qty_masuk ORDER BY last_update DESC LIMIT 1 ) AS qty_masuk,
		GROUP_CONCAT( rupiah_masuk ORDER BY last_update DESC LIMIT 1 ) rupiah_masuk,
		GROUP_CONCAT( qty_keluar ORDER BY last_update DESC LIMIT 1 ) AS qty_keluar,
		GROUP_CONCAT( rupiah_keluar ORDER BY last_update DESC LIMIT 1 ) AS rupiah_keluar,
		jenis,
		jenis_transaksi,
		GROUP_CONCAT( keterangan ORDER BY last_update DESC LIMIT 1 ) AS keterangan,
		GROUP_CONCAT( satuan_terkecil ORDER BY last_update DESC LIMIT 1 ) AS satuan_terkecil,
		GROUP_CONCAT( kotor ORDER BY last_update DESC LIMIT 1 ) AS kotor,
		GROUP_CONCAT( potongan ORDER BY last_update DESC LIMIT 1 ) AS potongan,
		GROUP_CONCAT( pajak ORDER BY last_update DESC LIMIT 1 ) AS pajak,
		GROUP_CONCAT( bersih ORDER BY last_update DESC LIMIT 1 ) AS bersih,
		GROUP_CONCAT( `status` ORDER BY last_update DESC LIMIT 1 ) AS `status`,
		GROUP_CONCAT( stok_min ORDER BY last_update DESC LIMIT 1 ) AS stok_min,
		GROUP_CONCAT( kd_kas ORDER BY last_update DESC LIMIT 1 ) AS kd_kas,
		row_number() over ( PARTITION BY result.kd_barang ORDER BY result.kd_barang, result.tanggal ) AS rn,
		GROUP_CONCAT( last_update ORDER BY last_update DESC LIMIT 1 ) AS last_update
	FROM
		( SELECT * FROM v_t_histori_update_stok UNION SELECT * FROM v_t_mon_report_GetLaporanMutasiStokFull ) result
	GROUP BY
		no_transaksi,
		kd_barang,
		kd_satuan,
		jenis_transaksi,
		jenis;

		TRUNCATE v_t_mon_report_GetLaporanMutasiStokFull;
		INSERT INTO v_t_mon_report_GetLaporanMutasiStokFull 
		SELECT * FROM v_t_histori_stok_temp;
END
//