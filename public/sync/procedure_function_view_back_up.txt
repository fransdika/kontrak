delimiter //
DROP FUNCTION IF EXISTS f_GetLastPurchase;
CREATE FUNCTION f_GetLastPurchase(kode VARCHAR(30))
RETURNS datetime
BEGIN
SET @tanggal='0000-00-00 00:00:00';

SELECT max_tanggal INTO @tanggal FROM(
SELECT kd_barang,MAX(tanggal) as max_tanggal FROM t_pembelian INNER JOIN t_pembelian_detail ON t_pembelian.no_transaksi= t_pembelian_detail.no_transaksi
WHERE kd_barang=kode
GROUP BY kd_barang) last_purchase;

RETURN @tanggal;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS f_GetLastSales;
CREATE FUNCTION f_GetLastSales(kode VARCHAR(30),divisi CHAR(6))
RETURNS datetime
BEGIN
SET @tanggal='0000-00-00 00:00:00';

SELECT max_tanggal INTO @tanggal FROM(
SELECT kd_barang,kd_divisi,MAX(tanggal) as max_tanggal FROM t_penjualan INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi= t_penjualan_detail.no_transaksi
WHERE kd_barang=kode AND kd_divisi=divisi
GROUP BY kd_barang,kd_divisi) last_sales;

RETURN @tanggal;
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS f_harga_beli_akhir;
CREATE FUNCTION f_harga_beli_akhir(`kode_br` varchar(30),`kode_sa` VARCHAR(30))
RETURNS DECIMAL(10,0)
BEGIN
DECLARE hrg DECIMAL;
SELECT 
`GetHargaBersih` (
`GetHargaBersih` (
`dtl`.`harga_beli`,
`dtl`.`diskon1`,
`dtl`.`diskon2`,
`dtl`.`diskon3`,
`dtl`.`diskon4`,
0,
0
),
`bl`.`diskon1`,
`bl`.`diskon2`,
`bl`.`diskon3`,
`bl`.`diskon4`,
`bl`.`pajak`,
`bl`.`ppnbm`
)/mbs.jumlah AS harga_beli_bersih
INTO hrg
FROM t_pembelian_detail dtl
INNER JOIN t_pembelian bl
ON dtl.no_transaksi=bl.no_transaksi
INNER JOIN m_barang_satuan mbs
ON(mbs.kd_barang=dtl.kd_barang AND mbs.kd_satuan=dtl.kd_satuan)
WHERE dtl.kd_barang=kode_br AND dtl.kd_satuan=kode_sa
ORDER BY tanggal DESC LIMIT 1;

RETURN hrg;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS f_harga_jual_akhir;
CREATE FUNCTION f_harga_jual_akhir(`kode_br` varchar(30),`kode_sa` VARCHAR(30))
RETURNS DECIMAL(10,0)
BEGIN
DECLARE hrg DECIMAL;
SELECT 
`GetHargaBersih` (
`GetHargaBersih` (
`dtl`.`harga_jual`,
`dtl`.`diskon1`,
`dtl`.`diskon2`,
`dtl`.`diskon3`,
`dtl`.`diskon4`,
0,
0
),
`jual`.`diskon1`,
`jual`.`diskon2`,
`jual`.`diskon3`,
`jual`.`diskon4`,
0,
0
)
INTO hrg
FROM t_penjualan_detail dtl
INNER JOIN t_penjualan jual
ON dtl.no_transaksi=jual.no_transaksi
INNER JOIN m_barang_satuan mbs
ON mbs.kd_barang=dtl.kd_barang AND mbs.kd_satuan=mbs.kd_satuan
WHERE dtl.kd_barang=kode_br AND dtl.kd_satuan=kode_sa
ORDER BY tanggal DESC LIMIT 1;

RETURN hrg;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS getCountMutasi;
CREATE FUNCTION getCountMutasi(div_sumber CHAR(6),div_tujuan CHAR(6))
RETURNS int(11)
BEGIN

DECLARE cnt INT;

SELECT
count(*) AS cnt_predict
INTO cnt
FROM
v_spk_mutasi_barang_baru a
INNER JOIN (
SELECT
kd_barang,
stok 
FROM
g_stok_akhir
WHERE
kd_divisi = div_sumber
) c ON a.kd_barang = c.kd_barang
WHERE
a.kd_divisi = div_tujuan
AND c.stok <> 0
AND ROUND(a.avg_harian * 7) <> 0
AND ROUND(a.avg_harian * 7) <= c.stok
AND k_status = 1;
RETURN cnt;


END

//xyvdelimiter //
DROP FUNCTION IF EXISTS getDivisionId;
CREATE FUNCTION getDivisionId()
RETURNS char(1)
BEGIN
SET @divisi_id='ONLINE';
RETURN @divisi_id;
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS getFormatJam;
CREATE FUNCTION getFormatJam(tanggal DATETIME)
RETURNS VARCHAR(10)
BEGIN 
declare jam, menit, detik varchar(2);

set jam = CAST(EXTRACT(hour FROM tanggal) as CHAR(2));
set menit = CAST(EXTRACT(minute FROM tanggal) AS CHAR(2));
set detik = CAST(EXTRACT(second FROM tanggal) AS CHAR(2));
if (len(jam)=1) then  set jam = '0' + jam	; end IF;
if len(menit)=1 THEN set menit = '0' + menit	; end IF;
if len(detik)=1 then set detik = '0' + detik; end IF;
return (jam + ':' + menit + ':' + detik);
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS getFormatTanggal;
CREATE FUNCTION getFormatTanggal(tanggal DATETIME)
RETURNS DATE
BEGIN
DECLARE tgl VARCHAR(20);
set tgl = CONCAT(
CAST(EXTRACT(YEAR from tanggal) AS CHAR(4)) , '/' , 
CAST(EXTRACT(MONTH from tanggal) AS CHAR(2)) , '/' , 
CAST(EXTRACT(DAY FROM tanggal) AS CHAR(2))
);
RETURN tgl;
END

//xyvdelimiter //
DROP FUNCTION IF EXISTS GetHargaBersih;
CREATE FUNCTION GetHargaBersih(harga DOUBLE, diskon1 FLOAT, diskon2 FLOAT, diskon3 FLOAT,  diskon4 FLOAT, pajak1 FLOAT, pajak2 FLOAT)
RETURNS double
BEGIN 
DECLARE 
harga_bersih DOUBLE; 
DECLARE ppnbm FLOAT;

SET PPNBM=0;
SET harga_bersih = harga;
IF harga_bersih > 0 then
BEGIN
IF diskon1 >-1 AND diskon1 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon1);
ELSEIF diskon1 >= 1 OR diskon1 <= -1 THEN
SET harga_bersih = harga_bersih - diskon1;
end if;

IF diskon2 > -1 AND diskon2 < 1 then
SET harga_bersih = harga_bersih - (harga_bersih * diskon2);
ELSEIF diskon2 >=1 OR diskon2 <= -1 then
SET harga_bersih = harga_bersih - diskon2;
end if;

IF diskon3 > -1 AND diskon3 < 1 then
SET harga_bersih = harga_bersih - (harga_bersih * diskon3);
ELSEIF diskon3 >=1 OR diskon3 <= -1 then
SET harga_bersih = harga_bersih - diskon3;
end if;

IF diskon4 > -1 AND diskon4 < 1 then
SET harga_bersih = harga_bersih - (harga_bersih * diskon4);
ELSEIF diskon4 >=1 OR diskon4 <= -1 THEN
SET harga_bersih = harga_bersih - diskon4;
end if;

SET harga_bersih = harga_bersih + (harga_bersih * pajak1);

SET harga_bersih = harga_bersih + (harga_bersih * ppnbm);
END;
end if;

RETURN harga_bersih;
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS GetHargaBersihJasa;
CREATE FUNCTION GetHargaBersihJasa(harga DECIMAL, diskon1 FLOAT, diskon2 FLOAT, diskon3 FLOAT,  diskon4 FLOAT, pajak1 FLOAT, service FLOAT, other FLOAT)
RETURNS decimal(10,0)
BEGIN 
DECLARE 
harga_bersih DECIMAL;

SET harga_bersih = harga;
IF harga_bersih > 0 THEN
BEGIN

IF diskon1 >-1 AND diskon1 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon1);
ELSEIF diskon1 >= 1 OR diskon1 <= -1 THEN
SET harga_bersih = harga_bersih - diskon1;
END IF;

IF diskon2 > -1 AND diskon2 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon2);
ELSEIF diskon2 >=1 OR diskon2 <= -1 THEN
SET harga_bersih = harga_bersih - diskon2;
END IF;


IF diskon3 > -1 AND diskon3 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon3);
ELSEIF diskon3 >=1 OR diskon3 <= -1 THEN
SET harga_bersih = harga_bersih - diskon3;
END IF;

IF diskon4 > -1 AND diskon4 < 1 THEN
SET harga_bersih = harga_bersih - (harga_bersih * diskon4);
ELSEIF diskon4 >=1 OR diskon4 <= -1 THEN
SET harga_bersih = harga_bersih - diskon4;
END IF;

SET harga_bersih = harga_bersih + (harga_bersih * pajak1);


SET harga_bersih = harga_bersih + (harga_bersih * service);

SET harga_bersih = harga_bersih + (harga_bersih * other);
END;
END IF;
RETURN harga_bersih;	
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS GetKuantitasSatuanTerkecil;
CREATE FUNCTION GetKuantitasSatuanTerkecil(inKd_barang1 VARCHAR(30), inKd_satuan1 char(6))
RETURNS float
BEGIN
DECLARE
jml FLOAT;
SELECT jumlah into jml FROM m_barang_satuan WHERE kd_barang = inKd_barang1 AND kd_satuan = inKd_satuan1;
RETURN jml;
END



//xyvdelimiter //
DROP FUNCTION IF EXISTS GetPenyusutanAset;
CREATE FUNCTION GetPenyusutanAset(kd_aset VARCHAR(6), tanggal_awal DATETIME, tanggal_akhir DATETIME)
RETURNS double
BEGIN
DECLARE tanggal_beli, tanggal_jual DATETIME;
DECLARE harga_beli, nilai_residu double;
DECLARE penyusutan FLOAT;

DECLARE total_penyusutan double;
DECLARE harga double;
DECLARE penyusutan_per_hari FLOAT;
DECLARE selisih_dgn_tanggal_awal INT;
DECLARE selisih_dgn_tanggal_akhir INT;

SELECT GetFormatTanggal(tanggal_beli), GetFormatTanggal(tanggal_jual), harga_beli, 
nilai_residu, penyusutan into tanggal_beli, tanggal_jual, harga_beli, nilai_residu, penyusutan
FROM m_aset
WHERE kd_aset = kd_aset;

SET total_penyusutan = 0;
SET harga = harga_beli - nilai_residu;
SET penyusutan_per_hari = (penyusutan / (365 * 100));

IF tanggal_akhir >= tanggal_beli then
BEGIN
IF tanggal_jual >= tanggal_beli  then
BEGIN
IF tanggal_akhir < tanggal_jual	then
SET tanggal_akhir = DATE_ADD(tanggal_jual, INTERVAL -1 DAY);
SET selisih_dgn_tanggal_awal =
(timestampdiff(DAY, tanggal_beli, 
(CASE WHEN GetFormatTanggal(tanggal_awal) < GetFormatTanggal(tanggal_beli) THEN tanggal_beli ELSE tanggal_awal END)));
SET selisih_dgn_tanggal_akhir = 
(timestampdiff(DAY, tanggal_beli, tanggal_akhir));
end if;

IF ((harga * penyusutan_per_hari) * (selisih_dgn_tanggal_awal + 1)) > harga then
SET total_penyusutan = 0;
ELSE
IF ((harga * penyusutan_per_hari) * (selisih_dgn_tanggal_akhir + 1)) > harga then
SET total_penyusutan = harga ;
ELSE
SET total_penyusutan = harga * penyusutan_per_hari * (selisih_dgn_tanggal_akhir - selisih_dgn_tanggal_awal + 1);
end if;
end if;
END;
ELSE
BEGIN
SET selisih_dgn_tanggal_awal =
(timestampdiff(DAY, tanggal_beli, 
(CASE WHEN GetFormatTanggal(tanggal_awal) < GetFormatTanggal(tanggal_beli) THEN tanggal_beli ELSE tanggal_awal END)));
SET selisih_dgn_tanggal_akhir = 
(timestampdiff(DAY, tanggal_beli, tanggal_akhir));

IF ((harga * penyusutan_per_hari) * (selisih_dgn_tanggal_awal + 1)) > harga then
SET total_penyusutan = harga;
ELSE
IF ((harga * penyusutan_per_hari) * (selisih_dgn_tanggal_akhir + 1)) > harga then
SET total_penyusutan = harga ;
ELSE
SET total_penyusutan = harga * penyusutan_per_hari * (selisih_dgn_tanggal_akhir - selisih_dgn_tanggal_awal + 1);
end if;
end if;
END;
end if;
END;
end if;

RETURN total_penyusutan;
END


//xyvdelimiter //
DROP FUNCTION IF EXISTS GetTanggalTerakhirTutupBuku;
CREATE FUNCTION GetTanggalTerakhirTutupBuku()
RETURNS datetime
BEGIN
RETURN(SELECT IfNULL(MAX(tanggal), '2007/01/01 00:00:00') FROM g_tutup_buku);
END



//xyvdelimiter //
DROP FUNCTION IF EXISTS GetTotalPenjualanJasa;
CREATE FUNCTION GetTotalPenjualanJasa(no_transaksi VARCHAR(20))
RETURNS decimal(10,0)
BEGIN 
DECLARE total_jasa DECIMAL;

SELECT IFNULL(SUM(
GetHargaBersihJasa(GetHargaBersihJasa(d.harga, d.diskon,0, 0,0,0,0,0), j.diskon, 0,0,0,j.pajak,j.services, j.other)* d.qty
),0) -  v.nominal
INTO total_jasa
FROM t_penjualan_jasa j, t_penjualan_jasa_detail d, m_voucher v
WHERE d.no_transaksi = j.no_transaksi AND j.kd_voucher = v.kd_voucher AND j.no_transaksi = no_transaksi
GROUP BY v.nominal;
RETURN total_jasa;
END


//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIPenjualan;
CREATE PROCEDURE mon_GetFMIPenjualan(IN `inTGLAWAL` datetime,IN `inTGLAKHIR` datetime,IN `inDIVISI` varchar(20))
BEGIN
DECLARE varTotalPenjualan FLOAT(23,2);
DECLARE varKdBarang VARCHAR(100);
DECLARE varJumlah,varTotal,varSaldoTemp FLOAT;
DECLARE varNomorTemp BIGINT;
DECLARE varFMI,varSMI,selesai INT;

DECLARE cur_transaksi CURSOR FOR
SELECT rest.kdbarang, rest.qty, rest.total 
FROM rest;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET selesai = 1;

DROP TABLE IF EXISTS res;
DROP TABLE IF EXISTS rest;
CREATE TEMPORARY TABLE res(
awal DATE, 
akhir DATE, 
divisi VARCHAR(20), 
nomor BIGINT, 
kode VARCHAR(100), 
barang VARCHAR(100), 
divisibarang VARCHAR(100), 
departemen VARCHAR(100), 
kategori VARCHAR(100), 
subkategori VARCHAR(100),
qty FLOAT(23,2), 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT(1), 
SMI INT(1)
);
CREATE TEMPORARY TABLE rest(
awal DATETIME, 
akhir DATETIME, 
divisi VARCHAR(20), 
nomor BIGINT, 		
kdbarang VARCHAR(100), 		
qty FLOAT, 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT, 
SMI INT
);

INSERT INTO rest
SELECT   inTGLAWAL, inTGLAKHIR, inDIVISI,  0,
dtl.kd_barang, SUM(dtl.qty * bstn.jumlah) AS Jumlah, 
SUM(GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
jual.diskon3, jual.diskon4, jual.pajak, 0) * dtl.qty) AS total, 0, 0, 0
FROM         t_penjualan jual INNER JOIN
t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi INNER JOIN
m_barang brg ON dtl.kd_barang = brg.kd_barang INNER JOIN
m_divisi dv ON jual.kd_divisi = dv.kd_divisi INNER JOIN
m_barang_satuan bstn ON dtl.kd_barang = bstn.kd_barang AND dtl.kd_satuan = bstn.kd_satuan
WHERE dtl.jenis = 1 AND dv.kd_divisi = inDIVISI AND DATE(jual.tanggal) BETWEEN inTGLAWAL AND inTGLAKHIR
GROUP BY dtl.kd_barang
ORDER BY total DESC;

SET varTotalPenjualan=(SELECT SUM(rest.total)as Xtotal FROM rest);
SET varFMI=1;
SET varSMI=0;
SET varSaldoTemp=0;
SET varNomorTemp=0;

OPEN cur_transaksi;		
myloop: LOOP
FETCH cur_transaksi INTO varKdBarang,varJumlah,varTotal;
IF selesai THEN
LEAVE myloop;
END IF;
SET varNomorTemp = varNomorTemp + 1;
SET varSaldoTemp = varSaldoTemp + varTotal;

UPDATE rest SET rest.nomor=varNomorTemp, rest.saldo=varSaldoTemp,rest.FMI=varFMI,rest.SMI=varSMI WHERE rest.kdbarang=varKdBarang;
IF varSaldoTemp>(varTotalPenjualan*0.8) THEN
SET varFMI=0;
SET varSMI=1;
END IF;
END LOOP;
CLOSE cur_transaksi;
INSERT INTO res 
SELECT tm.awal, tm.akhir, tm.divisi, 
nomor, tm.kdbarang, br.nama, mr.nama, mdl.nama, kt.nama, wrn.nama,
qty, total, saldo, FMI, SMI 
FROM rest tm 
INNER JOIN m_barang br ON tm.kdbarang = br.kd_barang 
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mr ON br.kd_merk = mr.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
ORDER BY nomor;
SELECT * FROM res;
END
//xyvdelimiter //
DROP VIEW IF EXISTS v_g_barang_histori;
CREATE VIEW `v_g_barang_histori` AS select `bd`.`kd_barang` AS `kd_barang`,`bd`.`kd_divisi` AS `kd_divisi`,`bd`.`stok_awal` AS `Debet`,0 AS `Kredit`,`bs`.`kd_satuan` AS `kd_satuan` from (((`m_barang_divisi` `bd` join `m_barang_satuan` `bs`) join `m_barang` `b`) join `m_kategori` `k`) where `bd`.`kd_barang` = `bs`.`kd_barang` and `bs`.`jumlah` = 1 and `bd`.`kd_barang` = `b`.`kd_barang` and `b`.`kd_kategori` = `k`.`kd_kategori` and `k`.`status` <> 2 union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi_asal` AS `kd_divisi_asal`,0 AS `Debet`,sum(`d`.`qty`) AS `Kredit`,`d`.`kd_satuan` AS `kd_satuan` from (`t_mutasi_stok_detail` `d` join `t_mutasi_stok` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi_asal` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi_tujuan` AS `kd_divisi_tujuan`,sum(`d`.`qty`) AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (`t_mutasi_stok_detail` `d` join `t_mutasi_stok` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi_tujuan` union all select `t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`kd_divisi` AS `kd_divisi`,sum(`t_opname_stok`.`qty`) AS `DEBET`,0 AS `KREDIT`,`t_opname_stok`.`kd_satuan` AS `kd_satuan` from `t_opname_stok` where `t_opname_stok`.`status` = 2 and `t_opname_stok`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_opname_stok`.`kd_barang`,`t_opname_stok`.`kd_satuan`,`t_opname_stok`.`kd_divisi` union all select `t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`kd_divisi` AS `kd_divisi`,0 AS `DEBET`,sum(`t_opname_stok`.`qty`) AS `KREDIT`,`t_opname_stok`.`kd_satuan` AS `kd_satuan` from `t_opname_stok` where `t_opname_stok`.`status` <> 2 and `t_opname_stok`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_opname_stok`.`kd_barang`,`t_opname_stok`.`kd_satuan`,`t_opname_stok`.`kd_divisi` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi` AS `kd_divisi`,sum(`d`.`qty`) AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (`t_pembelian_detail` `d` join `t_pembelian` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi` AS `kd_divisi`,0 AS `DEBET`,sum(`d`.`qty`) AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (`t_pembelian_retur_detail` `d` join `t_pembelian_retur` `t`) where `d`.`no_retur` = `t`.`no_retur` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi` AS `kd_divisi`,0 AS `DEBET`,sum(`d`.`qty`) AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (((`t_penjualan_detail` `d` join `t_penjualan` `t`) join `m_barang` `b`) join `m_kategori` `k`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and `d`.`kd_barang` = `b`.`kd_barang` and `b`.`kd_kategori` = `k`.`kd_kategori` and `k`.`status` <> 2 group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi` union all select `d`.`kd_barang` AS `kd_barang`,`t`.`kd_divisi` AS `kd_divisi`,sum(`d`.`qty`) AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan` from (`t_penjualan_retur_detail` `d` join `t_penjualan_retur` `t`) where `d`.`no_retur` = `t`.`no_retur` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `d`.`kd_barang`,`d`.`kd_satuan`,`t`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_g_barang_histori_detail;
CREATE VIEW `v_g_barang_histori_detail` AS select `bd`.`kd_divisi` AS `kd_divisi`,`GetTanggalTerakhirTutupBuku`() AS `tanggal`,'0' AS `no_transaksi`,'Stok Awal' AS `Transaksi`,`bd`.`kd_barang` AS `kd_barang`,`bd`.`stok_awal` AS `Debet`,0 AS `Kredit`,`bs`.`kd_satuan` AS `kd_satuan`,`bd`.`harga_beli_awal` AS `harga`,'01/01/2007' AS `tanggal_server`,0 AS `jenis` from (((`m_barang_divisi` `bd` join `m_barang_satuan` `bs`) join `m_barang` `b`) join `m_kategori` `k`) where `bd`.`kd_barang` = `bs`.`kd_barang` and `bs`.`jumlah` = 1 and `bd`.`kd_barang` = `b`.`kd_barang` and `b`.`kd_kategori` = `k`.`kd_kategori` and `k`.`status` <> 2 union all select `t`.`kd_divisi_asal` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_transaksi` AS `Nomor`,'Mutasi Keluar' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,0 AS `Debet`,`d`.`qty` AS `Kredit`,`d`.`kd_satuan` AS `kd_satuan`,0 AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,1 AS `jenis` from (`t_mutasi_stok_detail` `d` join `t_mutasi_stok` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t`.`kd_divisi_tujuan` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_transaksi` AS `Nomor`,'Mutasi Masuk' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,`d`.`qty` AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,0 AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,2 AS `jenis` from (`t_mutasi_stok_detail` `d` join `t_mutasi_stok` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t_opname_stok`.`kd_divisi` AS `Kd Divisi`,`t_opname_stok`.`tanggal` AS `tanggal`,`t_opname_stok`.`no_transaksi` AS `Nomor`,'Opname Masuk' AS `Transaksi`,`t_opname_stok`.`kd_barang` AS `kd_barang`,`t_opname_stok`.`qty` AS `DEBET`,0 AS `KREDIT`,`t_opname_stok`.`kd_satuan` AS `kd_satuan`,0 AS `harga`,`t_opname_stok`.`tanggal_server` AS `tanggal_server`,3 AS `jenis` from `t_opname_stok` where `t_opname_stok`.`status` = 2 and `t_opname_stok`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t_opname_stok`.`kd_divisi` AS `Kd Divisi`,`t_opname_stok`.`tanggal` AS `tanggal`,`t_opname_stok`.`no_transaksi` AS `Nomor`,'Opname Keluar' AS `Transaksi`,`t_opname_stok`.`kd_barang` AS `kd_barang`,0 AS `DEBET`,`t_opname_stok`.`qty` AS `KREDIT`,`t_opname_stok`.`kd_satuan` AS `kd_satuan`,0 AS `harga`,`t_opname_stok`.`tanggal_server` AS `tanggal_server`,4 AS `jenis` from `t_opname_stok` where `t_opname_stok`.`status` <> 2 and `t_opname_stok`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t`.`kd_divisi` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_transaksi` AS `Nomor`,'Pembelian' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,`d`.`qty` AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,`d`.`harga_beli` AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,5 AS `jenis` from (`t_pembelian_detail` `d` join `t_pembelian` `t`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and `t`.`status` in (0,1) union all select `t`.`kd_divisi` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_retur` AS `Nomor`,'Retur Pembelian' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,0 AS `DEBET`,`d`.`qty` AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,`d`.`harga` AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,6 AS `jenis` from (`t_pembelian_retur_detail` `d` join `t_pembelian_retur` `t`) where `d`.`no_retur` = `t`.`no_retur` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t`.`kd_divisi` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_transaksi` AS `Nomor`,'Penjualan' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,0 AS `DEBET`,`d`.`qty` AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,`d`.`harga_jual` AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,7 AS `jenis` from (((`t_penjualan_detail` `d` join `t_penjualan` `t`) join `m_barang` `b`) join `m_kategori` `k`) where `d`.`no_transaksi` = `t`.`no_transaksi` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and `d`.`kd_barang` = `b`.`kd_barang` and `b`.`kd_kategori` = `k`.`kd_kategori` and `k`.`status` <> 2 union all select `t`.`kd_divisi` AS `Kd Divisi`,`t`.`tanggal` AS `tanggal`,`d`.`no_retur` AS `Nomor`,'Retur Penjualan Dengan Nota' AS `Transaksi`,`d`.`kd_barang` AS `kd_barang`,`d`.`qty` AS `DEBET`,0 AS `KREDIT`,`d`.`kd_satuan` AS `kd_satuan`,`d`.`harga_jual` AS `harga`,`t`.`tanggal_server` AS `tanggal_server`,8 AS `jenis` from (`t_penjualan_retur_detail` `d` join `t_penjualan_retur` `t`) where `d`.`no_retur` = `t`.`no_retur` and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`()
//xyvdelimiter //
DROP VIEW IF EXISTS v_g_kas_histori;
CREATE VIEW `v_g_kas_histori` AS select `m_kas`.`kd_kas` AS `kd_kas`,'SALDO AWAL' AS `transaksi`,`m_kas`.`saldo_awal` AS `debet`,0 AS `kredit` from `m_kas` union all select `t_biaya_operasional`.`kd_kas` AS `kd_kas`,'BIAYA OPERASIONAL' AS `transaksi`,0 AS `debet`,sum(`t_biaya_operasional`.`nominal`) AS `kredit` from `t_biaya_operasional` where `t_biaya_operasional`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_biaya_operasional`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_biaya_operasional`.`kd_kas` union all select `t_hutang_aset_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN HUTANG ASET' AS `transaksi`,0 AS `debet`,sum(`t_hutang_aset_cicilan`.`nominal`) AS `kredit` from `t_hutang_aset_cicilan` where `t_hutang_aset_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_aset_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_aset_cicilan`.`kd_kas` union all select `t_hutang_biaya_angkut_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN HUTANG BIAYA ANGKUT' AS `transaksi`,0 AS `debet`,sum(`t_hutang_biaya_angkut_cicilan`.`nominal`) AS `kredit` from `t_hutang_biaya_angkut_cicilan` where `t_hutang_biaya_angkut_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_biaya_angkut_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_biaya_angkut_cicilan`.`kd_kas` union all select `t_hutang_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN HUTANG PEMBELIAN' AS `transaksi`,0 AS `debet`,sum(`t_hutang_cicilan`.`nominal`) AS `kredit` from `t_hutang_cicilan` where `t_hutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_cicilan`.`kd_kas` union all select `t_hutang_pegawai_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN HUTANG PEGAWAI' AS `transaksi`,sum(`t_hutang_pegawai_cicilan`.`nominal`) AS `debet`,0 AS `kredit` from `t_hutang_pegawai_cicilan` where `t_hutang_pegawai_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_pegawai_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_pegawai_cicilan`.`kd_kas` union all select `t_hutang_pegawai`.`kd_kas` AS `kd_kas`,'HUTANG PEGAWAI' AS `transaksi`,0 AS `DEBET`,sum(`t_hutang_pegawai`.`nominal`) AS `kredit` from `t_hutang_pegawai` where `t_hutang_pegawai`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_pegawai`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_hutang_pegawai`.`kd_kas` union all select `t_mutasi_kas`.`kd_kas_sumber` AS `kd_kas_sumber`,'MUTASI KAS (PENGIRIM)' AS `transaksi`,0 AS `debet`,sum(`t_mutasi_kas`.`nominal`) AS `kredit` from `t_mutasi_kas` where `t_mutasi_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_mutasi_kas`.`kd_kas_sumber` union all select `t_mutasi_kas`.`kd_kas_tujuan` AS `kd_kas_tujuan`,'MUTASI KAS (PENERIMA)' AS `transaksi`,sum(`t_mutasi_kas`.`nominal`) AS `debet`,0 AS `kredit` from `t_mutasi_kas` where `t_mutasi_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_mutasi_kas`.`kd_kas_tujuan` union all select `b`.`kd_kas` AS `kd_kas`,'PEMBELIAN BARANG' AS `transaksi`,0 AS `debet`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga_beli`,`d`.`diskon1`,`d`.`diskon2`,`d`.`diskon3`,`d`.`diskon4`,0,0),`b`.`diskon1`,`b`.`diskon2`,`b`.`diskon3`,`b`.`diskon4`,`b`.`pajak`,`b`.`ppnbm`) * `d`.`qty`) AS `kredit` from (`t_pembelian` `b` join `t_pembelian_detail` `d`) where `d`.`no_transaksi` = `b`.`no_transaksi` and `b`.`status` = 1 and `b`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `b`.`kd_kas` union all select `ba`.`kd_kas` AS `kd_kas`,'BIAYA ANGKUT PEMBELIAN' AS `transaksi`,0 AS `debet`,sum(`ba`.`nominal`) AS `kredit` from (`t_pembelian_biaya_angkut` `ba` join `t_pembelian` `b`) where `ba`.`no_transaksi` = `b`.`no_transaksi` and `ba`.`status` = 1 and `b`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `ba`.`kd_kas` union all select `r`.`kd_kas` AS `kd_kas`,'RETUR PEMBELIAN' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`rd`.`harga`,`rd`.`diskon1`,`rd`.`diskon2`,`rd`.`diskon3`,`rd`.`diskon4`,0,0),`r`.`diskon1`,`r`.`diskon2`,`r`.`diskon3`,`r`.`diskon4`,`r`.`pajak`,`r`.`ppnbm`) * `rd`.`qty`) AS `debet`,0 AS `kredit` from (`t_pembelian_retur` `r` join `t_pembelian_retur_detail` `rd`) where `rd`.`no_retur` = `r`.`no_retur` and `r`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`r`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `r`.`kd_kas` union all select `t_pendapatan`.`kd_kas` AS `kd_kas`,'PENDAPATAN LAIN-LAIN' AS `transaksi`,sum(`t_pendapatan`.`nominal`) AS `debet`,0 AS `kredit` from `t_pendapatan` where `t_pendapatan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_pendapatan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_pendapatan`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PENJUALAN BARANG' AS `transaksi`,sum(`d`.`total`) AS `Debet`,0 AS `kredit` from (`t_penjualan` `t` join `t_penjualan_total` `d`) where `t`.`no_transaksi` = `d`.`no_transaksi` and `t`.`status` = 1 and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `r`.`kd_kas` AS `kd_kas`,'RETUR PENJUALAN' AS `transaksi`,0 AS `debet`,sum(`GetHargaBersih`(`GetHargaBersih`(`rd`.`harga_jual`,`rd`.`diskon1`,`rd`.`diskon2`,`rd`.`diskon3`,`rd`.`diskon4`,0,0),`r`.`diskon1`,`r`.`diskon2`,`r`.`diskon3`,`r`.`diskon4`,`r`.`pajak`,0) * `rd`.`qty`) AS `kredit` from (`t_penjualan_retur` `r` join `t_penjualan_retur_detail` `rd`) where `rd`.`no_retur` = `r`.`no_retur` and `r`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`r`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `r`.`kd_kas` union all select `t_piutang_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN PIUTANG' AS `transaksi`,sum(`t_piutang_cicilan`.`nominal`) AS `debet`,0 AS `kredit` from `t_piutang_cicilan` where `t_piutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_piutang_cicilan`.`kd_kas` union all select `t_piutang_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN PIUTANG' AS `transaksi`,sum(`t_piutang_cicilan`.`nominal` * `t_piutang_cicilan`.`other`) AS `debet`,0 AS `kredit` from `t_piutang_cicilan` where `t_piutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_piutang_cicilan`.`kd_kas` union all select `t_surat_berharga`.`kd_kas_setor` AS `kd_kas_setor`,'SURAT BERHARGA (KELUAR)' AS `transaksi`,0 AS `debet`,sum(`t_surat_berharga`.`nominal`) AS `kredit` from `t_surat_berharga` where `t_surat_berharga`.`tanggal_cair` > `GetTanggalTerakhirTutupBuku`() and `GetFormatTanggal`(`t_surat_berharga`.`tanggal_cair`) >= `GetFormatTanggal`(`t_surat_berharga`.`tanggal_setor`) and `t_surat_berharga`.`status_blong` = 0 and `t_surat_berharga`.`status_asal` = 0 group by `t_surat_berharga`.`kd_kas_setor` union all select `t_surat_berharga`.`kd_kas_setor` AS `kd_kas_setor`,'SURAT BERHARGA (MASUK)' AS `transaksi`,sum(`t_surat_berharga`.`nominal`) AS `debet`,0 AS `kredit` from `t_surat_berharga` where `t_surat_berharga`.`tanggal_cair` > `GetTanggalTerakhirTutupBuku`() and `GetFormatTanggal`(`t_surat_berharga`.`tanggal_cair`) >= `GetFormatTanggal`(`t_surat_berharga`.`tanggal_setor`) and `t_surat_berharga`.`status_blong` = 0 and `t_surat_berharga`.`status_asal` = 1 group by `t_surat_berharga`.`kd_kas_setor` union all select `t_penambahan_kas`.`kd_kas` AS `kd_kas`,'PENAMBAHAN MODAL' AS `Transaksi`,sum(`t_penambahan_kas`.`nominal`) AS `debet`,0 AS `kredit` from `t_penambahan_kas` where `t_penambahan_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_penambahan_kas`.`kd_kas` union all select `t_prive`.`kd_kas` AS `kd_kas`,'PRIVE' AS `Transaksi`,0 AS `debet`,sum(`t_prive`.`nominal`) AS `kredit` from `t_prive` where `t_prive`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `t_prive`.`kd_kas` union all select `m_aset`.`kd_kas` AS `kd_kas`,'PENJUALAN ASET' AS `PENJUALAN ASET`,sum(`m_aset`.`harga_beli` - `GetPenyusutanAset`(`m_aset`.`kd_aset`,`m_aset`.`tanggal_beli`,`m_aset`.`tanggal_jual`)) AS `debet`,0 AS `kredit` from `m_aset` where `GetFormatTanggal`(`m_aset`.`tanggal_jual`) >= `GetFormatTanggal`(`m_aset`.`tanggal_beli`) and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and !(`m_aset`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `m_aset`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PENJUALAN JASA' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty`) AS `debet`,0 AS `kredit` from (((`t_penjualan_jasa` `t` join `t_penjualan_jasa_detail` `d`) join `m_jasa` `m`) join `m_jasa_kategori` `k`) where `d`.`kd_jasa` = `m`.`kd_jasa` and `m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori` and `d`.`no_transaksi` = `t`.`no_transaksi` and `k`.`status` = 2 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PENDAPATAN KARTU KREDIT PENJUALAN JASA' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty` * `t`.`other`) AS `debet`,0 AS `kredit` from (((`t_penjualan_jasa` `t` join `t_penjualan_jasa_detail` `d`) join `m_jasa` `m`) join `m_jasa_kategori` `k`) where `d`.`kd_jasa` = `m`.`kd_jasa` and `m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori` and `d`.`no_transaksi` = `t`.`no_transaksi` and `k`.`status` = 2 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PERSEWAAN' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty`) AS `debet`,0 AS `kredit` from (((`t_penjualan_jasa` `t` join `t_penjualan_jasa_detail` `d`) join `m_jasa` `m`) join `m_jasa_kategori` `k`) where `d`.`kd_jasa` = `m`.`kd_jasa` and `m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori` and `d`.`no_transaksi` = `t`.`no_transaksi` and `k`.`status` = 1 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `t`.`kd_kas` AS `kd_kas`,'PENDAPATAN KARTU KREDIT PERSEWAAN' AS `transaksi`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty` * `t`.`other`) AS `debet`,0 AS `kredit` from (((`t_penjualan_jasa` `t` join `t_penjualan_jasa_detail` `d`) join `m_jasa` `m`) join `m_jasa_kategori` `k`) where `d`.`kd_jasa` = `m`.`kd_jasa` and `m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori` and `d`.`no_transaksi` = `t`.`no_transaksi` and `k`.`status` = 1 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas` union all select `t_piutang_jasa_cicilan`.`kd_kas` AS `kd_kas`,'CICILAN PIUTANG JASA' AS `transaksi`,sum(`t_piutang_jasa_cicilan`.`nominal`) AS `debet`,0 AS `kredit` from `t_piutang_jasa_cicilan` where `t_piutang_jasa_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_jasa_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `t_piutang_jasa_cicilan`.`kd_kas`
//xyvdelimiter //
DROP VIEW IF EXISTS v_g_kas_histori_detail;
CREATE VIEW `v_g_kas_histori_detail` AS select `m_kas`.`kd_kas` AS `kd_kas`,`GetTanggalTerakhirTutupBuku`() AS `tanggal`,'SALDO AWAL' AS `transaksi`,'-' AS `no_transaksi`,'-' AS `Objek`,`m_kas`.`saldo_awal` AS `debet`,0 AS `kredit`,'' AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,(select min(`m_userx`.`kd_user`) from `m_userx` where `m_userx`.`status` <> 0) AS `Kode User`,(select `m_userx`.`nama` from `m_userx` where `m_userx`.`kd_user` in (select min(`m_userx`.`kd_user`) from `m_userx` where `m_userx`.`status` <> 0)) AS `User` from `m_kas` union all select `t_biaya_operasional`.`kd_kas` AS `kd_kas`,`t_biaya_operasional`.`tanggal` AS `tanggal`,'BIAYA OPERASIONAL' AS `transaksi`,`t_biaya_operasional`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_biaya_operasional`.`nominal` AS `kredit`,`t_biaya_operasional`.`keterangan` AS `keterangan`,`t_biaya_operasional`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_biaya_operasional`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((`t_biaya_operasional` join `m_divisi` on(`t_biaya_operasional`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_biaya_operasional`.`kd_user` = `m_userx`.`kd_user`)) where `t_biaya_operasional`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_biaya_operasional`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_aset_cicilan`.`kd_kas` AS `kd_kas`,`t_hutang_aset_cicilan`.`tanggal` AS `tanggal`,'CICILAN HUTANG ASET' AS `transaksi`,cast(`t_hutang_aset_cicilan`.`no_cicilan` as char(20) charset utf8) AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_hutang_aset_cicilan`.`nominal` AS `kredit`,`t_hutang_aset_cicilan`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_hutang_aset_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_hutang_aset_cicilan` join `m_userx` on(`t_hutang_aset_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_aset_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_aset_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_biaya_angkut_cicilan`.`kd_kas` AS `kd_kas`,`t_hutang_biaya_angkut_cicilan`.`tanggal` AS `tanggal`,'CICILAN HUTANG BIAYA ANGKUT' AS `transaksi`,`t_hutang_biaya_angkut_cicilan`.`no_cicilan` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_hutang_biaya_angkut_cicilan`.`nominal` AS `kredit`,`t_hutang_biaya_angkut_cicilan`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_hutang_biaya_angkut_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_hutang_biaya_angkut_cicilan` join `m_userx` on(`t_hutang_biaya_angkut_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_biaya_angkut_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_biaya_angkut_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_cicilan`.`kd_kas` AS `kd_kas`,`t_hutang_cicilan`.`tanggal` AS `tanggal`,'CICILAN HUTANG PEMBELIAN' AS `transaksi`,`t_hutang_cicilan`.`no_cicilan` AS `no_cicilan`,`m_supplier`.`nama` AS `Objek`,0 AS `debet`,`t_hutang_cicilan`.`nominal` AS `kredit`,`t_hutang_cicilan`.`keterangan` AS `keterangan`,`t_pembelian`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_hutang_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_hutang_cicilan` join `t_pembelian` on(`t_hutang_cicilan`.`no_transaksi` = `t_pembelian`.`no_transaksi`)) join `m_supplier` on(`t_pembelian`.`kd_supplier` = `m_supplier`.`kd_supplier`)) join `m_divisi` on(`t_pembelian`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_hutang_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_pegawai_cicilan`.`kd_kas` AS `kd_kas`,`t_hutang_pegawai_cicilan`.`tanggal` AS `tanggal`,'CICILAN HUTANG PEGAWAI' AS `transaksi`,cast(`t_hutang_pegawai_cicilan`.`no_cicilan` as char(20) charset utf8) AS `no_transaksi`,'-' AS `Objek`,`t_hutang_pegawai_cicilan`.`nominal` AS `debet`,0 AS `kredit`,`t_hutang_pegawai_cicilan`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_hutang_pegawai_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_hutang_pegawai_cicilan` join `m_userx` on(`t_hutang_pegawai_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_pegawai_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_pegawai_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_hutang_pegawai`.`kd_kas` AS `kd_kas`,`t_hutang_pegawai`.`tanggal` AS `tanggal`,'HUTANG PEGAWAI' AS `transaksi`,`t_hutang_pegawai`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_hutang_pegawai`.`nominal` AS `kredit`,`t_hutang_pegawai`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_hutang_pegawai`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_hutang_pegawai` join `m_userx` on(`t_hutang_pegawai`.`kd_user` = `m_userx`.`kd_user`)) where `t_hutang_pegawai`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_hutang_pegawai`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_mutasi_kas`.`kd_kas_sumber` AS `kd_kas_sumber`,`t_mutasi_kas`.`tanggal` AS `tanggal`,'MUTASI KAS (KELUAR)' AS `transaksi`,`t_mutasi_kas`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_mutasi_kas`.`nominal` AS `kredit`,`t_mutasi_kas`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_mutasi_kas`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_mutasi_kas` join `m_userx` on(`t_mutasi_kas`.`kd_user` = `m_userx`.`kd_user`)) where `t_mutasi_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t_mutasi_kas`.`kd_kas_tujuan` AS `kd_kas_tujuan`,`t_mutasi_kas`.`tanggal` AS `tanggal`,'MUTASI KAS (MASUK)' AS `transaksi`,`t_mutasi_kas`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,`t_mutasi_kas`.`nominal` AS `debet`,0 AS `kredit`,`t_mutasi_kas`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_mutasi_kas`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_mutasi_kas` join `m_userx` on(`t_mutasi_kas`.`kd_user` = `m_userx`.`kd_user`)) where `t_mutasi_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `b`.`kd_kas` AS `kd_kas`,`b`.`tanggal` AS `tanggal`,'PEMBELIAN BARANG' AS `transaksi`,`b`.`no_transaksi` AS `no_transaksi`,`m_supplier`.`nama` AS `Objek`,0 AS `debet`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga_beli`,`d`.`diskon1`,`d`.`diskon2`,`d`.`diskon3`,`d`.`diskon4`,0,0),`b`.`diskon1`,`b`.`diskon2`,`b`.`diskon3`,`b`.`diskon4`,`b`.`pajak`,`b`.`ppnbm`) * `d`.`qty`) AS `kredit`,`b`.`keterangan` AS `keterangan`,`b`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`b`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_pembelian` `b` join `t_pembelian_detail` `d` on(`b`.`no_transaksi` = `d`.`no_transaksi`)) join `m_supplier` on(`b`.`kd_supplier` = `m_supplier`.`kd_supplier`)) join `m_divisi` on(`b`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`b`.`kd_user` = `m_userx`.`kd_user`)) where `b`.`status` = 1 and `b`.`tanggal` > `GetTanggalTerakhirTutupBuku`() group by `b`.`kd_kas`,`b`.`tanggal`,`b`.`no_transaksi`,`b`.`keterangan`,`m_supplier`.`nama`,`b`.`kd_divisi`,`m_divisi`.`nama`,`b`.`kd_user`,`m_userx`.`nama` union all select `ba`.`kd_kas` AS `kd_kas`,`b`.`tanggal` AS `tanggal`,'BIAYA ANGKUT PEMBELIAN' AS `transaksi`,`ba`.`no_nota` AS `no_nota`,'-' AS `Objek`,0 AS `debet`,`ba`.`nominal` AS `kredit`,`b`.`keterangan` AS `keterangan`,`b`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`b`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from (((`t_pembelian_biaya_angkut` `ba` join `t_pembelian` `b` on(`ba`.`no_transaksi` = `b`.`no_transaksi`)) join `m_divisi` on(`b`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`b`.`kd_user` = `m_userx`.`kd_user`)) where `b`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and `ba`.`status` = 1 union all select `r`.`kd_kas` AS `kd_kas`,`r`.`tanggal` AS `tanggal`,'RETUR PEMBELIAN' AS `transaksi`,`r`.`no_retur` AS `no_transaksi`,`m_supplier`.`nama` AS `Objek`,sum(`GetHargaBersih`(`GetHargaBersih`(`rd`.`harga`,`rd`.`diskon1`,`rd`.`diskon2`,`rd`.`diskon3`,`rd`.`diskon4`,0,0),`r`.`diskon1`,`r`.`diskon2`,`r`.`diskon3`,`r`.`diskon4`,`r`.`pajak`,`r`.`ppnbm`) * `rd`.`qty`) AS `debet`,0 AS `kredit`,`r`.`keterangan` AS `keterangan`,`r`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`r`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_pembelian_retur` `r` join `t_pembelian_retur_detail` `rd` on(`r`.`no_retur` = `rd`.`no_retur`)) join `m_supplier` on(`r`.`kd_supplier` = `m_supplier`.`kd_supplier`)) join `m_divisi` on(`r`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`r`.`kd_user` = `m_userx`.`kd_user`)) where `r`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`r`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `r`.`kd_kas`,`r`.`tanggal`,`r`.`no_retur`,`r`.`keterangan`,`m_supplier`.`nama`,`r`.`kd_divisi`,`m_divisi`.`nama`,`r`.`kd_user`,`m_userx`.`nama` union all select `t_pendapatan`.`kd_kas` AS `kd_kas`,`t_pendapatan`.`tanggal` AS `tanggal`,'PENDAPATAN LAIN-LAIN' AS `transaksi`,`t_pendapatan`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,`t_pendapatan`.`nominal` AS `debet`,0 AS `kredit`,`t_pendapatan`.`keterangan` AS `keterangan`,`t_pendapatan`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_pendapatan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((`t_pendapatan` join `m_divisi` on(`t_pendapatan`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_pendapatan`.`kd_user` = `m_userx`.`kd_user`)) where `t_pendapatan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_pendapatan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t`.`kd_kas` AS `kd_kas`,`t`.`tanggal` AS `tanggal`,'PENJUALAN BARANG' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`d`.`total` AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_penjualan` `t` join `t_penjualan_total` `d` on(`t`.`no_transaksi` = `d`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `t`.`status` = 1 and `t`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `r`.`kd_kas` AS `kd_kas`,`r`.`tanggal` AS `tanggal`,'RETUR PENJUALAN' AS `transaksi`,`r`.`no_retur` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,0 AS `debet`,sum(`GetHargaBersih`(`GetHargaBersih`(`rd`.`harga_jual`,`rd`.`diskon1`,`rd`.`diskon2`,`rd`.`diskon3`,`rd`.`diskon4`,0,0),`r`.`diskon1`,`r`.`diskon2`,`r`.`diskon3`,`r`.`diskon4`,`r`.`pajak`,0) * `rd`.`qty`) AS `kredit`,`r`.`keterangan` AS `keterangan`,`r`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`r`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_penjualan_retur` `r` join `t_penjualan_retur_detail` `rd` on(`r`.`no_retur` = `rd`.`no_retur`)) join `m_customer` on(`r`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`r`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`r`.`kd_user` = `m_userx`.`kd_user`)) where `r`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`r`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) group by `r`.`kd_kas`,`r`.`tanggal`,`r`.`no_retur`,`r`.`keterangan`,`m_customer`.`nama`,`r`.`kd_divisi`,`m_divisi`.`nama`,`r`.`kd_user`,`m_userx`.`nama` union all select `t_piutang_cicilan`.`kd_kas` AS `kd_kas`,`t_piutang_cicilan`.`tanggal` AS `tanggal`,'CICILAN PIUTANG' AS `transaksi`,`t_piutang_cicilan`.`no_cicilan` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`t_piutang_cicilan`.`nominal` AS `debet`,0 AS `kredit`,`t_piutang_cicilan`.`keterangan` AS `keterangan`,`t_penjualan`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_piutang_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_piutang_cicilan` join `t_penjualan` on(`t_piutang_cicilan`.`no_transaksi` = `t_penjualan`.`no_transaksi`)) join `m_customer` on(`t_penjualan`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_userx` on(`t_piutang_cicilan`.`kd_user` = `m_userx`.`kd_user`)) join `m_divisi` on(`t_penjualan`.`kd_divisi` = `m_divisi`.`kd_divisi`)) where `t_piutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_piutang_cicilan`.`kd_kas` AS `kd_kas`,`t_piutang_cicilan`.`tanggal` AS `tanggal`,'PENDATAPAN KARTU KREDIT DARI PIUTANG' AS `transaksi`,`t_piutang_cicilan`.`no_cicilan` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`t_piutang_cicilan`.`nominal` * `t_piutang_cicilan`.`other` AS `debet`,0 AS `kredit`,`t_piutang_cicilan`.`keterangan` AS `keterangan`,`t_penjualan`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_piutang_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_piutang_cicilan` join `t_penjualan` on(`t_piutang_cicilan`.`no_transaksi` = `t_penjualan`.`no_transaksi`)) join `m_customer` on(`t_penjualan`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_userx` on(`t_piutang_cicilan`.`kd_user` = `m_userx`.`kd_user`)) join `m_divisi` on(`t_penjualan`.`kd_divisi` = `m_divisi`.`kd_divisi`)) where `t_piutang_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) and `t_piutang_cicilan`.`other` > 0 union all select `t_surat_berharga`.`kd_kas_setor` AS `kd_kas_setor`,`t_surat_berharga`.`tanggal_cair` AS `tanggal_cair`,'SURAT BERHARGA (KELUAR)' AS `transaksi`,`t_surat_berharga`.`no_surat_berharga` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_surat_berharga`.`nominal` AS `kredit`,`t_surat_berharga`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_surat_berharga`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_surat_berharga` join `m_userx` on(`t_surat_berharga`.`kd_user` = `m_userx`.`kd_user`)) where `t_surat_berharga`.`tanggal_cair` > `GetTanggalTerakhirTutupBuku`() and `GetFormatTanggal`(`t_surat_berharga`.`tanggal_cair`) >= `GetFormatTanggal`(`t_surat_berharga`.`tanggal_setor`) and `t_surat_berharga`.`status_blong` = 0 and `t_surat_berharga`.`status_asal` = 0 union all select `t_surat_berharga`.`kd_kas_setor` AS `kd_kas_setor`,`t_surat_berharga`.`tanggal_cair` AS `tanggal_cair`,'SURAT BERHARGA (MASUK)' AS `transaksi`,`t_surat_berharga`.`no_surat_berharga` AS `no_transaksi`,'-' AS `Objek`,`t_surat_berharga`.`nominal` AS `debet`,0 AS `kredit`,`t_surat_berharga`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_surat_berharga`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_surat_berharga` join `m_userx` on(`t_surat_berharga`.`kd_user` = `m_userx`.`kd_user`)) where `t_surat_berharga`.`tanggal_cair` > `GetTanggalTerakhirTutupBuku`() and `GetFormatTanggal`(`t_surat_berharga`.`tanggal_cair`) >= `GetFormatTanggal`(`t_surat_berharga`.`tanggal_setor`) and `t_surat_berharga`.`status_blong` = 0 and `t_surat_berharga`.`status_asal` = 1 union all select `t_penambahan_kas`.`kd_kas` AS `kd_kas`,`t_penambahan_kas`.`tanggal` AS `tanggal`,'PENAMBAHAN MODAL' AS `transaksi`,`t_penambahan_kas`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,`t_penambahan_kas`.`nominal` AS `debet`,0 AS `kredit`,`t_penambahan_kas`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_penambahan_kas`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_penambahan_kas` join `m_userx` on(`t_penambahan_kas`.`kd_user` = `m_userx`.`kd_user`)) where `t_penambahan_kas`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `t_prive`.`kd_kas` AS `kd_kas`,`t_prive`.`tanggal` AS `tanggal`,'PRIVE' AS `transaksi`,`t_prive`.`no_transaksi` AS `no_transaksi`,'-' AS `Objek`,0 AS `debet`,`t_prive`.`nominal` AS `kredit`,`t_prive`.`keterangan` AS `keterangan`,(select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0) AS `Kode Divisi`,(select `m_divisi`.`nama` from `m_divisi` where `m_divisi`.`kd_divisi` in (select min(`m_divisi`.`kd_divisi`) from `m_divisi` where `m_divisi`.`status` <> 0)) AS `Divisi`,`t_prive`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `nama` from (`t_prive` join `m_userx` on(`t_prive`.`kd_user` = `m_userx`.`kd_user`)) where `t_prive`.`tanggal` > `GetTanggalTerakhirTutupBuku`() union all select `m_aset`.`kd_kas` AS `kd_kas`,`m_aset`.`tanggal_jual` AS `tanggal_jual`,'PENJUALAN ASET' AS `Expr1`,'PA-' + `m_aset`.`kd_aset` AS `Expr2`,'-' AS `Objek`,`m_aset`.`harga_beli` - `GetPenyusutanAset`(`m_aset`.`kd_aset`,`m_aset`.`tanggal_beli`,`m_aset`.`tanggal_jual`) AS `debet`,0 AS `kredit`,'PENJUALAN ' + `m_aset`.`nama` AS `Keterangan`,`m_aset`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,(select min(`m_userx`.`kd_user`) from `m_userx` where `m_userx`.`status` <> 0) AS `Kode User`,(select `m_userx`.`nama` from `m_userx` where `m_userx`.`kd_user` in (select min(`m_userx`.`kd_user`) from `m_userx` where `m_userx`.`status` <> 0)) AS `User` from (`m_aset` join `m_divisi` on(`m_aset`.`kd_divisi` = `m_divisi`.`kd_divisi`)) where `GetFormatTanggal`(`m_aset`.`tanggal_jual`) >= `GetFormatTanggal`(`m_aset`.`tanggal_beli`) and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and `m_aset`.`tanggal_jual` > `GetTanggalTerakhirTutupBuku`() and !(`m_aset`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t`.`kd_kas` AS `kd_kas`,`t`.`tanggal_pesan` AS `tanggal_pesan`,'PENJUALAN JASA' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty`) AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((((`m_jasa` `m` join `t_penjualan_jasa_detail` `d` on(`m`.`kd_jasa` = `d`.`kd_jasa`)) join `m_jasa_kategori` `k` on(`m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori`)) join `t_penjualan_jasa` `t` on(`d`.`no_transaksi` = `t`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `k`.`status` = 2 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas`,`t`.`tanggal_pesan`,`t`.`no_transaksi`,`t`.`keterangan`,`m_customer`.`nama`,`t`.`kd_divisi`,`m_divisi`.`nama`,`t`.`kd_user`,`m_userx`.`nama` union all select `t`.`kd_kas` AS `kd_kas`,`t`.`tanggal_pesan` AS `tanggal_pesan`,'PENDAPATAN KARTU KREDIT PENJUALAN JASA' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty` * `t`.`other`) AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((((`m_jasa` `m` join `t_penjualan_jasa_detail` `d` on(`m`.`kd_jasa` = `d`.`kd_jasa`)) join `m_jasa_kategori` `k` on(`m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori`)) join `t_penjualan_jasa` `t` on(`d`.`no_transaksi` = `t`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `k`.`status` = 2 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas`,`t`.`tanggal_pesan`,`t`.`no_transaksi`,`t`.`keterangan`,`m_customer`.`nama`,`t`.`kd_divisi`,`m_divisi`.`nama`,`t`.`kd_user`,`m_userx`.`nama` union all select `t`.`kd_kas` AS `kd_kas`,`t`.`awal` AS `awal`,'PERSEWAAN' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Customer /Supplier`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty`) AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((((`m_jasa` `m` join `t_penjualan_jasa_detail` `d` on(`m`.`kd_jasa` = `d`.`kd_jasa`)) join `m_jasa_kategori` `k` on(`m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori`)) join `t_penjualan_jasa` `t` on(`d`.`no_transaksi` = `t`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `k`.`status` = 1 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas`,`t`.`awal`,`t`.`no_transaksi`,`t`.`keterangan`,`m_customer`.`nama`,`t`.`kd_divisi`,`m_divisi`.`nama`,`t`.`kd_user`,`m_userx`.`nama` union all select `t`.`kd_kas` AS `kd_kas`,`t`.`awal` AS `awal`,'PENDAPATAN KARTU KREDIT PERSEWAAN' AS `transaksi`,`t`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,sum(`GetHargaBersih`(`GetHargaBersih`(`d`.`harga`,`d`.`diskon`,0,0,0,0,0),`t`.`diskon`,0,0,0,`t`.`pajak`,0) * `d`.`qty` * `t`.`other`) AS `debet`,0 AS `kredit`,`t`.`keterangan` AS `keterangan`,`t`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((((`m_jasa` `m` join `t_penjualan_jasa_detail` `d` on(`m`.`kd_jasa` = `d`.`kd_jasa`)) join `m_jasa_kategori` `k` on(`m`.`kd_jasa_kategori` = `k`.`kd_jasa_kategori`)) join `t_penjualan_jasa` `t` on(`d`.`no_transaksi` = `t`.`no_transaksi`)) join `m_customer` on(`t`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t`.`kd_user` = `m_userx`.`kd_user`)) where `k`.`status` = 1 and `t`.`status` = 1 and `t`.`tanggal_pesan` > `GetTanggalTerakhirTutupBuku`() group by `t`.`kd_kas`,`t`.`awal`,`t`.`no_transaksi`,`t`.`keterangan`,`m_customer`.`nama`,`t`.`kd_divisi`,`m_divisi`.`nama`,`t`.`kd_user`,`m_userx`.`nama` union all select `t_piutang_jasa_cicilan`.`kd_kas` AS `kd_kas`,`t_piutang_jasa_cicilan`.`tanggal` AS `tanggal`,'CICILAN PIUTANG JASA' AS `transaksi`,`t_piutang_jasa_cicilan`.`no_cicilan` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`t_piutang_jasa_cicilan`.`nominal` AS `debet`,0 AS `kredit`,`t_piutang_jasa_cicilan`.`keterangan` AS `keterangan`,`t_penjualan_jasa`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_piutang_jasa_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_piutang_jasa_cicilan` join `t_penjualan_jasa` on(`t_piutang_jasa_cicilan`.`no_transaksi` = `t_penjualan_jasa`.`no_transaksi`)) join `m_customer` on(`t_penjualan_jasa`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t_penjualan_jasa`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_piutang_jasa_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_piutang_jasa_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_jasa_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`)) union all select `t_piutang_jasa_cicilan`.`kd_kas` AS `kd_kas`,`t_piutang_jasa_cicilan`.`tanggal` AS `tanggal`,'PENDAPATAN KARTU KREDIT CICILAN PIUTANG JASA' AS `transaksi`,`t_piutang_jasa_cicilan`.`no_cicilan` AS `no_transaksi`,`m_customer`.`nama` AS `Objek`,`t_piutang_jasa_cicilan`.`nominal` * `t_piutang_jasa_cicilan`.`other` AS `debet`,0 AS `kredit`,`t_piutang_jasa_cicilan`.`keterangan` AS `keterangan`,`t_penjualan_jasa`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama`,`t_piutang_jasa_cicilan`.`kd_user` AS `kd_user`,`m_userx`.`nama` AS `Expr1` from ((((`t_piutang_jasa_cicilan` join `t_penjualan_jasa` on(`t_piutang_jasa_cicilan`.`no_transaksi` = `t_penjualan_jasa`.`no_transaksi`)) join `m_customer` on(`t_penjualan_jasa`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_divisi` on(`t_penjualan_jasa`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_userx` on(`t_piutang_jasa_cicilan`.`kd_user` = `m_userx`.`kd_user`)) where `t_piutang_jasa_cicilan`.`nominal` * `t_piutang_jasa_cicilan`.`other` > 0 and `t_piutang_jasa_cicilan`.`tanggal` > `GetTanggalTerakhirTutupBuku`() and !(`t_piutang_jasa_cicilan`.`no_bukti` in (select `t_surat_berharga`.`no_surat_berharga` from `t_surat_berharga`))
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_penjualan_per_barang_modal2_baru;
CREATE VIEW `mon_t_penjualan_per_barang_modal2_baru` AS select `dtl`.`no_transaksi` AS `No. Transaksi`,`m_divisi`.`nama` AS `Divisi`,`GetFormatTanggal`(`jual`.`tanggal`) AS `Tanggal`,`m_customer`.`nama` AS `Customer`,`m_kategori`.`nama` AS `Kategori`,`dtl`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) / `bst`.`jumlah` AS `Harga`,`tmp`.`harga` AS `Modal`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` AS `Total Bersih`,`tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` AS `Total Modal`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` AS `Laba`,(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) / (case when `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` = 0 then 1 else `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` end) * 100 AS `Margin`,`m_userx`.`nama` AS `Petugas` from (((((((((`m_barang` join `t_penjualan` `jual`) join `t_penjualan_detail` `dtl` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi` and `m_barang`.`kd_barang` = `dtl`.`kd_barang`)) join `m_customer` on(`jual`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `m_userx` on(`jual`.`kd_user` = `m_userx`.`kd_user`)) join `m_barang_satuan` on(`dtl`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `dtl`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_barang_satuan` `bst` on(`bst`.`kd_barang` = `dtl`.`kd_barang` and `bst`.`kd_satuan` = `dtl`.`kd_satuan`)) left join (select `dtl`.`kd_barang` AS `kd_barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_beli`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`bl`.`diskon1`,`bl`.`diskon2`,`bl`.`diskon3`,`bl`.`diskon4`,`bl`.`pajak`,`bl`.`ppnbm`) / `brg`.`jumlah` AS `harga` from (((((select `dt`.`kd_barang` AS `kd_barang`,max(`dt`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` `dt` where `dt`.`harga_beli` > 0 group by `dt`.`kd_barang`)) `akhir` join `t_pembelian_detail` `dtl` on(`akhir`.`kd_barang` = `dtl`.`kd_barang` and `dtl`.`no_transaksi` = `akhir`.`nomor`)) join `m_barang_satuan` `brg` on(`brg`.`kd_barang` = `dtl`.`kd_barang` and `brg`.`kd_satuan` = `dtl`.`kd_satuan`)) join `t_pembelian` `bl` on(`dtl`.`no_transaksi` = `bl`.`no_transaksi`)) where `dtl`.`harga_beli` > 0) `tmp` on(`dtl`.`kd_barang` = `tmp`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_for_average_harga_barang;
CREATE VIEW `v_for_average_harga_barang` AS select `m_barang_divisi`.`kd_barang` AS `kd_barang`,`GetTanggalTerakhirTutupBuku`() AS `tanggal`,'STOK AWAL' AS `transaksi`,ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) AS `qty`,ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal` * `m_barang_divisi`.`harga_beli_awal`,0)),0) / (case when ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) = 0 then 1 else ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) end) AS `harga` from `m_barang_divisi` group by `m_barang_divisi`.`kd_barang` union all select `d`.`kd_barang` AS `kd_barang`,`b`.`tanggal` AS `tanggal`,'PEMBELIAN' AS `PEMBELIAN`,`bs`.`jumlah` * `d`.`qty` AS `(bs.jumlah * d.qty)`,`GetHargaBersih`(`GetHargaBersih`(`d`.`harga_beli`,`d`.`diskon1`,`d`.`diskon2`,`d`.`diskon3`,`d`.`diskon4`,0,0),`b`.`diskon1`,`b`.`diskon2`,`b`.`diskon3`,`b`.`diskon4`,`b`.`pajak`,`b`.`ppnbm`) / ifnull(`bs`.`jumlah`,0) AS `Name_exp_5` from ((`t_pembelian` `b` join `t_pembelian_detail` `d` on(`b`.`no_transaksi` = `d`.`no_transaksi`)) join `m_barang_satuan` `bs` on(`d`.`kd_barang` = `bs`.`kd_barang` and `d`.`kd_satuan` = `bs`.`kd_satuan`)) where cast(`b`.`tanggal` as date) between `GetTanggalTerakhirTutupBuku`() and cast(current_timestamp() as date)
//xyvdelimiter //
DROP VIEW IF EXISTS v_hutang_pembelian;
CREATE VIEW `v_hutang_pembelian` AS select `hutang`.`no_transaksi` AS `no_transaksi`,`hutang`.`tanggal_tr` AS `tanggal_tr`,`hutang`.`total_bersih` AS `total_bersih`,`hutang`.`status` AS `status`,`hutang`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo`,`hutang`.`kd_divisi` AS `kd_divisi`,`hutang`.`kd_supplier` AS `kd_supplier`,ifnull(`cicilan`.`cicilan`,0) AS `total_cicilan`,`hutang`.`total_bersih` - ifnull(`cicilan`.`cicilan`,0) AS `sisa_cicilan`,`m_supplier`.`nama` AS `nama` from ((((select `x_total_pembelian_bersih`.`no_transaksi` AS `no_transaksi`,`x_total_pembelian_bersih`.`tanggal_tr` AS `tanggal_tr`,`x_total_pembelian_bersih`.`total_bersih` AS `total_bersih`,`x_total_pembelian_bersih`.`status` AS `status`,`x_total_pembelian_bersih`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo`,`x_total_pembelian_bersih`.`kd_divisi` AS `kd_divisi`,`t_pembelian`.`kd_supplier` AS `kd_supplier` from (`x_total_pembelian_bersih` join `t_pembelian` on(`t_pembelian`.`no_transaksi` = `x_total_pembelian_bersih`.`no_transaksi`)) where `x_total_pembelian_bersih`.`status` = 0)) `hutang` join `m_supplier` on(`m_supplier`.`kd_supplier` = `hutang`.`kd_supplier`)) left join (select `t_hutang_cicilan`.`no_transaksi` AS `no_transaksi`,sum(`t_hutang_cicilan`.`nominal`) AS `cicilan` from `t_hutang_cicilan` group by `t_hutang_cicilan`.`no_transaksi`) `cicilan` on(`cicilan`.`no_transaksi` = `hutang`.`no_transaksi`)) where `hutang`.`total_bersih` - ifnull(`cicilan`.`cicilan`,0) > 1
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_mutasi_barang_baru;
CREATE VIEW `v_spk_mutasi_barang_baru` AS select `m_kategori`.`status` AS `k_status`,`m_kategori`.`nama` AS `Kategori`,`g_stok_akhir`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `Barang`,`g_stok_akhir`.`kd_divisi` AS `kd_divisi`,(select max(`t_mutasi_stok`.`tanggal`) from (`t_mutasi_stok` join `t_mutasi_stok_detail` on(`t_mutasi_stok`.`no_transaksi` = `t_mutasi_stok_detail`.`no_transaksi`)) where `t_mutasi_stok`.`kd_divisi_tujuan` = `g_stok_akhir`.`kd_divisi` and `t_mutasi_stok_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) AS `mutasi_akhir`,round(ifnull((select sum(`GetKuantitasSatuanTerkecil`(`t_penjualan_detail`.`kd_barang`,`t_penjualan_detail`.`kd_satuan`) * `t_penjualan_detail`.`qty`) / cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) from ((`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) join `ans_item`) where `t_penjualan`.`kd_divisi` = `g_stok_akhir`.`kd_divisi` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang` and `t_penjualan`.`tanggal` >= (case when `g_stok_akhir`.`stok` = 0 then (select max(`t_penjualan`.`tanggal`) + interval cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) * -1 day from (`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) where `t_penjualan`.`kd_divisi` = `g_stok_akhir`.`kd_divisi` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) else (select curdate() + interval (cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) * -1) day) end)),0),2) AS `avg_harian`,`g_stok_akhir`.`stok` AS `stok_tujuan`,`m_satuan`.`nama` AS `satuan`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan` from ((((`m_barang` join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `g_stok_akhir` on(`m_barang`.`kd_barang` = `g_stok_akhir`.`kd_barang`)) join `m_barang_satuan` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`)) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`jumlah` = 1 and `m_barang_satuan`.`status` <> 0
//xyvdelimiter //
DROP VIEW IF EXISTS v_avg_barang_per_periode;
CREATE VIEW `v_avg_barang_per_periode` AS select `g_stok_akhir`.`kd_barang` AS `kd_barang`,case when sum(`g_stok_akhir`.`stok`) = 0 then round(ifnull((select sum(`m_barang_satuan`.`jumlah` * `t_penjualan_detail`.`qty`) / cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) from ((((`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) join `m_barang_satuan` on(`t_penjualan_detail`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `t_penjualan_detail`.`kd_satuan`)) join `ans_item`) join `ans_item_stored_divisi` `a`) where `t_penjualan`.`kd_divisi` <> `a`.`div_expired` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang` and `t_penjualan`.`tanggal` >= (select max(`t_penjualan`.`tanggal`) + interval cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) * -1 day from (((`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) join `ans_item`) join `ans_item_stored_divisi` `a`) where `t_penjualan`.`kd_divisi` <> `a`.`div_expired` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) group by `t_penjualan_detail`.`kd_barang`),0),2) else round(ifnull((select sum(`m_barang_satuan`.`jumlah` * `t_penjualan_detail`.`qty`) / cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) from ((((`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) join `m_barang_satuan` on(`t_penjualan_detail`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `t_penjualan_detail`.`kd_satuan`)) join `ans_item`) join `ans_item_stored_divisi` `a`) where `t_penjualan`.`kd_divisi` <> `a`.`div_expired` and `t_penjualan_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang` and `t_penjualan`.`tanggal` >= (select curdate() + interval (cast(`ans_item`.`periode` * `ans_item`.`sampling` as signed) * -1) day) group by `t_penjualan_detail`.`kd_barang`),0),2) end AS `avg` from `g_stok_akhir` group by `g_stok_akhir`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_pembelian_barang_terakhir;
CREATE VIEW `v_pembelian_barang_terakhir` AS select `bla`.`kd_supplier` AS `kd_supplier`,`dta`.`kd_barang` AS `kd_barang`,`bla`.`tanggal` AS `tanggal`,`dta`.`harga_beli` AS `harga_beli`,`dta`.`kd_satuan` AS `satuan_lama`,`bs`.`jumlah` AS `jumlah`,`dta`.`harga_beli` / `bs`.`jumlah` AS `harga_beli_terakhir`,`st`.`kd_satuan` AS `kd_satuan`,`st`.`nama` AS `satuan` from (((((`t_pembelian_detail` `dta` join `m_barang_satuan` `bs` on(`dta`.`kd_barang` = `bs`.`kd_barang` and `dta`.`kd_satuan` = `bs`.`kd_satuan`)) join `m_barang_satuan` `bs_kecil` on(`dta`.`kd_barang` = `bs_kecil`.`kd_barang`)) join `m_satuan` `st` on(`bs_kecil`.`kd_satuan` = `st`.`kd_satuan`)) join `t_pembelian` `bla` on(`bla`.`no_transaksi` = `dta`.`no_transaksi`)) join (select `dtl`.`kd_barang` AS `kd_barang`,`bl`.`kd_supplier` AS `kd_supplier`,max(`bl`.`no_transaksi`) AS `nomor` from (`t_pembelian_detail` `dtl` join `t_pembelian` `bl` on(`bl`.`no_transaksi` = `dtl`.`no_transaksi`)) where `dtl`.`jenis` = 1 and `dtl`.`harga_beli` > 0 group by `dtl`.`kd_barang`,`bl`.`kd_supplier`) `updt` on(`updt`.`kd_barang` = `dta`.`kd_barang` and `bla`.`no_transaksi` = `updt`.`nomor` and `bla`.`kd_supplier` = `updt`.`kd_supplier`)) where `bs_kecil`.`jumlah` = 1
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_pembelian_order_tmp;
CREATE VIEW `v_spk_pembelian_order_tmp` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,case when (select count(`t_pembelian`.`no_transaksi`) from (`t_pembelian` join `t_pembelian_detail` on(`t_pembelian`.`no_transaksi` = `t_pembelian_detail`.`no_transaksi`)) where `t_pembelian_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) = 0 then 'Baru' else 'Lama' end AS `sts_barang`,ifnull(`vb`.`avg`,0) AS `avg`,ifnull(sum(`g_stok_akhir`.`stok`),0) AS `stok`,ifnull(`vb`.`avg` * (`m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`),0) AS `need`,ifnull(`vb`.`avg` * (`m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`) + ifnull(`ans_item`.`buffer` * (`vb`.`avg` * (`m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`)) / 100,0) - ifnull(sum(`g_stok_akhir`.`stok`),0),0) AS `qty`,`last_price`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `satuan`,`last_price`.`harga_beli_terakhir` AS `harga_beli_terakhir`,0 AS `Diskon`,`m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `Supplier`,`m_supplier_jadwal`.`hari` AS `Kunjungan`,case when `m_supplier_jadwal`.`visit_time` < 7 then `m_supplier_jadwal`.`hari` + `m_supplier_jadwal`.`visit_time` else `m_supplier_jadwal`.`hari` end AS `Kunjungan2` from (((((((((`m_barang_satuan` join `m_barang` on(`m_barang_satuan`.`kd_barang` = `m_barang`.`kd_barang`)) join `v_pembelian_barang_terakhir` `last_price` on(`m_barang`.`kd_barang` = `last_price`.`kd_barang`)) join `m_supplier` on(`m_supplier`.`kd_supplier` = `last_price`.`kd_supplier`)) join `m_supplier_jadwal` on(`m_supplier_jadwal`.`kd_supplier` = `m_supplier`.`kd_supplier`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `g_stok_akhir` on(`m_barang`.`kd_barang` = `g_stok_akhir`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `last_price`.`kd_satuan`)) left join `v_avg_barang_per_periode` `vb` on(`m_barang`.`kd_barang` = `vb`.`kd_barang`)) join `ans_item`) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`jumlah` = 1 and `m_barang_satuan`.`status` <> 0 group by `g_stok_akhir`.`kd_barang`,`m_barang`.`tanggal_daftar`,`m_barang_satuan`.`kd_satuan`,`m_satuan`.`nama`,`last_price`.`kd_supplier`
//xyvdelimiter //
DROP VIEW IF EXISTS mon_g_kas_akhir;
CREATE VIEW `mon_g_kas_akhir` AS select `m_kas`.`kd_kas` AS `kodekas`,`m_kas`.`no_rekening` AS `No. Rekening`,`m_bank`.`nama` AS `Bank`,sum(ifnull(`v_g_kas_histori`.`debet`,0)) - sum(ifnull(`v_g_kas_histori`.`kredit`,0)) AS `Saldo Akhir` from ((`v_g_kas_histori` join `m_kas` on(`v_g_kas_histori`.`kd_kas` = `m_kas`.`kd_kas`)) join `m_bank` on(`m_kas`.`kd_bank` = `m_bank`.`kd_bank`)) group by `m_kas`.`no_rekening`,`m_bank`.`nama` order by `m_kas`.`kd_kas`
//xyvdelimiter //
DROP VIEW IF EXISTS dt_kenaikan_harga_jual_rumak;
CREATE VIEW `dt_kenaikan_harga_jual_rumak` AS select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `item`,`m_barang_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `satuan`,`info_pembelian`.`harga_beli` AS `harga_beli`,`m_barang_satuan`.`margin` AS `margin_tetapan`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli` AS `margin_rupiah`,'30%' AS `kenaikan`,(`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) * 30 / 100 AS `kenaikan_margin`,(`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) * 30 / 100 + (`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) AS `margin_baru`,(`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) * 30 / 100 + `m_barang_satuan`.`harga_jual` + ((`m_barang_satuan`.`harga_jual` - `info_pembelian`.`harga_beli`) * 30 / 100 + `m_barang_satuan`.`harga_jual`) % 100 AS `harga_jual_baru`,(`m_barang_satuan`.`harga_jual` - `info_pembelian`.`last_purchase`) * 30 / 100 + `m_barang_satuan`.`harga_jual` + ((`m_barang_satuan`.`harga_jual` - `info_pembelian`.`last_purchase`) * 30 / 100 + `m_barang_satuan`.`harga_jual`) % 100 AS `harga_jual_barux` from (((`m_barang_satuan` join (select `t_pembelian_detail`.`no_transaksi` AS `no_transaksi`,`t_pembelian_detail`.`kd_barang` AS `kd_barang`,`t_pembelian_detail`.`kd_satuan` AS `kd_satuan`,`t_pembelian_detail`.`harga_beli` AS `harga_beli`,`max_tr`.`last_purchase` AS `last_purchase` from (`t_pembelian_detail` join (select `t_pembelian_detail`.`kd_barang` AS `kd_barang`,`t_pembelian_detail`.`kd_satuan` AS `kd_satuan`,max(`t_pembelian_detail`.`no_transaksi`) AS `last_tr`,`GetHargaBersih`(`GetHargaBersih`(`t_pembelian_detail`.`harga_beli`,`t_pembelian_detail`.`diskon1`,`t_pembelian_detail`.`diskon2`,`t_pembelian_detail`.`diskon3`,`t_pembelian_detail`.`diskon4`,0,0),`t_pembelian`.`diskon1`,`t_pembelian`.`diskon2`,`t_pembelian`.`diskon3`,`t_pembelian`.`diskon4`,`t_pembelian`.`pajak`,`t_pembelian`.`ppnbm`) AS `last_purchase` from (`t_pembelian` join `t_pembelian_detail` on(`t_pembelian`.`no_transaksi` = `t_pembelian_detail`.`no_transaksi`)) group by `t_pembelian_detail`.`kd_barang`,`t_pembelian_detail`.`kd_satuan`) `max_tr` on(`max_tr`.`kd_barang` = `t_pembelian_detail`.`kd_barang` and `max_tr`.`last_tr` = `t_pembelian_detail`.`no_transaksi`))) `info_pembelian` on(`m_barang_satuan`.`kd_barang` = `info_pembelian`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `info_pembelian`.`kd_satuan`)) join `m_barang` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS m_barang_divisi_detail;
CREATE VIEW `m_barang_divisi_detail` AS select `m_barang`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,`m_barang_divisi`.`kd_divisi` AS `Kode Divisi` from (`m_barang` join `m_barang_divisi` on(`m_barang`.`kd_barang` = `m_barang_divisi`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS mon_g_stok_barang_per_divisi;
CREATE VIEW `mon_g_stok_barang_per_divisi` AS select `v_g_barang_histori`.`kd_divisi` AS `Kode Divisi`,`m_divisi`.`nama` AS `Divisi`,`v_g_barang_histori`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,sum(`GetKuantitasSatuanTerkecil`(`v_g_barang_histori`.`kd_barang`,`v_g_barang_histori`.`kd_satuan`) * `v_g_barang_histori`.`Debet`) - sum(`GetKuantitasSatuanTerkecil`(`v_g_barang_histori`.`kd_barang`,`v_g_barang_histori`.`kd_satuan`) * `v_g_barang_histori`.`Kredit`) AS `Stok Akhir`,sum(`v_g_barang_histori`.`Debet` * `m_barang_satuan`.`jumlah` - `v_g_barang_histori`.`Kredit` * `m_barang_satuan`.`jumlah`) AS `stok_Akhir` from (((`v_g_barang_histori` join `m_barang` on(`v_g_barang_histori`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`v_g_barang_histori`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_barang_satuan` on(`v_g_barang_histori`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `v_g_barang_histori`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) group by `v_g_barang_histori`.`kd_divisi`,`v_g_barang_histori`.`kd_barang`,`m_barang`.`nama`,`m_divisi`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS mon_m_divisi;
CREATE VIEW `mon_m_divisi` AS select `m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`kepala_nota` AS `kepala_nota`,`m_divisi`.`keterangan` AS `keterangan`,`m_divisi`.`nama` AS `nama` from `m_divisi` where `m_divisi`.`status` <> 0
//xyvdelimiter //
DROP VIEW IF EXISTS mon_modal_per_barang;
CREATE VIEW `mon_modal_per_barang` AS select `mon_t_penjualan_per_barang_modal2_baru`.`Divisi` AS `Divisi`,`mon_t_penjualan_per_barang_modal2_baru`.`Tanggal` AS `Tanggal`,`mon_t_penjualan_per_barang_modal2_baru`.`Customer` AS `Customer`,`mon_t_penjualan_per_barang_modal2_baru`.`Kategori` AS `Kategori`,`mon_t_penjualan_per_barang_modal2_baru`.`Kode Barang` AS `Kode Barang`,`mon_t_penjualan_per_barang_modal2_baru`.`Barang` AS `Barang`,sum(`mon_t_penjualan_per_barang_modal2_baru`.`Laba`) AS `Laba`,sum(`mon_t_penjualan_per_barang_modal2_baru`.`Total Bersih`) AS `Total Bersih` from `mon_t_penjualan_per_barang_modal2_baru` group by `mon_t_penjualan_per_barang_modal2_baru`.`Divisi`,`mon_t_penjualan_per_barang_modal2_baru`.`Tanggal`,`mon_t_penjualan_per_barang_modal2_baru`.`Customer`,`mon_t_penjualan_per_barang_modal2_baru`.`Kategori`,`mon_t_penjualan_per_barang_modal2_baru`.`Kode Barang`,`mon_t_penjualan_per_barang_modal2_baru`.`Barang`
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_pembelian_detail;
CREATE VIEW `mon_t_pembelian_detail` AS select `beli`.`no_transaksi` AS `No Transaksi`,`beli`.`no_order` AS `No Order`,`beli`.`tanggal` AS `tanggal`,`m_supplier`.`nama` AS `Supplier`,`beli`.`keterangan` AS `Note`,`m_barang`.`nama` AS `Barang`,`dtl`.`qty` AS `Jumlah`,`m_satuan`.`nama` AS `Satuan`,`dtl`.`harga_beli` AS `Harga Beli`,`dtl`.`diskon1` AS `Diskon Item 1`,`dtl`.`diskon2` AS `Diskon Item 2`,`dtl`.`diskon3` AS `Diskon Item 3`,`dtl`.`diskon4` AS `Diskon Item 4`,`beli`.`diskon1` AS `Diskon Total 1`,`beli`.`diskon2` AS `Diskon Total 2`,`beli`.`diskon3` AS `Diskon Total 3`,`beli`.`diskon4` AS `Diskon Total 4`,`beli`.`pajak` AS `pajak`,`beli`.`ppnbm` AS `ppnbm`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_beli`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`beli`.`diskon1`,`beli`.`diskon2`,`beli`.`diskon3`,`beli`.`diskon4`,`beli`.`pajak`,`beli`.`ppnbm`) * `dtl`.`qty` AS `Sub Total` from ((((((((`t_pembelian` `beli` join `m_divisi` on(`beli`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_kas` on(`beli`.`kd_kas` = `m_kas`.`kd_kas`)) join `m_bank` on(`m_kas`.`kd_bank` = `m_bank`.`kd_bank`)) join `t_pembelian_detail` `dtl` on(`beli`.`no_transaksi` = `dtl`.`no_transaksi`)) join `m_userx` on(`beli`.`kd_user` = `m_userx`.`kd_user`)) join `m_barang` on(`dtl`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_satuan` on(`dtl`.`kd_satuan` = `m_satuan`.`kd_satuan`)) join `m_supplier` on(`beli`.`kd_supplier` = `m_supplier`.`kd_supplier`))
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_penjualan_per_barang;
CREATE VIEW `mon_t_penjualan_per_barang` AS select `m_divisi`.`nama` AS `Divisi`,cast(`jual`.`tanggal` as date) AS `Tanggal`,`m_kategori`.`nama` AS `Kategori`,`dtl`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,avg(`tmp`.`harga`) AS `Modal`,sum(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty`) AS `Total Bersih`,avg(`tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) AS `Total Modal`,sum(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) AS `Laba`,sum((`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) / (case when `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` = 0 then 1 else `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` end) * 100) AS `Margin`,`m_userx`.`nama` AS `Petugas` from (((((((((`m_barang` join `t_penjualan` `jual`) join `t_penjualan_detail` `dtl` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi` and `m_barang`.`kd_barang` = `dtl`.`kd_barang`)) join `m_customer` on(`jual`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `m_userx` on(`jual`.`kd_user` = `m_userx`.`kd_user`)) join `m_barang_satuan` on(`dtl`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `dtl`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_barang_satuan` `bst` on(`bst`.`kd_barang` = `dtl`.`kd_barang` and `bst`.`kd_satuan` = `dtl`.`kd_satuan`)) join (select `dtl`.`kd_barang` AS `kd_barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_beli`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`bl`.`diskon1`,`bl`.`diskon2`,`bl`.`diskon3`,`bl`.`diskon4`,`bl`.`pajak`,`bl`.`ppnbm`) / `brg`.`jumlah` AS `harga` from (((`t_pembelian_detail` `dtl` join (select `dt`.`kd_barang` AS `kd_barang`,max(`dt`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` `dt` where `dt`.`harga_beli` > 0 group by `dt`.`kd_barang`) `akhir` on(`akhir`.`kd_barang` = `dtl`.`kd_barang` and `dtl`.`no_transaksi` = `akhir`.`nomor`)) join `t_pembelian` `bl` on(`dtl`.`no_transaksi` = `bl`.`no_transaksi`)) join `m_barang_satuan` `brg` on(`brg`.`kd_barang` = `dtl`.`kd_barang`))) `tmp` on(`tmp`.`kd_barang` = `dtl`.`kd_barang`)) where cast(`jual`.`tanggal` as date) = cast(current_timestamp() as date) group by `dtl`.`kd_barang`,`m_divisi`.`nama`,cast(`jual`.`tanggal` as date) order by `m_barang`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_penjualan_per_barang_modal2;
CREATE VIEW `mon_t_penjualan_per_barang_modal2` AS select `dtl`.`no_transaksi` AS `No. Transaksi`,`m_divisi`.`nama` AS `Divisi`,`GetFormatTanggal`(`jual`.`tanggal`) AS `Tanggal`,`m_customer`.`nama` AS `Customer`,`m_kategori`.`nama` AS `Kategori`,`dtl`.`kd_barang` AS `Kode Barang`,`m_barang`.`nama` AS `Barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) / `bst`.`jumlah` AS `Harga`,`tmp`.`harga` AS `Modal`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` AS `Total Bersih`,`tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` AS `Total Modal`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah` AS `Laba`,(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty` - `tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) / (`tmp`.`harga` * `dtl`.`qty` * `bst`.`jumlah`) * 100 AS `Margin`,`m_userx`.`nama` AS `Petugas` from (((((((((`m_barang` join `t_penjualan_detail` `dtl` on(`m_barang`.`kd_barang` = `dtl`.`kd_barang`)) join `t_penjualan` `jual` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi`)) join `m_customer` on(`jual`.`kd_customer` = `m_customer`.`kd_customer`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `m_userx` on(`jual`.`kd_user` = `m_userx`.`kd_user`)) join `m_barang_satuan` on(`dtl`.`kd_barang` = `m_barang_satuan`.`kd_barang` and `dtl`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_barang_satuan` `bst` on(`bst`.`kd_barang` = `dtl`.`kd_barang` and `bst`.`kd_satuan` = `dtl`.`kd_satuan`)) left join (select `dtl`.`kd_barang` AS `kd_barang`,`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_beli`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`bl`.`diskon1`,`bl`.`diskon2`,`bl`.`diskon3`,`bl`.`diskon4`,`bl`.`pajak`,`bl`.`ppnbm`) / `brg`.`jumlah` AS `harga` from (((((select `dt`.`kd_barang` AS `kd_barang`,max(`dt`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` `dt` where `dt`.`harga_beli` > 0 group by `dt`.`kd_barang`)) `akhir` join `t_pembelian_detail` `dtl` on(`akhir`.`kd_barang` = `dtl`.`kd_barang` and `dtl`.`no_transaksi` = `akhir`.`nomor`)) join `m_barang_satuan` `brg` on(`brg`.`kd_barang` = `dtl`.`kd_barang` and `brg`.`kd_satuan` = `dtl`.`kd_satuan`)) join `t_pembelian` `bl` on(`dtl`.`no_transaksi` = `bl`.`no_transaksi`)) where `dtl`.`harga_beli` > 0) `tmp` on(`dtl`.`kd_barang` = `tmp`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_master_andro;
CREATE VIEW `v_master_andro` AS select `m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama divisi`,`m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`m_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,ifnull(`m_barang_satuan`.`harga_jual` - `m_barang_divisi_diskon`.`diskon1` - `m_barang_divisi_diskon`.`diskon2` - `m_barang_divisi_diskon`.`diskon3` - `m_barang_divisi_diskon`.`diskon4`,`m_barang_satuan`.`harga_jual`) AS `harga_nett`,ifnull(`m_barang_divisi_diskon`.`diskon1` + `m_barang_divisi_diskon`.`diskon2` + `m_barang_divisi_diskon`.`diskon3` + `m_barang_divisi_diskon`.`diskon4`,0) AS `diskon`,`m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_kategori`.`status` AS `status`,`m_barang`.`date_modif` AS `barang_modif`,`m_barang_satuan`.`date_modif` AS `barang_satuan_modif`,`m_satuan`.`date_modif` AS `satuan_modif`,`m_barang_divisi`.`date_modif` AS `barang_divisi_modif`,`m_divisi`.`date_modif` AS `divisi_modif`,`m_kategori`.`date_modif` AS `kategori_modif`,`m_barang_divisi_diskon`.`date_modif` AS `barang_diskon_modif` from ((((((`m_barang` join `m_barang_satuan` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`)) join `m_barang_divisi` on(`m_barang_divisi`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`m_divisi`.`kd_divisi` = `m_barang_divisi`.`kd_divisi`)) join `m_kategori` on(`m_kategori`.`kd_kategori` = `m_barang`.`kd_kategori`)) left join `m_barang_divisi_diskon` on(`m_barang_divisi_diskon`.`kd_barang` = `m_barang`.`kd_barang` and `m_barang_divisi_diskon`.`kd_divisi` = `m_divisi`.`kd_divisi` and `m_barang_divisi_diskon`.`kd_satuan` = `m_satuan`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_qty_max_penjualan;
CREATE VIEW `v_qty_max_penjualan` AS select `pd`.`kd_barang` AS `kd_barang`,`br`.`nama` AS `barang`,sum(`pd`.`qty` * `bs`.`jumlah`) / `bsmax`.`jumlah` AS `qty_max`,`bsmax`.`nama` AS `satuan_max` from ((((`t_penjualan` `pb` join `t_penjualan_detail` `pd` on(`pb`.`no_transaksi` = `pd`.`no_transaksi`)) join `m_barang_satuan` `bs` on(`pd`.`kd_barang` = `bs`.`kd_barang` and `pd`.`kd_satuan` = `bs`.`kd_satuan`)) join `m_barang` `br` on(`pd`.`kd_barang` = `br`.`kd_barang`)) join (select `bsmax`.`kd_barang` AS `kd_barang`,max(`bsmax`.`jumlah`) AS `jumlah`,`stn`.`nama` AS `nama` from (`m_barang_satuan` `bsmax` join `m_satuan` `stn` on(`bsmax`.`kd_satuan` = `stn`.`kd_satuan`)) where `bsmax`.`status` <> 0 group by `bsmax`.`kd_barang`) `bsmax` on(`pd`.`kd_barang` = `bsmax`.`kd_barang`)) group by `pd`.`kd_barang`,`bsmax`.`jumlah`,`br`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS mon_t_penjualan_per_barang_modal2_hari_ini;
CREATE VIEW `mon_t_penjualan_per_barang_modal2_hari_ini` AS select `mon_t_penjualan_per_barang_modal2_baru`.`No. Transaksi` AS `No. Transaksi`,`mon_t_penjualan_per_barang_modal2_baru`.`Divisi` AS `Divisi`,`mon_t_penjualan_per_barang_modal2_baru`.`Tanggal` AS `Tanggal`,`mon_t_penjualan_per_barang_modal2_baru`.`Customer` AS `Customer`,`mon_t_penjualan_per_barang_modal2_baru`.`Kategori` AS `Kategori`,`mon_t_penjualan_per_barang_modal2_baru`.`Kode Barang` AS `Kode Barang`,`mon_t_penjualan_per_barang_modal2_baru`.`Barang` AS `Barang`,`mon_t_penjualan_per_barang_modal2_baru`.`Harga` AS `Harga`,`mon_t_penjualan_per_barang_modal2_baru`.`Modal` AS `Modal`,`mon_t_penjualan_per_barang_modal2_baru`.`Total Bersih` AS `Total Bersih`,`mon_t_penjualan_per_barang_modal2_baru`.`Total Modal` AS `Total Modal`,`mon_t_penjualan_per_barang_modal2_baru`.`Laba` AS `Laba`,`mon_t_penjualan_per_barang_modal2_baru`.`Margin` AS `Margin`,`mon_t_penjualan_per_barang_modal2_baru`.`Petugas` AS `Petugas` from `mon_t_penjualan_per_barang_modal2_baru` where cast(`mon_t_penjualan_per_barang_modal2_baru`.`Tanggal` as date) = cast(current_timestamp() as date)
//xyvdelimiter //
DROP VIEW IF EXISTS tes_no;
CREATE VIEW `tes_no` AS select `bardiv`.`kd_divisi` AS `kd_divisi`,`bardiv`.`kd_barang` AS `kd_barang`,sum(`det`.`qty`) AS `qty`,`bardiv`.`stok_awal` AS `stok_awal` from ((`m_barang_divisi` `bardiv` left join `t_penjualan_detail` `det` on(`bardiv`.`kd_barang` = `det`.`kd_barang`)) join `t_penjualan` `jual` on(`det`.`no_transaksi` = `jual`.`no_transaksi`)) group by `bardiv`.`kd_divisi`,`bardiv`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_andro_harga_jual_percustomer;
CREATE VIEW `v_andro_harga_jual_percustomer` AS select `v_net`.`kd_divisi` AS `kd_divisi`,`v_net`.`nama divisi` AS `nama divisi`,`v_net`.`kd_barang` AS `kd_barang`,`v_net`.`nama` AS `nama`,`v_net`.`kd_satuan` AS `kd_satuan`,`v_net`.`satuan` AS `satuan`,`v_net`.`jumlah` AS `jumlah`,`v_net`.`harga_nett` AS `harga_nett`,`v_net`.`diskon` AS `diskon`,`v_net`.`harga_jual` AS `harga_jual`,`a`.`harga_jual` AS `harga_terakhir`,`a`.`tanggal` AS `tanggal_terakhir`,`a`.`kd_customer` AS `kd_customer` from ((((select `t_penjualan_detail`.`kd_barang` AS `kd_barang`,`t_penjualan`.`kd_customer` AS `kd_customer`,`t_penjualan_detail`.`kd_satuan` AS `kd_satuan`,`t_penjualan_detail`.`harga_jual` AS `harga_jual`,`t_penjualan_detail`.`no_transaksi` AS `no_transaksi`,`t_penjualan`.`kd_divisi` AS `kd_divisi`,`t_penjualan`.`tanggal` AS `tanggal` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)))) `a` join (select `t_penjualan_detail`.`kd_barang` AS `kd_barang`,`t_penjualan`.`kd_customer` AS `kd_customer`,`t_penjualan`.`kd_divisi` AS `kd_divisi`,`t_penjualan_detail`.`kd_satuan` AS `kd_satuan`,max(`t_penjualan_detail`.`no_transaksi`) AS `nomor` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) group by `t_penjualan_detail`.`kd_barang`,`t_penjualan`.`kd_customer`,`t_penjualan_detail`.`kd_satuan`,`t_penjualan`.`kd_divisi`) `b` on(`a`.`kd_barang` = `b`.`kd_barang` and `a`.`kd_customer` = `b`.`kd_customer` and `a`.`no_transaksi` = `b`.`nomor` and `a`.`kd_satuan` = `b`.`kd_satuan` and `a`.`kd_divisi` = `b`.`kd_divisi`)) left join `v_master_andro` `v_net` on(`v_net`.`kd_barang` = `b`.`kd_barang` and `v_net`.`kd_satuan` = `b`.`kd_satuan` and `v_net`.`kd_divisi` = `b`.`kd_divisi`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_average_harga_barang_per_hari_ini;
CREATE VIEW `v_average_harga_barang_per_hari_ini` AS select `v_for_average_harga_barang`.`kd_barang` AS `kd_barang`,ifnull(sum(`v_for_average_harga_barang`.`qty` * `v_for_average_harga_barang`.`harga`),0) / (case when ifnull(sum(`v_for_average_harga_barang`.`qty`),0) = 0 then 1 else ifnull(sum(`v_for_average_harga_barang`.`qty`),0) end) AS `harga_average`,0 AS `harga_akhir` from `v_for_average_harga_barang` where `v_for_average_harga_barang`.`qty` > 0 and cast(`v_for_average_harga_barang`.`tanggal` as date) between `GetTanggalTerakhirTutupBuku`() and cast(current_timestamp() as date) group by `v_for_average_harga_barang`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_barang_for_display_contract;
CREATE VIEW `v_barang_for_display_contract` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`m_kategori`.`nama` AS `kategori`,group_concat(`m_satuan`.`nama` separator ',') AS `satuan`,group_concat(`m_satuan`.`kd_satuan` separator ',') AS `kd_satuan`,`m_barang_satuan`.`status` AS `status` from (((`m_barang` join `m_barang_satuan` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`status` <> 0 group by `m_barang_satuan`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_barang_for_order_penjualan;
CREATE VIEW `v_barang_for_order_penjualan` AS select `m_barang`.`nama` AS `nama`,`m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`kd_model` AS `kd_model`,`m_barang`.`kd_warna` AS `kd_warna`,`m_barang`.`kd_kategori` AS `kd_kategori`,`m_barang`.`kd_merk` AS `kd_merk`,`m_barang`.`ukuran` AS `ukuran`,`m_barang`.`keterangan` AS `keterangan_b`,`m_kategori`.`keterangan` AS `keterangan_k`,`m_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,round(`m_barang_satuan`.`harga_jual`,0) AS `harga_jual`,`m_barang_gambar`.`gambar` AS `gambar` from ((((`m_barang` join `m_barang_satuan` on(`m_barang_satuan`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_kategori` on(`m_kategori`.`kd_kategori` = `m_barang`.`kd_kategori`)) left join `m_barang_gambar` on(`m_barang_gambar`.`kd_barang` = `m_barang`.`kd_barang`)) where `m_barang`.`status` = 1 and `m_barang_satuan`.`status` = 1 order by `m_barang`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS v_barang_satuan;
CREATE VIEW `v_barang_satuan` AS select `m_barang_satuan`.`kd_barang` AS `kd_barang`,`m_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `nama` from (`m_barang_satuan` join `m_satuan` on(`m_barang_satuan`.`kd_satuan` = `m_satuan`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_det_fmi;
CREATE VIEW `v_det_fmi` AS select `x_fmi_smi`.`nomor` AS `nomor`,`x_fmi_smi`.`barang` AS `barang`,`x_fmi_smi`.`divisi` AS `divisi`,`x_fmi_smi`.`kode` AS `kode`,`x_fmi_smi`.`total` AS `total`,`x_fmi_smi`.`FMI` AS `FMI`,`x_fmi_smi`.`SMI` AS `SMI`,`x_fmi_smi`.`periode` AS `periode`,`x_fmi_smi`.`awal` AS `awal`,`x_fmi_smi`.`akhir` AS `akhir`,`x_max`.`qty_max` AS `qty`,`x_max`.`satuan_max` AS `satuan_max` from (`x_fmi_smi` join `v_qty_max_penjualan` `x_max` on(`x_max`.`kd_barang` = `x_fmi_smi`.`kode`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_divisi_barang;
CREATE VIEW `v_divisi_barang` AS select `m_barang_divisi`.`kd_divisi` AS `kd_divisi`,`m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama` from (`m_barang_divisi` join `m_barang` on(`m_barang_divisi`.`kd_divisi` = `m_barang`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_dt_hutang_pembelian;
CREATE VIEW `v_dt_hutang_pembelian` AS select `v_hutang_pembelian`.`no_transaksi` AS `no_transaksi`,`v_hutang_pembelian`.`tanggal_tr` AS `tanggal_tr`,`t_pembelian`.`kd_supplier` AS `kd_supplier`,`v_hutang_pembelian`.`kd_divisi` AS `kd_divisi`,`v_hutang_pembelian`.`status` AS `status`,`v_hutang_pembelian`.`total_bersih` AS `total_bersih`,`v_hutang_pembelian`.`total_cicilan` AS `total_cicilan`,`v_hutang_pembelian`.`sisa_cicilan` AS `sisa_cicilan`,`v_hutang_pembelian`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo` from (`v_hutang_pembelian` join `t_pembelian` on(`t_pembelian`.`no_transaksi` = `v_hutang_pembelian`.`no_transaksi`)) where `v_hutang_pembelian`.`sisa_cicilan` > 1
//xyvdelimiter //
DROP VIEW IF EXISTS v_for_mutasi_item;
CREATE VIEW `v_for_mutasi_item` AS select `prediksi`.`no_order` AS `no_order`,`prediksi`.`kd_barang` AS `kd_barang`,`prediksi`.`kd_satuan` AS `kd_satuan`,`prediksi`.`qty_r` AS `qty_r`,`prediksi`.`qty` AS `qty`,`prediksi`.`need` AS `need`,`prediksi`.`Barang` AS `Barang`,`prediksi`.`Satuan` AS `Satuan`,`prediksi`.`Stok Sumber` AS `Stok Sumber`,`prediksi`.`Stok Tujuan` AS `Stok Tujuan`,`prediksi`.`kd_divisi_asal` AS `kd_divisi_asal`,`prediksi`.`kd_divisi_tujuan` AS `kd_divisi_tujuan`,`req`.`qty` AS `qty_req` from (((select `a`.`no_order` AS `no_order`,`a`.`kd_barang` AS `kd_barang`,`a`.`kd_satuan` AS `kd_satuan`,case when `a`.`need` - `c`.`stok` < 0 then 0 else `a`.`need` - `c`.`stok` end AS `qty_r`,`a`.`qty` AS `qty`,`a`.`need` AS `need`,`m_barang`.`nama` AS `Barang`,`m_satuan`.`nama` AS `Satuan`,`d`.`stok` AS `Stok Sumber`,`c`.`stok` AS `Stok Tujuan`,`b`.`kd_divisi_asal` AS `kd_divisi_asal`,`b`.`kd_divisi_tujuan` AS `kd_divisi_tujuan` from (((((`x_sp_t_mutasi_stok_detail` `a` join `x_sp_t_mutasi_stok` `b` on(`a`.`no_order` = `b`.`no_order`)) join `m_barang` on(`m_barang`.`kd_barang` = `a`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `a`.`kd_satuan`)) join `g_stok_akhir` `c` on(`c`.`kd_barang` = `a`.`kd_barang` and `c`.`kd_divisi` = `b`.`kd_divisi_tujuan`)) join `g_stok_akhir` `d` on(`d`.`kd_barang` = `a`.`kd_barang` and `d`.`kd_divisi` = `b`.`kd_divisi_asal`)) where `b`.`no_transaksi_realisasi` = '-')) `prediksi` left join (select `x_sp_t_mutasi_stok_request`.`id` AS `id`,`x_sp_t_mutasi_stok_request`.`kd_divisi_asal_request` AS `kd_divisi_asal_request`,`x_sp_t_mutasi_stok_request`.`kd_divisi_tujuan_request` AS `kd_divisi_tujuan_request`,`x_sp_t_mutasi_stok_request`.`kd_barang` AS `kd_barang`,`x_sp_t_mutasi_stok_request`.`kd_satuan` AS `kd_satuan`,`x_sp_t_mutasi_stok_request`.`qty` AS `qty`,`x_sp_t_mutasi_stok_request`.`tanggal` AS `tanggal`,`x_sp_t_mutasi_stok_request`.`no_order_realisasi` AS `no_order_realisasi` from `x_sp_t_mutasi_stok_request` where `x_sp_t_mutasi_stok_request`.`no_order_realisasi` = '-') `req` on(`req`.`kd_barang` = `prediksi`.`kd_barang` and `req`.`kd_divisi_asal_request` = `prediksi`.`kd_divisi_tujuan` and `req`.`kd_divisi_tujuan_request` = `prediksi`.`kd_divisi_asal`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_for_warning_alert;
CREATE VIEW `v_for_warning_alert` AS select `m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama divisi`,`bs`.`kd_satuan` AS `kd_satuan`,`bs`.`jumlah` AS `jumlah`,`bs`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`m_satuan`.`nama` AS `satuan`,ifnull(`bs`.`harga_jual` - `mdis`.`diskon1` - `mdis`.`diskon2` - `mdis`.`diskon3` - `mdis`.`diskon4`,`bs`.`harga_jual`) AS `harga_nett`,ifnull(`mdis`.`diskon1` + `mdis`.`diskon2` + `mdis`.`diskon3` + `mdis`.`diskon4`,0) AS `diskon`,`bs`.`harga_jual` AS `harga_jual`,`GetHargaBersih`(`tm_brg`.`Modal` * `bs`.`jumlah`,`t_pembelian`.`diskon1`,`t_pembelian`.`diskon2`,`t_pembelian`.`diskon3`,`t_pembelian`.`diskon4`,`t_pembelian`.`pajak`,0) AS `modal`,`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah` AS `Laba`,(`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah`) / (`tm_brg`.`Modal` * `bs`.`jumlah`) * 100 AS `Margin`,`bs`.`margin` AS `margin_tetapan` from (((((((`m_barang_satuan` `bs` join (select `pd`.`kd_barang` AS `kd_barang`,`GetHargaBersih`(`pd`.`harga_beli` / `mbs`.`jumlah`,`pd`.`diskon1`,`pd`.`diskon2`,`pd`.`diskon3`,`pd`.`diskon4`,0,0) AS `Modal`,`pd`.`no_transaksi` AS `no_tr` from ((((select `t_pembelian_detail`.`kd_barang` AS `kd_barang`,max(`t_pembelian_detail`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` group by `t_pembelian_detail`.`kd_barang`)) `tm` left join `t_pembelian_detail` `pd` on(`pd`.`kd_barang` = `tm`.`kd_barang` and `pd`.`no_transaksi` = `tm`.`nomor`)) join `m_barang_satuan` `mbs` on(`pd`.`kd_satuan` = `mbs`.`kd_satuan` and `pd`.`kd_barang` = `mbs`.`kd_barang`))) `tm_brg` on(`bs`.`kd_barang` = `tm_brg`.`kd_barang`)) join `m_barang` on(`m_barang`.`kd_barang` = `bs`.`kd_barang`)) join `m_barang_divisi` on(`m_barang_divisi`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`m_barang_divisi`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `bs`.`kd_satuan`)) join `t_pembelian` on(`tm_brg`.`no_tr` = `t_pembelian`.`no_transaksi`)) left join `m_barang_divisi_diskon` `mdis` on(`mdis`.`kd_barang` = `m_barang`.`kd_barang` and `mdis`.`kd_divisi` = `m_barang_divisi`.`kd_divisi` and `mdis`.`kd_satuan` = `bs`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_for_warning_alert_coba;
CREATE VIEW `v_for_warning_alert_coba` AS select `m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama divisi`,`bs`.`kd_satuan` AS `kd_satuan`,`bs`.`jumlah` AS `jumlah`,`bs`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,ifnull(`bs`.`harga_jual` - `mdis`.`diskon1` - `mdis`.`diskon2` - `mdis`.`diskon3` - `mdis`.`diskon4`,`bs`.`harga_jual`) AS `harga_nett`,ifnull(`mdis`.`diskon1` + `mdis`.`diskon2` + `mdis`.`diskon3` + `mdis`.`diskon4`,0) AS `Diskon`,`bs`.`harga_jual` AS `harga_jual`,`tm_brg`.`Modal` * `bs`.`jumlah` AS `modal`,`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah` AS `Laba`,(`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah`) / (`tm_brg`.`Modal` * `bs`.`jumlah`) * 100 AS `Margin`,`bs`.`margin` AS `margin_tetapan` from (((((`m_barang_satuan` `bs` join (select `pd`.`kd_barang` AS `kd_barang`,`pd`.`harga_beli` / `bs`.`jumlah` AS `Modal` from ((((select `t_pembelian_detail`.`kd_barang` AS `kd_barang`,max(`t_pembelian_detail`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` group by `t_pembelian_detail`.`kd_barang`)) `tm` left join `t_pembelian_detail` `pd` on(`pd`.`kd_barang` = `tm`.`kd_barang` and `pd`.`no_transaksi` = `tm`.`nomor`)) join `m_barang_satuan` `bs` on(`pd`.`kd_satuan` = `bs`.`kd_satuan` and `pd`.`kd_barang` = `bs`.`kd_barang`))) `tm_brg` on(`bs`.`kd_barang` = `tm_brg`.`kd_barang`)) join `m_barang` on(`m_barang`.`kd_barang` = `bs`.`kd_barang`)) join `m_barang_divisi` on(`m_barang_divisi`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`m_barang_divisi`.`kd_divisi` = `m_divisi`.`kd_divisi`)) left join `m_barang_divisi_diskon` `mdis` on(`mdis`.`kd_barang` = `m_barang`.`kd_barang` and `mdis`.`kd_divisi` = `m_barang_divisi`.`kd_divisi` and `mdis`.`kd_satuan` = `bs`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_harga_nett;
CREATE VIEW `v_harga_nett` AS select `mdiv`.`kd_divisi` AS `kd_divisi`,`b`.`kd_barang` AS `kd_barang`,`s`.`kd_satuan` AS `kd_satuan`,`bsat`.`harga_jual` AS `harga_jual`,`b`.`nama` AS `nama barang`,ifnull(`bsat`.`harga_jual` - `bdis`.`diskon1` - `bdis`.`diskon2` - `bdis`.`diskon3` - `bdis`.`diskon4`,`bsat`.`harga_jual`) AS `harga_nett`,`bsat`.`margin` AS `margin`,`s`.`nama` AS `satuan`,`mdiv`.`nama` AS `nama divisi` from (((((`m_barang_divisi` `bdiv` join `m_barang_satuan` `bsat` on(`bdiv`.`kd_barang` = `bsat`.`kd_barang`)) left join `m_barang_divisi_diskon` `bdis` on(`bdis`.`kd_barang` = `bsat`.`kd_barang` and `bdis`.`kd_satuan` = `bsat`.`kd_satuan`)) join `m_barang` `b` on(`b`.`kd_barang` = `bsat`.`kd_barang`)) join `m_divisi` `mdiv` on(`mdiv`.`kd_divisi` = `bdiv`.`kd_divisi`)) join `m_satuan` `s` on(`s`.`kd_satuan` = `bsat`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_harga_nett_perdivisi;
CREATE VIEW `v_harga_nett_perdivisi` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `Barang`,`m_satuan`.`kd_satuan` AS `kd_satuan`,`m_satuan`.`nama` AS `Satuan`,`m_barang_satuan`.`jumlah` AS `jumlah`,`m_barang_satuan`.`harga_jual` - ifnull(`m_barang_divisi_diskon`.`diskon1`,0) - ifnull(`m_barang_divisi_diskon`.`diskon2`,0) - ifnull(`m_barang_divisi_diskon`.`diskon3`,0) - ifnull(`m_barang_divisi_diskon`.`diskon4`,0) AS `harga_jual`,`m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `Divisi` from (((((`m_barang` join `m_barang_satuan` on(`m_barang`.`kd_barang` = `m_barang_satuan`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_barang_divisi` on(`m_barang_divisi`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_divisi` on(`m_divisi`.`kd_divisi` = `m_barang_divisi`.`kd_divisi`)) left join `m_barang_divisi_diskon` on(`m_barang_divisi_diskon`.`kd_barang` = `m_barang`.`kd_barang` and `m_barang_divisi_diskon`.`kd_divisi` = `m_divisi`.`kd_divisi`)) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`status` <> 0 order by `m_barang`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS v_harga_perbarang_div;
CREATE VIEW `v_harga_perbarang_div` AS select `m_barang_divisi`.`kd_barang` AS `kd_barang`,`GetTanggalTerakhirTutupBuku`() AS `tanggal`,'STOK AWAL' AS `transaksi`,ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) AS `qty`,ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal` * `m_barang_divisi`.`harga_beli_awal`,0)),0) / (case when ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) = 0 then 1 else ifnull(sum(ifnull(`m_barang_divisi`.`stok_awal`,0)),0) end) AS `harga` from `m_barang_divisi` group by `m_barang_divisi`.`kd_barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_homepage_hm;
CREATE VIEW `v_homepage_hm` AS select `kategori`.`kode` AS `kode`,`kategori`.`nama` AS `nama`,`kategori`.`type` AS `type`,`kategori`.`keterangan` AS `keterangan`,`icon`.`file_name` AS `file_name`,`icon`.`banner_file_name` AS `banner_file_name`,`icon`.`banner_file_name_web` AS `banner_file_name_web` from (((select `m_kategori`.`kd_kategori` AS `kode`,`m_kategori`.`nama` AS `nama`,'k' AS `type`,`m_kategori`.`keterangan` AS `keterangan` from `m_kategori` where `m_kategori`.`keterangan` like '%*%')) `kategori` left join (select `m_icon`.`kode` AS `kode`,`m_icon`.`file_name` AS `file_name`,`m_icon`.`banner_file_name` AS `banner_file_name`,`m_icon`.`banner_file_name_web` AS `banner_file_name_web` from `m_icon`) `icon` on(`icon`.`kode` = `kategori`.`kode`)) union select `m_model`.`kd_model` AS `kd_model`,`m_model`.`nama` AS `nama`,'m' AS `m`,'NONE' AS `keterangan`,`m_icon`.`file_name` AS `file_name`,`m_icon`.`banner_file_name` AS `banner_file_name`,`m_icon`.`banner_file_name_web` AS `banner_file_name_web` from (`m_model` left join `m_icon` on(`m_icon`.`kode` = `m_model`.`kd_model`)) order by `keterangan`,`kode`
//xyvdelimiter //
DROP VIEW IF EXISTS v_hutang_pembelian2;
CREATE VIEW `v_hutang_pembelian2` AS select `pembelian`.`no_transaksi` AS `no_transaksi`,`pembelian`.`tanggal_tr` AS `tanggal_tr`,`pembelian`.`kd_divisi` AS `kd_divisi`,`pembelian`.`status` AS `status`,`pembelian`.`total_bersih` AS `total_bersih`,ifnull(`cicilan`.`nominal`,0) AS `total_cicilan`,case when `pembelian`.`total_bersih` - ifnull(`cicilan`.`nominal`,0) < 1 then 0 else `pembelian`.`total_bersih` - ifnull(`cicilan`.`nominal`,0) end AS `sisa_cicilan`,`pembelian`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,`pembelian`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo` from ((((select `t_pembelian`.`no_transaksi` AS `no_transaksi`,`t_pembelian`.`kd_divisi` AS `kd_divisi`,max(`t_pembelian`.`tanggal`) AS `tanggal_tr`,max(`t_pembelian`.`kd_divisi`) AS `max(kd_divisi)`,`t_pembelian`.`status` AS `status`,`t_pembelian`.`kd_supplier` AS `kd_supplier`,max(`t_pembelian`.`tanggal_jatuh_tempo`) AS `tanggal_jatuh_tempo`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_pembelian_detail`.`harga_beli`,`t_pembelian_detail`.`diskon1`,`t_pembelian_detail`.`diskon2`,`t_pembelian_detail`.`diskon3`,`t_pembelian_detail`.`diskon4`,0,0) * `t_pembelian_detail`.`qty`,`t_pembelian`.`diskon1`,`t_pembelian`.`diskon2`,`t_pembelian`.`diskon3`,`t_pembelian`.`diskon4`,`t_pembelian`.`pajak`,`t_pembelian`.`ppnbm`)) AS `total_bersih` from (`t_pembelian` join `t_pembelian_detail` on(`t_pembelian`.`no_transaksi` = `t_pembelian_detail`.`no_transaksi`)) where `t_pembelian`.`status` = 0 group by `t_pembelian_detail`.`no_transaksi`,`t_pembelian`.`kd_supplier`,`t_pembelian`.`kd_divisi`)) `pembelian` left join (select sum(`t_hutang_cicilan`.`nominal`) AS `nominal`,`t_hutang_cicilan`.`no_transaksi` AS `no_transaksi` from `t_hutang_cicilan` group by `t_hutang_cicilan`.`no_transaksi`) `cicilan` on(`cicilan`.`no_transaksi` = `pembelian`.`no_transaksi`)) join `m_supplier` on(`m_supplier`.`kd_supplier` = `pembelian`.`kd_supplier`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_kontrak_for_customer;
CREATE VIEW `v_kontrak_for_customer` AS select `supplier_data`.`kd_supplier` AS `kd_supplier`,`supplier_data`.`nama` AS `nama`,`supplier_data`.`alamat` AS `alamat`,`supplier_data`.`telepon` AS `telepon`,`supplier_data`.`fax` AS `fax`,`supplier_data`.`kontak` AS `kontak`,`supplier_data`.`hp` AS `hp`,`supplier_data`.`email` AS `email`,`supplier_data`.`id` AS `id`,`supplier_data`.`company_id` AS `company_id`,`supplier_data`.`db_name` AS `db_name`,`supplier_data`.`status` AS `status`,`supplier_data`.`kontrak_id` AS `kontrak_id` from (select `supplier`.`kd_supplier` AS `kd_supplier`,`supplier`.`nama` AS `nama`,`supplier`.`alamat` AS `alamat`,`supplier`.`telepon` AS `telepon`,`supplier`.`fax` AS `fax`,`supplier`.`kontak` AS `kontak`,`supplier`.`hp` AS `hp`,`supplier`.`email` AS `email`,`supplier`.`id` AS `id`,`supplier`.`company_id` AS `company_id`,`supplier`.`db_name` AS `db_name`,`supplier`.`status` AS `status`,`supplier`.`kontrak_id` AS `kontrak_id` from (select `m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,`m_supplier`.`alamat` AS `alamat`,`m_supplier`.`telepon` AS `telepon`,`m_supplier`.`fax` AS `fax`,`m_supplier`.`kontak` AS `kontak`,`m_supplier`.`hp` AS `hp`,`m_supplier`.`email` AS `email`,`mp_company`.`id` AS `id`,`mp_company`.`company_id` AS `company_id`,`mp_company`.`db_name` AS `db_name`,ifnull(`m_supplier_config`.`status`,0) AS `status`,ifnull(`m_supplier_config`.`kontrak_id`,-1) AS `kontrak_id` from ((`misterkong_mp`.`m_user_company` `mp_company` join `m_supplier` on(`m_supplier`.`email` = `mp_company`.`email_usaha`)) left join `m_supplier_config` on(`m_supplier_config`.`kd_supplier` = `m_supplier`.`kd_supplier`)) union all select `m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,`m_supplier`.`alamat` AS `alamat`,`m_supplier`.`telepon` AS `telepon`,`m_supplier`.`fax` AS `fax`,`m_supplier`.`kontak` AS `kontak`,`m_supplier`.`hp` AS `hp`,`m_supplier`.`email` AS `email`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none` from `m_supplier` group by `m_supplier`.`kd_supplier`) `supplier` group by `supplier`.`kd_supplier`) `supplier_data` order by `supplier_data`.`status`,`supplier_data`.`id` desc,`supplier_data`.`kontrak_id` desc
//xyvdelimiter //
DROP VIEW IF EXISTS v_kontrak_for_supplier;
CREATE VIEW `v_kontrak_for_supplier` AS select `customer_data`.`kd_customer` AS `kd_customer`,`customer_data`.`nama` AS `nama`,`customer_data`.`alamat` AS `alamat`,`customer_data`.`telepon` AS `telepon`,`customer_data`.`fax` AS `fax`,`customer_data`.`kontak` AS `kontak`,`customer_data`.`hp` AS `hp`,`customer_data`.`email` AS `email`,`customer_data`.`id` AS `id`,`customer_data`.`company_id` AS `company_id`,`customer_data`.`db_name` AS `db_name`,`customer_data`.`status` AS `status`,`customer_data`.`kontrak_id` AS `kontrak_id`,`customer_data`.`c_config_id` AS `c_config_id`,`customer_data`.`this_company_id` AS `this_company_id` from (select `customer`.`kd_customer` AS `kd_customer`,`customer`.`nama` AS `nama`,`customer`.`alamat` AS `alamat`,`customer`.`telepon` AS `telepon`,`customer`.`fax` AS `fax`,`customer`.`kontak` AS `kontak`,`customer`.`hp` AS `hp`,`customer`.`email` AS `email`,`customer`.`id` AS `id`,`customer`.`company_id` AS `company_id`,`customer`.`db_name` AS `db_name`,`customer`.`status` AS `status`,`customer`.`kontrak_id` AS `kontrak_id`,`customer`.`c_config_id` AS `c_config_id`,`customer`.`this_company_id` AS `this_company_id` from (select `m_customer`.`kd_customer` AS `kd_customer`,`m_customer`.`nama` AS `nama`,`m_customer`.`alamat` AS `alamat`,`m_customer`.`telepon` AS `telepon`,`m_customer`.`fax` AS `fax`,`m_customer`.`kontak` AS `kontak`,`m_customer`.`hp` AS `hp`,`m_customer`.`email` AS `email`,`mp_company`.`id` AS `id`,`mp_company`.`company_id` AS `company_id`,`mp_company`.`db_name` AS `db_name`,ifnull(`m_customer_config`.`status`,0) AS `status`,ifnull(`m_customer_config`.`kontrak_id`,-1) AS `kontrak_id`,ifnull(`m_customer_config`.`id`,0) AS `c_config_id`,`db_config`.`value` AS `this_company_id` from (((`misterkong_mp`.`m_user_company` `mp_company` join `m_customer` on(`m_customer`.`email` = `mp_company`.`email_usaha`)) join (select `g_db_config`.`value` AS `value` from `g_db_config` where `g_db_config`.`name` = 'id_company_id') `db_config`) left join `m_customer_config` on(`m_customer_config`.`kd_customer` = `m_customer`.`kd_customer`)) union all select `m_customer`.`kd_customer` AS `kd_customer`,`m_customer`.`nama` AS `nama`,`m_customer`.`alamat` AS `alamat`,`m_customer`.`telepon` AS `telepon`,`m_customer`.`fax` AS `fax`,`m_customer`.`kontak` AS `kontak`,`m_customer`.`hp` AS `hp`,`m_customer`.`email` AS `email`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none`,'none' AS `none` from `m_customer` group by `m_customer`.`kd_customer`) `customer` group by `customer`.`kd_customer`) `customer_data` order by `customer_data`.`status`,`customer_data`.`id` desc,`customer_data`.`kontrak_id` desc
//xyvdelimiter //
DROP VIEW IF EXISTS v_margin_perbarang;
CREATE VIEW `v_margin_perbarang` AS select `bs`.`kd_satuan` AS `kd_satuan`,`bs`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`bs`.`harga_jual` AS `harga_jual`,`tm_brg`.`Modal` * `bs`.`jumlah` AS `modal`,`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah` AS `Laba`,(`bs`.`harga_jual` - `tm_brg`.`Modal` * `bs`.`jumlah`) / (`tm_brg`.`Modal` * `bs`.`jumlah`) * 100 AS `Margin`,`bs`.`margin` AS `margin_tetapan` from ((`m_barang_satuan` `bs` join (select `pd`.`kd_barang` AS `kd_barang`,`pd`.`harga_beli` / `bs`.`jumlah` AS `Modal` from ((((select `t_pembelian_detail`.`kd_barang` AS `kd_barang`,max(`t_pembelian_detail`.`no_transaksi`) AS `nomor` from `t_pembelian_detail` group by `t_pembelian_detail`.`kd_barang`)) `tm` left join `t_pembelian_detail` `pd` on(`pd`.`kd_barang` = `tm`.`kd_barang` and `pd`.`no_transaksi` = `tm`.`nomor`)) join `m_barang_satuan` `bs` on(`pd`.`kd_satuan` = `bs`.`kd_satuan` and `pd`.`kd_barang` = `bs`.`kd_barang`))) `tm_brg` on(`bs`.`kd_barang` = `tm_brg`.`kd_barang`)) join `m_barang` on(`m_barang`.`kd_barang` = `bs`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_mon_penjualan_percustomer;
CREATE VIEW `v_mon_penjualan_percustomer` AS select cast(`jual`.`tanggal` as date) AS `tanggal`,`m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `divisi`,`m_customer`.`nama` AS `customer`,sum(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty`) AS `subtotal` from ((((`t_penjualan` `jual` join `t_penjualan_detail` `dtl` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi`)) join `m_pegawai` on(`dtl`.`kd_pegawai` = `m_pegawai`.`kd_pegawai`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_customer` on(`m_customer`.`kd_customer` = `jual`.`kd_customer`)) group by `jual`.`kd_customer`,cast(`jual`.`tanggal` as date),`jual`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_mon_penjualan_peruser;
CREATE VIEW `v_mon_penjualan_peruser` AS select cast(`jual`.`tanggal` as date) AS `tanggal`,`m_divisi`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `divisi`,`m_userx`.`nama` AS `user`,`m_userx`.`kd_user` AS `kd_user`,`dtl`.`no_transaksi` AS `no_transaksi`,`m_customer`.`nama` AS `customer`,sum(`GetHargaBersih`(`GetHargaBersih`(`dtl`.`harga_jual`,`dtl`.`diskon1`,`dtl`.`diskon2`,`dtl`.`diskon3`,`dtl`.`diskon4`,0,0),`jual`.`diskon1`,`jual`.`diskon2`,`jual`.`diskon3`,`jual`.`diskon4`,`jual`.`pajak`,0) * `dtl`.`qty`) AS `total` from ((((`t_penjualan` `jual` join `t_penjualan_detail` `dtl` on(`jual`.`no_transaksi` = `dtl`.`no_transaksi`)) join `m_userx` on(`jual`.`kd_user` = `m_userx`.`kd_user`)) join `m_divisi` on(`jual`.`kd_divisi` = `m_divisi`.`kd_divisi`)) join `m_customer` on(`m_customer`.`kd_customer` = `jual`.`kd_customer`)) group by `dtl`.`no_transaksi`,`jual`.`kd_user`,`m_customer`.`kd_customer`,cast(`jual`.`tanggal` as date),`jual`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_not_moving_item;
CREATE VIEW `v_not_moving_item` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`kd_kategori` AS `kd_kategori`,`m_barang`.`kd_jenis_bahan` AS `kd_jenis_bahan`,`m_barang`.`kd_model` AS `kd_model`,`m_barang`.`kd_merk` AS `kd_merk`,`m_barang`.`kd_warna` AS `kd_warna`,`m_barang`.`ukuran` AS `ukuran`,`m_barang`.`nama` AS `nama`,`m_barang`.`keterangan` AS `keterangan`,`m_barang`.`status` AS `status`,`m_barang`.`status_pinjam` AS `status_pinjam`,`m_barang`.`pabrik` AS `pabrik`,`m_barang`.`tanggal_daftar` AS `tanggal_daftar`,`m_barang`.`date_add` AS `date_add`,`m_barang`.`user_add` AS `user_add`,`m_barang`.`date_modif` AS `date_modif`,`m_barang`.`user_modif` AS `user_modif`,`m_barang`.`divisi_id` AS `divisi_id` from `m_barang` where !(`m_barang`.`kd_barang` in (select `x_fmi_smi`.`kode` from `x_fmi_smi`)) and month(`m_barang`.`tanggal_daftar`) <= month(current_timestamp()) - 2 and `m_barang`.`status` = 1 order by `m_barang`.`tanggal_daftar` desc
//xyvdelimiter //
DROP VIEW IF EXISTS v_notif_mutasi_item;
CREATE VIEW `v_notif_mutasi_item` AS select `a`.`Kategori` AS `Kategori`,`a`.`kd_barang` AS `kd_barang`,`a`.`Barang` AS `Barang`,`a`.`kd_divisi` AS `kd_divisi`,`a`.`mutasi_akhir` AS `mutasi_akhir`,`a`.`avg_harian` AS `avg_harian`,`c`.`stok` AS `stok_sumber`,`a`.`stok_tujuan` AS `stok_tujuan`,round(`a`.`avg_harian` * 7,0) AS `need`,round(`a`.`avg_harian` * 7,0) AS `qty_mutasi`,`a`.`satuan` AS `satuan`,`a`.`kd_satuan` AS `kd_satuan` from (`v_spk_mutasi_barang_baru` `a` join (select `g_stok_akhir`.`kd_barang` AS `kd_barang`,`g_stok_akhir`.`stok` AS `stok` from `g_stok_akhir` where `g_stok_akhir`.`kd_divisi` = 'DAA000') `c` on(`a`.`kd_barang` = `c`.`kd_barang`)) where `c`.`stok` <> 0 and round(`a`.`avg_harian` * 7,0) <> 0 and round(`a`.`avg_harian` * 7,0) <= `c`.`stok` group by `a`.`kd_barang`,`a`.`kd_divisi` order by `a`.`Barang`
//xyvdelimiter //
DROP VIEW IF EXISTS v_opname_stok_andro_temp;
CREATE VIEW `v_opname_stok_andro_temp` AS select `stc_awal`.`kd_divisi` AS `kd_divisi`,`stc_awal`.`kd_barang` AS `kd_barang`,`stc_awal`.`kd_satuan` AS `kd_satuan`,current_timestamp() AS `tanggal`,`stc_awal`.`real_stok_divisi` AS `real_stok_divisi`,`g_stok_akhir`.`stok` AS `stok_sistem`,case when `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` >= 0 then `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` when `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` < 0 then (`stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok`) * -1 end AS `qty`,'Android Opname' AS `keterangan`,'UAA006' AS `kd_user`,case when `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` >= 0 then 2 when `stc_awal`.`real_stok_divisi` - `g_stok_akhir`.`stok` < 0 then 3 end AS `status`,current_timestamp() AS `tanggal_server` from (`g_stok_akhir` join (select `t_opname_stok_tmp`.`kd_barang` AS `kd_barang`,(select `m_barang_satuan`.`kd_satuan` from `m_barang_satuan` where `m_barang_satuan`.`jumlah` = 1 and `m_barang_satuan`.`kd_barang` = `t_opname_stok_tmp`.`kd_barang`) AS `kd_satuan`,'DAA004' AS `kd_divisi`,`t_opname_stok_tmp`.`qty` - ifnull(`qty_jual`.`p_qty`,0) AS `real_stok_divisi` from (`t_opname_stok_tmp` left join (select `t_penjualan_detail`.`kd_barang` AS `kd_barang`,sum(`t_penjualan_detail`.`qty`) AS `p_qty` from `t_penjualan_detail` where `t_penjualan_detail`.`no_transaksi` like '%PS200109%' group by `t_penjualan_detail`.`kd_barang`) `qty_jual` on(`qty_jual`.`kd_barang` = `t_opname_stok_tmp`.`kd_barang`))) `stc_awal` on(`g_stok_akhir`.`kd_barang` = `stc_awal`.`kd_barang` and `g_stok_akhir`.`kd_divisi` = `stc_awal`.`kd_divisi`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_pembelian_barang_null;
CREATE VIEW `v_pembelian_barang_null` AS select `m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,case when (select count(`t_pembelian`.`no_transaksi`) from (`t_pembelian` join `t_pembelian_detail` on(`t_pembelian`.`no_transaksi` = `t_pembelian_detail`.`no_transaksi`)) where `t_pembelian_detail`.`kd_barang` = `g_stok_akhir`.`kd_barang`) = 0 then 'Baru' else 'Lama' end AS `sts_barang`,ifnull(`vb`.`avg`,0) AS `avg`,ifnull(`g_stok_akhir`.`stok`,0) AS `stok`,0 AS `Expired`,ifnull(`vb`.`avg` * `m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`,0) AS `need`,round(ifnull(`vb`.`avg` * `m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time` + `ans_item`.`buffer` * (`vb`.`avg` * `m_supplier_jadwal`.`visit_time` + `m_supplier_jadwal`.`lead_time`) / 100,0),0) AS `qty`,`m_satuan`.`nama` AS `satuan`,`last_price`.`harga_beli` AS `harga_beli`,0 AS `Diskon`,`m_supplier_jadwal`.`hari` AS `Kunjungan` from (((((((((`m_barang_satuan` join `m_barang` on(`m_barang_satuan`.`kd_barang` = `m_barang`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `m_barang_satuan`.`kd_satuan`)) join `m_barang_supplier` on(`m_barang`.`kd_barang` = `m_barang_supplier`.`kd_barang`)) join `m_supplier_jadwal` on(`m_supplier_jadwal`.`kd_supplier` = `m_barang_supplier`.`kd_supplier`)) join `m_kategori` on(`m_barang`.`kd_kategori` = `m_kategori`.`kd_kategori`)) join `g_stok_akhir` on(`m_barang`.`kd_barang` = `g_stok_akhir`.`kd_barang`)) left join `v_pembelian_barang_terakhir` `last_price` on(`m_barang_satuan`.`kd_barang` = `last_price`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `last_price`.`kd_satuan`)) left join `v_avg_barang_per_periode` `vb` on(`m_barang`.`kd_barang` = `vb`.`kd_barang`)) join `ans_item`) where `m_barang`.`status` <> 0 and `m_barang_satuan`.`status` <> 0 and `last_price`.`harga_beli` is null group by `g_stok_akhir`.`kd_barang`,`m_barang`.`tanggal_daftar`,`m_barang_satuan`.`kd_satuan`,`m_satuan`.`nama`
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_bersih_bulan_ini;
CREATE VIEW `v_penjualan_bersih_bulan_ini` AS select `x_total_penjualan`.`tanggal_tr` AS `tanggal_tr`,sum(`x_total_penjualan`.`total`) AS `Total`,count(0) AS `jumlah` from `x_total_penjualan` where year(`x_total_penjualan`.`tanggal_tr`) = year(current_timestamp()) and month(`x_total_penjualan`.`tanggal_tr`) = month(current_timestamp()) group by dayofmonth(`x_total_penjualan`.`tanggal_tr`)
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_bersih_pertransaksi;
CREATE VIEW `v_penjualan_bersih_pertransaksi` AS select `t_penjualan_detail`.`no_transaksi` AS `no_transaksi`,`t_penjualan_detail`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama`,`t_penjualan_detail`.`qty` AS `qty`,`t_penjualan_detail`.`harga_jual` AS `harga_jual`,`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0) * `t_penjualan_detail`.`qty` AS `total` from (`t_penjualan_detail` join `m_barang` on(`t_penjualan_detail`.`kd_barang` = `m_barang`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_order_dt_review;
CREATE VIEW `v_penjualan_order_dt_review` AS select `dt_order`.`no_order` AS `no_order`,`dt_order`.`kd_barang` AS `kd_barang`,`dt_order`.`kd_satuan` AS `kd_satuan`,`dt_order`.`harga_jual` AS `harga_jual`,`dt_order`.`qty` AS `qty`,`m_barang`.`nama` AS `barang`,`m_satuan`.`nama` AS `satuan` from ((`t_penjualan_order_detail` `dt_order` join `m_barang` on(`m_barang`.`kd_barang` = `dt_order`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `dt_order`.`kd_satuan`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_order_review;
CREATE VIEW `v_penjualan_order_review` AS select `odr`.`no_order` AS `no_order`,`odr`.`tanggal` AS `tanggal`,`dt_odr`.`total` AS `total`,`odr`.`kd_user` AS `kd_user`,case when `odr`.`no_transaksi` = '-' then 'sedang diproses' else 'selesai' end AS `status_order` from (`t_penjualan_order` `odr` join (select `t_penjualan_order_detail`.`no_order` AS `no_order`,sum(`t_penjualan_order_detail`.`qty` * `t_penjualan_order_detail`.`harga_jual`) AS `total` from `t_penjualan_order_detail` group by `t_penjualan_order_detail`.`no_order`) `dt_odr` on(`dt_odr`.`no_order` = `odr`.`no_order`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_penjualan_order_review_admin;
CREATE VIEW `v_penjualan_order_review_admin` AS select `odr`.`no_order` AS `no_order`,`odr`.`tanggal` AS `tanggal`,`dt_odr`.`total` AS `total`,`odr`.`kd_user` AS `kd_user`,case when `odr`.`no_transaksi` = '-' then 'butuh diproses' else 'selesai' end AS `status_order` from (`t_penjualan_order` `odr` join (select `t_penjualan_order_detail`.`no_order` AS `no_order`,sum(`t_penjualan_order_detail`.`qty` * `t_penjualan_order_detail`.`harga_jual`) AS `total` from `t_penjualan_order_detail` group by `t_penjualan_order_detail`.`no_order`) `dt_odr` on(`dt_odr`.`no_order` = `odr`.`no_order`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_piutang_penjualan_percustomer;
CREATE VIEW `v_piutang_penjualan_percustomer` AS select `penjualan`.`no_transaksi` AS `no_transaksi`,`penjualan`.`kd_customer` AS `kd_customer`,(select `m_customer`.`nama` from `m_customer` where `m_customer`.`kd_customer` = `penjualan`.`kd_customer`) AS `customer`,`penjualan`.`total_piutang` AS `total_piutang`,ifnull(`t_piutang_cicilan`.`total_cicilan`,0) AS `total_cicilan`,ifnull(`penjualan`.`total_piutang`,0) - ifnull(`t_piutang_cicilan`.`total_cicilan`,0) AS `sisa_cicilan`,`penjualan`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo` from (((select `t_penjualan_detail`.`no_transaksi` AS `no_transaksi`,`t_penjualan`.`kd_customer` AS `kd_customer`,`t_penjualan`.`tanggal_jatuh_tempo` AS `tanggal_jatuh_tempo`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `total_piutang` from (`t_penjualan` join `t_penjualan_detail` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi`)) where `t_penjualan`.`status` = 0 group by `t_penjualan_detail`.`no_transaksi`,`t_penjualan`.`kd_customer`)) `penjualan` left join (select `t_piutang_cicilan`.`no_transaksi` AS `no_transaksi`,sum(`t_piutang_cicilan`.`nominal`) AS `total_cicilan` from `t_piutang_cicilan` group by `t_piutang_cicilan`.`no_transaksi`) `t_piutang_cicilan` on(`t_piutang_cicilan`.`no_transaksi` = `penjualan`.`no_transaksi`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_register_group_user;
CREATE VIEW `v_register_group_user` AS select `m_user_group`.`kd_group` AS `kd_group`,`m_user_group`.`nama` AS `nama`,`m_user_group`.`status` AS `status`,`m_user_group`.`date_add` AS `date_add`,`m_user_group`.`user_add` AS `user_add`,`m_user_group`.`date_modif` AS `date_modif`,`m_user_group`.`user_modif` AS `user_modif`,`m_user_group`.`divisi_id` AS `divisi_id` from `m_user_group`
//xyvdelimiter //
DROP VIEW IF EXISTS v_sp_penerimaan_order;
CREATE VIEW `v_sp_penerimaan_order` AS select `m_barang_satuan`.`harga_jual` AS `harga_jual`,`m_satuan`.`nama` AS `satuan`,`m_barang`.`nama` AS `barang`,`tpod`.`no_order` AS `no_order`,`tpod`.`kd_barang` AS `kd_barang`,`tpod`.`kd_satuan` AS `kd_satuan`,`tpod`.`jenis` AS `jenis`,`tpod`.`qty` AS `qty`,`tpod`.`harga_beli` AS `harga_beli`,`tpod`.`diskon1` AS `diskon1`,`tpod`.`diskon2` AS `diskon2`,`tpod`.`diskon3` AS `diskon3`,`tpod`.`diskon4` AS `diskon4`,`tpod`.`date_add` AS `date_add`,`tpod`.`user_add` AS `user_add`,`tpod`.`date_modif` AS `date_modif`,`tpod`.`user_modif` AS `user_modif`,`tpod`.`divisi_id` AS `divisi_id`,`tpo`.`tanggal` AS `tanggal`,`m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,`tpo`.`no_transaksi` AS `no_transaksi` from (((((`t_pembelian_order` `tpo` join `t_pembelian_order_detail` `tpod` on(`tpo`.`no_order` = `tpod`.`no_order`)) join `m_supplier` on(`m_supplier`.`kd_supplier` = `tpo`.`kd_supplier`)) join `m_barang` on(`m_barang`.`kd_barang` = `tpod`.`kd_barang`)) join `m_satuan` on(`m_satuan`.`kd_satuan` = `tpod`.`kd_satuan`)) join `m_barang_satuan` on(`m_barang_satuan`.`kd_barang` = `tpod`.`kd_barang` and `m_barang_satuan`.`kd_satuan` = `tpod`.`kd_satuan`)) where !(`tpo`.`no_order` in (select `t_pembelian`.`no_order` from `t_pembelian`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_pembelian_order;
CREATE VIEW `v_spk_pembelian_order` AS select `c`.`kd_barang` AS `kd_barang`,`c`.`nama` AS `nama`,`c`.`sts_barang` AS `sts_barang`,`c`.`avg` AS `avg`,`c`.`stok` AS `stok`,round(`c`.`need`,0) AS `need`,case when `c`.`qty` <= 0 then 0 else round(`c`.`qty`,0) end AS `qty`,`c`.`kd_satuan` AS `kd_satuan`,`c`.`satuan` AS `satuan`,`c`.`harga_beli_terakhir` AS `harga_beli_terakhir`,`c`.`Diskon` AS `Diskon`,`c`.`kd_supplier` AS `kd_supplier`,`c`.`Supplier` AS `Supplier`,`c`.`Kunjungan` AS `Kunjungan`,`c`.`Kunjungan2` AS `Kunjungan2`,ifnull(`ab`.`stok`,0) AS `Expired` from ((`m_barang_supplier` join `v_spk_pembelian_order_tmp` `c` on(`m_barang_supplier`.`kd_barang` = `c`.`kd_barang` and `m_barang_supplier`.`kd_supplier` = `c`.`kd_supplier`)) left join (select `a`.`kd_barang` AS `kd_barang`,`a`.`stok` AS `stok` from (`g_stok_akhir` `a` join `ans_item_stored_divisi` `b`) where `a`.`kd_divisi` = `b`.`div_expired`) `ab` on(`ab`.`kd_barang` = `c`.`kd_barang`)) where `m_barang_supplier`.`status` <> 0
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_pembelian_order_besok;
CREATE VIEW `v_spk_pembelian_order_besok` AS select `v_spk_pembelian_order`.`kd_barang` AS `kd_barang`,`v_spk_pembelian_order`.`nama` AS `nama`,`v_spk_pembelian_order`.`sts_barang` AS `sts_barang`,`v_spk_pembelian_order`.`avg` AS `avg`,`v_spk_pembelian_order`.`stok` AS `stok`,`v_spk_pembelian_order`.`Expired` AS `Expired`,`v_spk_pembelian_order`.`need` AS `need`,`v_spk_pembelian_order`.`qty` AS `qty`,`v_spk_pembelian_order`.`kd_satuan` AS `kd_satuan`,`v_spk_pembelian_order`.`satuan` AS `satuan`,`v_spk_pembelian_order`.`harga_beli_terakhir` AS `harga_beli_terakhir`,`v_spk_pembelian_order`.`Diskon` AS `Diskon`,`v_spk_pembelian_order`.`kd_supplier` AS `kd_supplier`,`v_spk_pembelian_order`.`Supplier` AS `Supplier`,`v_spk_pembelian_order`.`Kunjungan` AS `Kunjungan`,`v_spk_pembelian_order`.`Kunjungan2` AS `Kunjungan2` from `v_spk_pembelian_order` where `v_spk_pembelian_order`.`Kunjungan` = date_format(curdate() + interval 1 day,'%w') or `v_spk_pembelian_order`.`Kunjungan2` = date_format(curdate() + interval 1 day,'%w')
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_pembelian_order_hari_ini;
CREATE VIEW `v_spk_pembelian_order_hari_ini` AS select `v_spk_pembelian_order`.`kd_barang` AS `kd_barang`,`v_spk_pembelian_order`.`nama` AS `nama`,`v_spk_pembelian_order`.`sts_barang` AS `sts_barang`,`v_spk_pembelian_order`.`avg` AS `avg`,`v_spk_pembelian_order`.`stok` AS `stok`,`v_spk_pembelian_order`.`Expired` AS `Expired`,`v_spk_pembelian_order`.`need` AS `need`,`v_spk_pembelian_order`.`qty` AS `qty`,`v_spk_pembelian_order`.`kd_satuan` AS `kd_satuan`,`v_spk_pembelian_order`.`satuan` AS `satuan`,`v_spk_pembelian_order`.`harga_beli_terakhir` AS `harga_beli_terakhir`,`v_spk_pembelian_order`.`Diskon` AS `Diskon`,`v_spk_pembelian_order`.`kd_supplier` AS `kd_supplier`,`v_spk_pembelian_order`.`Supplier` AS `Supplier`,`v_spk_pembelian_order`.`Kunjungan` AS `Kunjungan`,`v_spk_pembelian_order`.`Kunjungan2` AS `Kunjungan2` from `v_spk_pembelian_order` where `v_spk_pembelian_order`.`Kunjungan` = date_format(curdate(),'%w') or `v_spk_pembelian_order`.`Kunjungan2` = date_format(curdate(),'%w')
//xyvdelimiter //
DROP VIEW IF EXISTS v_spk_penjualan_detail;
CREATE VIEW `v_spk_penjualan_detail` AS select sum(`x_total_penjualan`.`total`) AS `total`,`x_total_penjualan`.`tanggal_tr` AS `tanggal_tr`,count(0) AS `jumlah`,`x_total_penjualan`.`kd_divisi` AS `kd_divisi`,`m_divisi`.`nama` AS `nama` from (`x_total_penjualan` join `m_divisi` on(`x_total_penjualan`.`kd_divisi` = `m_divisi`.`kd_divisi`)) group by cast(`x_total_penjualan`.`tanggal_tr` as date),`x_total_penjualan`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_supplier_barang;
CREATE VIEW `v_supplier_barang` AS select `m_barang_supplier`.`kd_supplier` AS `kd_supplier`,`m_barang`.`kd_barang` AS `kd_barang`,`m_barang`.`nama` AS `nama` from (`m_barang_supplier` join `m_barang` on(`m_barang_supplier`.`kd_barang` = `m_barang`.`kd_barang`))
//xyvdelimiter //
DROP VIEW IF EXISTS v_supplier_exist;
CREATE VIEW `v_supplier_exist` AS select `m_supplier`.`kd_supplier` AS `kd_supplier`,`m_supplier`.`nama` AS `nama`,date_format(`t_pembelian`.`tanggal`,'%W') AS `hari`,count(date_format(`t_pembelian`.`tanggal`,'%W')) AS `jumlahH` from (`m_supplier` left join `t_pembelian` on(`t_pembelian`.`kd_supplier` = `m_supplier`.`kd_supplier` and month(`t_pembelian`.`tanggal`) = month(current_timestamp()))) group by date_format(`t_pembelian`.`tanggal`,'%W'),`m_supplier`.`kd_supplier` order by `m_supplier`.`kd_supplier`
//xyvdelimiter //
DROP VIEW IF EXISTS v_t_opname_stok_tmp;
CREATE VIEW `v_t_opname_stok_tmp` AS select `t_opname_stok_tmp`.`id` AS `id`,`t_opname_stok_tmp`.`kd_barang` AS `kd_barang`,`t_opname_stok_tmp`.`qty` AS `qty`,`t_opname_stok_tmp`.`keterangan` AS `keterangan` from `t_opname_stok_tmp`
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_divisi;
CREATE VIEW `v_total_penjualan_divisi` AS select cast(`t_penjualan`.`tanggal_server` as date) AS `TANGGAL`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()))) group by cast(`t_penjualan`.`tanggal_server` as date),`t_penjualan`.`kd_divisi`
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_harian;
CREATE VIEW `v_total_penjualan_harian` AS select sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()) and dayofmonth(`t_penjualan`.`tanggal_server`) = dayofmonth(current_timestamp()))) group by cast(`t_penjualan`.`tanggal_server` as date),substr(`t_penjualan_detail`.`no_transaksi`,1,2)
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_perbulan;
CREATE VIEW `v_total_penjualan_perbulan` AS select cast(`t_penjualan`.`tanggal_server` as date) AS `TANGGAL`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()))) group by cast(`t_penjualan`.`tanggal_server` as date),substr(`t_penjualan_detail`.`no_transaksi`,1,2)
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_perbulan_hm;
CREATE VIEW `v_total_penjualan_perbulan_hm` AS select cast(`t_penjualan`.`tanggal_server` as date) AS `TANGGAL`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0) * `t_penjualan_detail`.`qty`) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()) and `t_penjualan_detail`.`no_transaksi` like '%hm%')) group by cast(`t_penjualan`.`tanggal_server` as date),substr(`t_penjualan_detail`.`no_transaksi`,1,2)
//xyvdelimiter //
DROP VIEW IF EXISTS v_total_penjualan_perbulan_rm;
CREATE VIEW `v_total_penjualan_perbulan_rm` AS select cast(`t_penjualan`.`tanggal_server` as date) AS `TANGGAL`,sum(`GetHargaBersih`(`GetHargaBersih`(`t_penjualan_detail`.`harga_jual`,`t_penjualan_detail`.`diskon1`,`t_penjualan_detail`.`diskon2`,`t_penjualan_detail`.`diskon3`,`t_penjualan_detail`.`diskon4`,0,0),`t_penjualan`.`diskon1`,`t_penjualan`.`diskon2`,`t_penjualan`.`diskon3`,`t_penjualan`.`diskon4`,0,0)) AS `TOTAL` from (`t_penjualan_detail` join `t_penjualan` on(`t_penjualan`.`no_transaksi` = `t_penjualan_detail`.`no_transaksi` and year(`t_penjualan`.`tanggal_server`) = year(current_timestamp()) and month(`t_penjualan`.`tanggal_server`) = month(current_timestamp()) and `t_penjualan_detail`.`no_transaksi` like '%rm%')) group by cast(`t_penjualan`.`tanggal_server` as date),substr(`t_penjualan_detail`.`no_transaksi`,1,2)
//xyvdelimiter //
DROP VIEW IF EXISTS v_user_item_cart;
CREATE VIEW v_user_item_cart AS SELECT vb.*,IFNULL(order_tmp.qty,0) FROM v_barang_for_order_penjualan vb LEFT JOIN (	SELECT kd_barang,kd_satuan,qty FROM t_penjualan_order_tmp ) order_tmp ON order_tmp.kd_barang=vb.kd_barang AND order_tmp.kd_satuan=vb.kd_satuan ORDER BY nama
//xyvdelimiter //
DROP VIEW IF EXISTS v_x_fmi_smi;
CREATE VIEW `v_x_fmi_smi` AS select `x_fmi_smi`.`periode` AS `periode`,`x_fmi_smi`.`nomor` AS `nomor`,`x_fmi_smi`.`barang` AS `barang`,`x_fmi_smi`.`total` AS `total`,`x_fmi_smi`.`qty_max` AS `qty_max`,`x_fmi_smi`.`satuan_max` AS `satuan_max`,`x_fmi_smi`.`awal` AS `awal`,`x_fmi_smi`.`akhir` AS `akhir`,`x_fmi_smi`.`divisi` AS `divisi`,`m_divisi`.`nama` AS `nama`,`x_fmi_smi`.`kode` AS `kode`,case when (`x_fmi_smi`.`FMI` = 1 and `x_fmi_smi`.`SMI` = 0) then 'FMI' when (`x_fmi_smi`.`FMI` = 0 and `x_fmi_smi`.`SMI` = 1) then 'SMI' else 'NOT MOVING' end AS `jenis` from (`x_fmi_smi` join `m_divisi` on(`m_divisi`.`kd_divisi` = `x_fmi_smi`.`divisi`))
//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIPenjualanNonRetur;
CREATE PROCEDURE mon_GetFMIPenjualanNonRetur(IN `inTGLAWAL` datetime,IN `inTGLAKHIR` datetime,IN `inDIVISI` varchar(20))
BEGIN

DECLARE varTotalPenjualan FLOAT(23,2);
DECLARE varKdBarang VARCHAR(100);
DECLARE varJumlah,varTotal,varSaldoTemp FLOAT;
DECLARE varNomorTemp BIGINT;
DECLARE varFMI,varSMI,selesai INT;

DECLARE cur_transaksi CURSOR FOR
SELECT rest.kdbarang, rest.qty, rest.total 
FROM rest;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET selesai = 1;

DROP TABLE IF EXISTS res;
DROP TABLE IF EXISTS rest;
CREATE TEMPORARY TABLE res(
awal DATE, 
akhir DATE, 
divisi VARCHAR(20), 
nomor BIGINT, 
kode VARCHAR(100), 
barang VARCHAR(100), 
divisibarang VARCHAR(100), 
departemen VARCHAR(100), 
kategori VARCHAR(100), 
subkategori VARCHAR(100),
qty FLOAT(23,2), 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT(1), 
SMI INT(1)
);
CREATE TEMPORARY TABLE rest(
awal DATETIME, 
akhir DATETIME, 
divisi VARCHAR(20), 
nomor BIGINT, 		
kdbarang VARCHAR(100), 		
qty FLOAT, 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT, 
SMI INT
);

INSERT INTO rest
SELECT   inTGLAWAL, inTGLAKHIR, inDIVISI,  0,
dtl.kd_barang, SUM(dtl.qty * bstn.jumlah) AS Jumlah, 
SUM(GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
jual.diskon3, jual.diskon4, jual.pajak, 0) * dtl.qty) AS total, 0, 0, 0
FROM         t_penjualan jual INNER JOIN
t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi INNER JOIN
m_barang brg ON dtl.kd_barang = brg.kd_barang INNER JOIN
m_divisi dv ON jual.kd_divisi = dv.kd_divisi INNER JOIN
m_barang_satuan bstn ON dtl.kd_barang = bstn.kd_barang AND dtl.kd_satuan = bstn.kd_satuan
WHERE dtl.jenis = 1 AND dv.kd_divisi = inDIVISI AND DATE(jual.tanggal) BETWEEN inTGLAWAL AND inTGLAKHIR
GROUP BY dtl.kd_barang
ORDER BY total DESC;

SET varTotalPenjualan=(SELECT SUM(rest.total)as Xtotal FROM rest);
SET varFMI=1;
SET varSMI=0;
SET varSaldoTemp=0;
SET varNomorTemp=0;

OPEN cur_transaksi;		
myloop: LOOP
FETCH cur_transaksi INTO varKdBarang,varJumlah,varTotal;
IF selesai THEN
LEAVE myloop;
END IF;
SET varNomorTemp = varNomorTemp + 1;
SET varSaldoTemp = varSaldoTemp + varTotal;

UPDATE rest SET rest.nomor=varNomorTemp, rest.saldo=varSaldoTemp,rest.FMI=varFMI,rest.SMI=varSMI WHERE rest.kdbarang=varKdBarang;
IF varSaldoTemp>(varTotalPenjualan*0.8) THEN
SET varFMI=1;
SET varSMI=0;
END IF;		
END LOOP;
CLOSE cur_transaksi;
INSERT INTO res 
SELECT tm.awal, tm.akhir, tm.divisi, 
nomor, tm.kdbarang, br.nama, mr.nama, mdl.nama, kt.nama, wrn.nama,
qty, total, saldo, FMI, SMI 
FROM rest tm 
INNER JOIN m_barang br ON tm.kdbarang = br.kd_barang 
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mr ON br.kd_merk = mr.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
ORDER BY nomor;
END


//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIRekapPenjualan;
CREATE PROCEDURE mon_GetFMIRekapPenjualan(IN `inTGL` date,IN `inDIVISI` varchar(20),IN `inPERIODE` int)
BEGIN
CALL mon_GetFMIStokNonReturn ( inTGL, inDIVISI, inPERIODE );
SELECT
DATE( jual.tanggal ) AS Tanggal,
SUM(
GetHargaBersih (
GetHargaBersih ( dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0 ),
jual.diskon1,
jual.diskon2,
jual.diskon3,
jual.diskon4,
jual.pajak,
0 
) * dtl.qty 
) AS Total,
fs.TotalFMI,
fs.TotalFMI Kosong,
fs.FMIKosongPersen,
fs.TotalSMI,
fs.TotalSMIKosong,
fs.SMIKosongPersen,
COUNT( DISTINCT jual.no_transaksi ) AS Transaksi,
SUM(
GetHargaBersih (
GetHargaBersih ( dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0 ),
jual.diskon1,
jual.diskon2,
jual.diskon3,
jual.diskon4,
jual.pajak,
0 
) * dtl.qty 
) / COUNT( DISTINCT jual.no_transaksi ) AS AverageBasket 
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
INNER JOIN m_divisi dv ON jual.kd_divisi = dv.kd_divisi
LEFT OUTER JOIN (
SELECT kode,
SUM( FMI ) AS TotalFMI,
SUM( FMIKosong ) AS TotalFMIKosong,
(
CASE

WHEN SUM( FMI ) = 0 THEN
SUM( FMIKosong ) * 100 ELSE ( SUM( FMIKosong ) * 100 ) / SUM( FMI ) 
END 
) AS FMIKosongPersen,
SUM( SMI ) AS TotalSMI,
SUM( SMIKosong ) AS TotalSMIKosong,
(
CASE

WHEN SUM( FMI ) > 0 THEN
( SUM( SMIKosong ) * 100 ) / SUM( SMI ) ELSE SUM( SMIKosong ) * 100 
END 
) AS SMIKosongPersen 
FROM
tempFMIStok 
) fs ON dtl.kd_barang=fs.kode 
WHERE
dtl.jenis = 1 
AND DATE(jual.tanggal) = inTGL 
AND dv.kd_divisi = inDIVISI 
GROUP BY
jual.tanggal,
fs.TotalFMI,
fs.TotalFMIKosong,
fs.FMIKosongPersen,
fs.TotalSMI,
fs.TotalSMIKosong,
fs.SMIKosongPersen;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIStok;
CREATE PROCEDURE mon_GetFMIStok(IN `inTGL` datetime,IN `inDIVISI` varchar(20),IN `inPERIODE` int)

BEGIN
DECLARE varAwal, varAkhir DATETIME;
SET varAwal =  CONCAT(YEAR(TIMESTAMPADD(month, 1 * -1, inTGL)),'-', MONTH(TIMESTAMPADD(month, 1 * -1, inTGL)),'-1');
SET varAkhir =YEAR(inTGL) + '-' + MONTH(inTGL) + '-1';
SET varAkhir = TIMESTAMPADD(DAY, -1, inTGL);
DROP TABLE IF EXISTS tempFMIStok;
DROP TABLE IF EXISTS tempBarang;
DROP TABLE IF EXISTS tempHistori;
CREATE TEMPORARY TABLE tempFMIStok(
tanggal DATETIME, 		
divisi VARCHAR(20), 		
kode VARCHAR(100), 
barang VARCHAR(100), 
divisibarang VARCHAR(100), 
departemen VARCHAR(100), 
kategori VARCHAR(100), 
subkategori VARCHAR(100),
stok FLOAT(23,2), 
satuan VARCHAR(30), 		
FMI INT(1), 
SMI INT(1),
FMIKosong INT(1),
SMIKosong INT(1)
);
CREATE TEMPORARY TABLE tempBarang(
kode VARCHAR(30),
stok FLOAT(15,2)
);
CREATE TEMPORARY TABLE tempHistori(
kode VARCHAR(30),
debet FLOAT(15,2),
kredit FLOAT(15,2)
);	

INSERT INTO tempBarang
SELECT kd_barang, 0
FROM t_penjualan jual INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
WHERE DATE(jual.tanggal) BETWEEN varAwal AND varAkhir AND dtl.jenis = 1 AND jual.kd_divisi = inDIVISI
GROUP BY kd_barang;
INSERT INTO tempHistori
SELECT  bd.kd_barang, bd.stok_awal AS Debet, 0 AS Kredit
FROM m_barang_divisi bd, m_barang_satuan bs, m_barang b, m_kategori k, tempBarang tm
WHERE bd.kd_barang = bs.kd_barang AND bs.jumlah = 1 
AND bd.kd_barang = b.kd_barang AND b.kd_kategori = k.kd_kategori AND k.status <> 2 
AND tm.kode = bd.kd_barang 
AND bd.kd_divisi = inDIVISI;


INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS Debet, SUM(d.qty * bs.jumlah) AS Kredit
FROM t_mutasi_stok_detail d, t_mutasi_stok t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku() 
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi_asal = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_mutasi_stok_detail d, t_mutasi_stok t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi_tujuan = inDIVISI
GROUP BY d.kd_barang;


INSERT INTO tempHistori
SELECT os.kd_barang, SUM(os.QTY* bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_opname_stok os, m_barang_satuan bs, tempBarang tm
WHERE os.status = 2 AND os.tanggal > GetTanggalTerakhirTutupBuku()
AND os.kd_barang = bs.kd_barang AND os.kd_satuan = bs.kd_satuan
AND tm.kode = os.kd_barang AND DATE(os.tanggal) <= inTGL
AND os.kd_divisi = inDIVISI
GROUP BY os.kd_barang;

INSERT INTO tempHistori
SELECT os.kd_barang, 0 AS DEBET, SUM(os.qty* bs.jumlah) AS KREDIT
FROM t_opname_stok os, m_barang_satuan bs, tempBarang tm
WHERE os.status <> 2 AND tanggal > GetTanggalTerakhirTutupBuku()
AND os.kd_barang = bs.kd_barang AND os.kd_satuan = bs.kd_satuan
AND tm.kode = os.kd_barang AND DATE(os.tanggal) <= inTGL
AND os.kd_divisi = inDIVISI
GROUP BY os.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_pembelian_detail d, t_pembelian t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS DEBET, SUM(d.qty * bs.jumlah) AS KREDIT
FROM t_pembelian_retur_detail d, t_pembelian_retur t, m_barang_satuan bs, tempBarang tm
WHERE d.no_retur = t.no_retur AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS DEBET, SUM(d.qty * bs.jumlah) AS KREDIT
FROM t_penjualan_detail d, t_penjualan t, m_barang b, m_kategori k, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = b.kd_barang AND b.kd_kategori = k.kd_kategori AND k.status <> 2
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_penjualan_retur_detail d, t_penjualan_retur t, m_barang_satuan bs, tempBarang tm
WHERE d.no_retur = t.no_retur AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

UPDATE tempBarang tb INNER JOIN 
(SELECT th.kode as kd_barang, SUM(th.debet-th.kredit) AS Total
FROM tempHistori th 
GROUP BY th.kode) tmp ON tmp.kd_barang = tb.kode
SET stok = tmp.total;

CALL mon_GetFMIPenjualanNonReturn(varAwal, varAkhir, inDIVISI);

INSERT INTO tempFMIStok
SELECT inTGL, inDIVISI, tm.kode, br.nama, mrk.nama, mdl.nama, kt.nama, wrn.nama, tm.stok, st.nama, fj.FMI, fj.SMI, 0, 0
FROM tempBarang tm INNER JOIN m_barang br on tm.kode = br.kd_barang
INNER JOIN m_barang_satuan bs ON tm.kode = bs.kd_barang
INNER JOIN m_satuan st ON bs.kd_satuan = st.kd_satuan
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mrk ON br.kd_merk = mrk.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
INNER JOIN res fj ON fj.kode = tm.kode
WHERE bs.jumlah = 1;

UPDATE tempFMIStok
SET FMIKosong = 1 
WHERE stok<= 0 AND FMI=1;


UPDATE tempFMIStok
SET SMIKosong = 1 
WHERE stok<= 0 AND SMI=1;

SELECT * FROM tempFMIStok;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetFMIStokNonReturn;
CREATE PROCEDURE mon_GetFMIStokNonReturn(IN `inTGL` datetime,IN `inDIVISI` varchar(20),IN `inPERIODE` int)

BEGIN
DECLARE varAwal, varAkhir DATETIME;
SET varAwal =  CONCAT(YEAR(TIMESTAMPADD(month, 1 * -1, inTGL)),'-', MONTH(TIMESTAMPADD(month, 1 * -1, inTGL)),'-1');
SET varAkhir =YEAR(inTGL) + '-' + MONTH(inTGL) + '-1';
SET varAkhir = TIMESTAMPADD(DAY, -1, inTGL);
DROP TABLE IF EXISTS tempFMIStok;
DROP TABLE IF EXISTS tempBarang;
DROP TABLE IF EXISTS tempHistori;
CREATE TEMPORARY TABLE tempFMIStok(
tanggal DATETIME, 		
divisi VARCHAR(20), 		
kode VARCHAR(100), 
barang VARCHAR(100), 
divisibarang VARCHAR(100), 
departemen VARCHAR(100), 
kategori VARCHAR(100), 
subkategori VARCHAR(100),
stok FLOAT(23,2), 
satuan VARCHAR(30), 		
FMI INT(1), 
SMI INT(1),
FMIKosong INT(1),
SMIKosong INT(1)
);
CREATE TEMPORARY TABLE tempBarang(
kode VARCHAR(30),
stok FLOAT(15,2)
);
CREATE TEMPORARY TABLE tempHistori(
kode VARCHAR(30),
debet FLOAT(15,2),
kredit FLOAT(15,2)
);	

INSERT INTO tempBarang
SELECT kd_barang, 0
FROM t_penjualan jual INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
WHERE DATE(jual.tanggal) BETWEEN varAwal AND varAkhir AND dtl.jenis = 1 AND jual.kd_divisi = inDIVISI
GROUP BY kd_barang;
INSERT INTO tempHistori
SELECT  bd.kd_barang, bd.stok_awal AS Debet, 0 AS Kredit
FROM m_barang_divisi bd, m_barang_satuan bs, m_barang b, m_kategori k, tempBarang tm
WHERE bd.kd_barang = bs.kd_barang AND bs.jumlah = 1 
AND bd.kd_barang = b.kd_barang AND b.kd_kategori = k.kd_kategori AND k.status <> 2 
AND tm.kode = bd.kd_barang 
AND bd.kd_divisi = inDIVISI;


INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS Debet, SUM(d.qty * bs.jumlah) AS Kredit
FROM t_mutasi_stok_detail d, t_mutasi_stok t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku() 
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi_asal = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_mutasi_stok_detail d, t_mutasi_stok t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi_tujuan = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT os.kd_barang, SUM(os.QTY* bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_opname_stok os, m_barang_satuan bs, tempBarang tm
WHERE os.status = 2 AND os.tanggal > GetTanggalTerakhirTutupBuku()
AND os.kd_barang = bs.kd_barang AND os.kd_satuan = bs.kd_satuan
AND tm.kode = os.kd_barang AND DATE(os.tanggal) <= inTGL
AND os.kd_divisi = inDIVISI
GROUP BY os.kd_barang;
INSERT INTO tempHistori
SELECT os.kd_barang, 0 AS DEBET, SUM(os.qty* bs.jumlah) AS KREDIT
FROM t_opname_stok os, m_barang_satuan bs, tempBarang tm
WHERE os.status <> 2 AND tanggal > GetTanggalTerakhirTutupBuku()
AND os.kd_barang = bs.kd_barang AND os.kd_satuan = bs.kd_satuan
AND tm.kode = os.kd_barang AND DATE(os.tanggal) <= inTGL
AND os.kd_divisi = inDIVISI
GROUP BY os.kd_barang;
INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_pembelian_detail d, t_pembelian t, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;
INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS DEBET, SUM(d.qty * bs.jumlah) AS KREDIT
FROM t_pembelian_retur_detail d, t_pembelian_retur t, m_barang_satuan bs, tempBarang tm
WHERE d.no_retur = t.no_retur AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;
INSERT INTO tempHistori
SELECT d.kd_barang, 0 AS DEBET, SUM(d.qty * bs.jumlah) AS KREDIT
FROM t_penjualan_detail d, t_penjualan t, m_barang b, m_kategori k, m_barang_satuan bs, tempBarang tm
WHERE d.no_transaksi = t.no_transaksi AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = b.kd_barang AND b.kd_kategori = k.kd_kategori AND k.status <> 2
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

INSERT INTO tempHistori
SELECT d.kd_barang, SUM(d.qty * bs.jumlah) AS DEBET, 0 AS KREDIT
FROM t_penjualan_retur_detail d, t_penjualan_retur t, m_barang_satuan bs, tempBarang tm
WHERE d.no_retur = t.no_retur AND t.tanggal > GetTanggalTerakhirTutupBuku()
AND d.kd_barang = bs.kd_barang AND d.kd_satuan = bs.kd_satuan
AND tm.kode = d.kd_barang AND DATE(t.tanggal) <= inTGL
AND t.kd_divisi = inDIVISI
GROUP BY d.kd_barang;

UPDATE tempBarang tb INNER JOIN 
(SELECT th.kode as kd_barang, SUM(th.debet-th.kredit) AS Total
FROM tempHistori th 
GROUP BY th.kode) tmp ON tmp.kd_barang = tb.kode
SET stok = tmp.total;

CALL mon_GetFMIPenjualanNonReturn(varAwal, varAkhir, inDIVISI);

INSERT INTO tempFMIStok
SELECT inTGL, inDIVISI, tm.kode, br.nama, mrk.nama, mdl.nama, kt.nama, wrn.nama, tm.stok, st.nama, fj.FMI, fj.SMI, 0, 0
FROM tempBarang tm INNER JOIN m_barang br on tm.kode = br.kd_barang
INNER JOIN m_barang_satuan bs ON tm.kode = bs.kd_barang
INNER JOIN m_satuan st ON bs.kd_satuan = st.kd_satuan
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mrk ON br.kd_merk = mrk.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
INNER JOIN res fj ON fj.kode = tm.kode
WHERE bs.jumlah = 1;

UPDATE tempFMIStok
SET FMIKosong = 1 
WHERE stok<= 0 AND FMI=1;


UPDATE tempFMIStok
SET SMIKosong = 1 
WHERE stok<= 0 AND SMI=1;

END


//xyvdelimiter //
DROP PROCEDURE IF EXISTS mon_GetPembelianPrediksi;
CREATE PROCEDURE mon_GetPembelianPrediksi(IN `inDIVUTAMA` VARCHAR ( 20 ),IN `inDIVEXP` VARCHAR ( 20 ),IN `inSUPP` VARCHAR ( 20 ),IN `inPERIODE` INT ( 5 ),IN `inSAMPLING` INT ( 5 ),IN `inTGL` datetime)

BEGIN
DROP TABLE IF EXISTS hasil;
DROP TABLE IF EXISTS hasilMonGStok;
CREATE TEMPORARY TABLE hasilMonGStok (
kd_div VARCHAR ( 20 ),
divisi VARCHAR ( 20 ),
kdbarang VARCHAR ( 20 ),
barang VARCHAR ( 20 ),
stokakhir FLOAT ( 15, 2 ),
stok_akhir FLOAT ( 15, 2 ) 
);
CREATE TEMPORARY TABLE hasil (
kd_barang VARCHAR ( 20 ),
barang VARCHAR ( 50 ),
barang_baru INT ( 1 ),
avg_harian FLOAT ( 15, 2 ),
stok FLOAT ( 15, 2 ),
expired FLOAT ( 15, 2 ),
jumlah FLOAT ( 15, 2 ),
qty FLOAT ( 15, 2 ),
kd_satuan VARCHAR ( 20 ),
satuan VARCHAR ( 20 ),
harga DOUBLE ( 15, 2 ),
diskon VARCHAR ( 20 ),
subtotal DOUBLE ( 15, 2 ) 
);
INSERT INTO hasilMonGStok SELECT
* 
FROM
mon_g_stok_barang_per_divisi;

INSERT INTO hasil SELECT
gtt.kdbarang,
gtt.barang,
(
CASE				
WHEN (
SELECT
COUNT( t_pembelian.no_transaksi ) 
FROM
t_pembelian
INNER JOIN t_pembelian_detail ON t_pembelian.no_transaksi = t_pembelian_detail.no_transaksi
INNER JOIN hasilMonGStok ON hasilMonGStok.kdbarang=t_pembelian_detail.kd_barang				
) = 0 THEN
1 ELSE 0 
END 
) AS barang_baru,
(
CASE						
WHEN ( SELECT SUM( stokakhir ) FROM hasilMonGStok ) = 0 THEN
ROUND(
IFNULL(
(
SELECT
SUM( m_barang_satuan.jumlah * t_penjualan_detail.qty ) / ( 7 * 3 ) 
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang 
AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
INNER JOIN hasilMonGStok AS lfj ON lfj.kdbarang = t_penjualan_detail.kd_barang 
WHERE
kd_divisi <> 'DAA001' 									
AND DATE( tanggal ) >= (
SELECT
TIMESTAMPADD ( DAY, (7 * 3) *- 1, MAX(tanggal) ) 
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN hasilMonGStok AS lfg ON lfg.kdbarang = t_penjualan_detail.kd_barang 
WHERE
kd_divisi <> 'DAA001' 										
) 
),
0 
),
2 
) ELSE ROUND(
IFNULL(
(
SELECT
SUM( m_barang_satuan.jumlah * t_penjualan_detail.qty ) / (7 * 3) 
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang 
AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
INNER JOIN hasilMonGStok AS lfh ON lfh.kdbarang = t_penjualan_detail.kd_barang 
WHERE
kd_divisi <> 'DAA001' 									
AND DATE( tanggal ) >= ( SELECT TIMESTAMPADD( DAY, (7 * 3 ) *- 1, '2019-01-30' ) ) 
),
0 
),
2 
) 
END 
) AS avg_harian,
( SELECT SUM( stokakhir ) FROM hasilMonGStok )as stok,
0,
0,
0,
m_barang_satuan.kd_satuan,
m_satuan.nama,
IFNULL(
(
SELECT
bd.harga_beli / bs.jumlah 
FROM
t_pembelian_detail bd
INNER JOIN t_pembelian bl ON bd.no_transaksi = bl.no_transaksi
INNER JOIN m_barang_satuan bs ON bd.kd_barang = bs.kd_barang 
AND bd.kd_satuan = bs.kd_satuan
INNER JOIN hasilMonGStok AS lfq ON lfq.kdbarang = bd.kd_barang 
WHERE
bd.harga_beli <> 0 
ORDER BY
bl.tanggal DESC 
LIMIT 1 
),
0 
)as harga,
'0',
0 
FROM
m_barang
INNER JOIN m_kategori ON m_barang.kd_kategori = m_kategori.kd_kategori
INNER JOIN hasilMonGStok gtt ON m_barang.kd_barang = gtt.kdbarang
INNER JOIN m_barang_satuan ON m_barang.kd_barang = m_barang_satuan.kd_barang
INNER JOIN m_satuan ON m_barang_satuan.kd_satuan = m_satuan.kd_satuan
INNER JOIN m_barang_supplier ON gtt.kdbarang = m_barang_supplier.kd_barang 
WHERE
m_barang.STATUS <> 0 
AND m_barang_satuan.jumlah = 1 
AND m_barang_satuan.STATUS <> 0 
AND gtt.kd_div <> 'DAA001' 
GROUP BY
gtt.kdbarang,
gtt.barang,
m_barang.tanggal_daftar,
m_barang_satuan.kd_satuan,
m_satuan.nama;
UPDATE hasilMonGStok bb
INNER JOIN hasil res ON bb.kdbarang = res.kd_barang 
SET res.expired = bb.stokakhir 
WHERE
bb.kd_div = 'DAA001';
SELECT * FROM hasil;
END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_cek_stok_pertransaksi;
CREATE PROCEDURE p_cek_stok_pertransaksi(IN INkd_barang VARCHAR(30))

BEGIN
SELECT * FROM
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=beli_dt.kd_barang AND kd_satuan=beli_dt.kd_satuan)) AS jumlah_beli,count(beli.no_transaksi) AS cnt_pembelian FROM t_pembelian beli INNER JOIN t_pembelian_detail beli_dt ON beli.no_transaksi=beli_dt.no_transaksi
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi) beli
INNER JOIN
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=jual_dt.kd_barang AND kd_satuan=jual_dt.kd_satuan)) AS jumlah_terjual,count(jual.no_transaksi) AS cnt_penjualan FROM t_penjualan jual INNER JOIN t_penjualan_detail jual_dt ON jual.no_transaksi=jual_dt.no_transaksi
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi) jual
LEFT JOIN
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=beli_dt.kd_barang AND kd_satuan=beli_dt.kd_satuan)) AS jumlah_retur_beli,count(beli.no_retur) AS cnt_pembelian_retur FROM t_pembelian_retur beli INNER JOIN t_pembelian_retur_detail beli_dt ON beli.no_retur=beli_dt.no_retur
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi) beli_retur
ON beli.kd_barang=beli_retur.kd_barang
left JOIN
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=jual_dt.kd_barang AND kd_satuan=jual_dt.kd_satuan)) AS jumlah_retur_jual,count(jual.no_retur) AS cnt_penjualan_retur FROM t_penjualan_retur jual INNER JOIN t_penjualan_retur_detail jual_dt ON jual.no_retur=jual_dt.no_retur
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi) jual_retur
ON jual_retur.kd_barang=jual.kd_barang
left JOIN
(SELECT kd_barang,(SELECT nama FROM m_satuan INNER JOIN m_barang_satuan ON m_barang_satuan.kd_satuan=m_satuan.kd_satuan WHERE kd_barang=INkd_barang and jumlah=1) as satuan_terkecil,SUM(qty*(SELECT jumlah FROM m_barang_satuan WHERE kd_barang=mutasi_dt.kd_barang AND kd_satuan=mutasi_dt.kd_satuan)) AS jumlah_mutasi,count(mutasi.no_transaksi) AS cnt_mutasi FROM t_mutasi_stok mutasi INNER JOIN t_mutasi_stok_detail mutasi_dt ON mutasi.no_transaksi=mutasi_dt.no_transaksi
WHERE kd_barang=INkd_barang
GROUP BY kd_divisi_asal) mutasi
ON jual_retur.kd_barang=mutasi.kd_barang
LEFT JOIN
(SELECT kd_barang,SUM(qty) as qty_opname FROM t_opname_stok WHERE kd_barang=INkd_barang GROUP BY kd_barang) opname
ON opname.kd_barang=beli.kd_barang
;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_for_mutasi_barang;
CREATE PROCEDURE p_for_mutasi_barang(IN `divisi` varchar(6),IN `periode` int(11))

BEGIN
SELECT m_barang.kd_barang,m_barang.nama,info_avg.kd_divisi,stok,avg,ROUND(avg*periode+0.5) as recommended,
CASE
WHEN (ROUND(avg*periode)-stok)<0 THEN 0
ELSE (ROUND(avg*periode)-stok)
END as qty_mutasi
FROM
(SELECT kd_barang,kd_divisi,stok,
CASE 
WHEN g_stok_akhir.stok = 0 THEN
ROUND( IFNULL(
(SELECT SUM(m_barang_satuan.jumlah * t_penjualan_detail.qty) 
/ CAST(ans_item.periode * ans_item.sampling AS INT)
FROM t_penjualan INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi INNER JOIN 
m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
INNER JOIN ans_item
INNER JOIN ans_item_stored_divisi a
WHERE kd_divisi <> a.div_expired AND t_penjualan_detail.kd_barang = g_stok_akhir.kd_barang
AND tanggal >= 				
(SELECT DATE_ADD(MAX(tanggal), INTERVAL (CAST(ans_item.periode * ans_item.sampling AS INT) *-1) day) 
FROM t_penjualan INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi 
INNER JOIN ans_item
INNER JOIN ans_item_stored_divisi a
WHERE kd_divisi <> a.div_expired AND t_penjualan_detail.kd_barang = g_stok_akhir.kd_barang)
GROUP BY t_penjualan_detail.kd_barang
), 0), 2)			
ELSE
ROUND( IFNULL(
(SELECT SUM(m_barang_satuan.jumlah * t_penjualan_detail.qty) 
/ CAST(ans_item.periode * ans_item.sampling AS INT)
FROM t_penjualan INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi INNER JOIN 
m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang AND m_barang_satuan.kd_satuan = t_penjualan_detail.kd_satuan
INNER JOIN ans_item
INNER JOIN ans_item_stored_divisi a
WHERE kd_divisi <> a.div_expired AND t_penjualan_detail.kd_barang = g_stok_akhir.kd_barang
AND tanggal >= (SELECT DATE_ADD(CURDATE(), INTERVAL (CAST(ans_item.periode * ans_item.sampling AS INT) *-1) day) )
GROUP BY t_penjualan_detail.kd_barang
), 0), 2)
END as avg
FROM
g_stok_akhir) info_avg
INNER JOIN m_barang ON m_barang.kd_barang=info_avg.kd_barang
INNER JOIN m_barang_divisi ON info_avg.kd_barang=m_barang_divisi.kd_barang AND m_barang_divisi.kd_divisi= info_avg.kd_divisi
INNER JOIN m_kategori ON m_barang.kd_kategori=m_kategori.kd_kategori
WHERE m_barang.`status`<>0 AND m_kategori.status=1
AND  info_avg.kd_divisi=divisi;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_prediksi_beli_order_notif_nonschedule;
CREATE PROCEDURE p_prediksi_beli_order_notif_nonschedule(IN INkd_divisi_tujuan CHAR (6),IN INsampling INT,IN INperiode INT)

BEGIN
SELECT a.*,stok, round(avg_satuan_terkecil*INperiode) as need,round(avg_satuan_terkecil*INperiode)-stok as qty,harga_beli,supplier FROM
(
SELECT 
avg_tmp.kd_barang as kd_barang,
INkd_divisi_tujuan as kd_divisi,
(select kd_satuan FROM m_barang_satuan WHERE kd_barang=avg_tmp.kd_barang AND jumlah=1) as satuan_terkecil,
sum(avg_tmp.qty*jumlah) as avg_satuan_terkecil
FROM
(SELECT
kd_barang,kd_satuan,ROUND(AVG(qty),2) as qty
FROM t_penjualan jual INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi= dt_jual.no_transaksi
WHERE date(tanggal)<= DATE_ADD(DATE(NOW()),INTERVAL -1 DAY)  AND DATE(tanggal)>= DATE_ADD(DATE(NOW()),INTERVAL (-1*(INsampling*INperiode))-1 DAY)
AND kd_divisi=INkd_divisi_tujuan
GROUP BY kd_barang,kd_satuan) avg_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=avg_tmp.kd_barang AND m_barang_satuan.kd_satuan=avg_tmp.kd_satuan
GROUP BY kd_barang
UNION 
SELECT
brg_divisi.kd_barang,
brg_divisi.kd_divisi,
(
SELECT
kd_satuan
FROM
m_barang_satuan
WHERE
kd_barang = brg_divisi.kd_barang
AND jumlah = 1
) AS kd_satuan,
IFNULL(max_tr.avg_item, 0) AS avg_item
FROM
(
SELECT
kd_barang,
kd_divisi
FROM
m_barang_divisi
WHERE
`status` <> 0
AND kd_divisi = INkd_divisi_tujuan
AND kd_barang NOT IN (
SELECT
kd_barang
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi = dt_jual.no_transaksi
WHERE
kd_divisi = INkd_divisi_tujuan
AND date(tanggal) <= DATE(NOW())
AND DATE(tanggal) > DATE_ADD(date(NOW()), INTERVAL - 30 DAY)
)
) brg_divisi
LEFT JOIN (
SELECT
t_penjualan_detail.kd_barang,
t_penjualan.kd_divisi,
ROUND(SUM(qty * jumlah) / 30, 2) AS avg_item
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN (
SELECT
MAX(date(tanggal)) last_sale,
kd_barang,
kd_divisi
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
GROUP BY
kd_divisi,
kd_barang
) max_tgl ON t_penjualan_detail.kd_barang = max_tgl.kd_barang
AND t_penjualan.kd_divisi = max_tgl.kd_divisi
INNER JOIN m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang
AND t_penjualan_detail.kd_satuan = m_barang_satuan.kd_satuan
WHERE
DATE(t_penjualan.tanggal) >= DATE_ADD(
max_tgl.last_sale,
INTERVAL - 30 DAY
)
AND DATE(t_penjualan.tanggal) < max_tgl.last_sale
AND t_penjualan.kd_divisi = INkd_divisi_tujuan
GROUP BY
kd_barang,
kd_divisi
) max_tr ON max_tr.kd_barang = brg_divisi.kd_barang
AND max_tr.kd_divisi = brg_divisi.kd_divisi
WHERE brg_divisi.kd_barang NOT IN(
SELECT 
avg_tmp.kd_barang
FROM
(SELECT
kd_barang,kd_satuan,ROUND(AVG(qty),2) as qty
FROM t_penjualan jual INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi= dt_jual.no_transaksi
WHERE date(tanggal)<= DATE_ADD(DATE(NOW()),INTERVAL -1 DAY)  AND DATE(tanggal)>= DATE_ADD(DATE(NOW()),INTERVAL -31 DAY)
AND kd_divisi=INkd_divisi_tujuan
GROUP BY kd_barang,kd_satuan) avg_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=avg_tmp.kd_barang AND m_barang_satuan.kd_satuan=avg_tmp.kd_satuan
GROUP BY kd_barang)
) a
INNER JOIN
(SELECT t_pembelian_detail.kd_barang,t_pembelian.kd_supplier,harga_brg_min.harga_beli,nama as supplier FROM 
m_supplier INNER JOIN
t_pembelian inner join t_pembelian_detail ON t_pembelian.no_transaksi=t_pembelian_detail.no_transaksi
ON t_pembelian.kd_supplier=m_supplier.kd_supplier
INNER JOIN
(SELECT kd_barang,MIN(harga_beli) as harga_beli FROM 
(SELECT dt_sup.kd_barang,dt_sup.kd_supplier,harga_beli FROM 
(SELECT m_supplier_jadwal.kd_supplier,kd_barang FROM m_barang_supplier INNER JOIN m_supplier_jadwal ON m_supplier_jadwal.kd_supplier=m_barang_supplier.kd_supplier
WHERE visit_time=0) dt_sup
INNER JOIN
(SELECT kd_barang, kd_supplier,harga_beli
FROM t_pembelian INNER JOIN t_pembelian_detail
ON t_pembelian.no_transaksi=t_pembelian_detail.no_transaksi
) dt_beli
ON dt_sup.kd_supplier=dt_beli.kd_supplier AND dt_beli.kd_barang=dt_sup.kd_barang) beli_barang
GROUP BY kd_barang) harga_brg_min
ON harga_brg_min.kd_barang=t_pembelian_detail.kd_barang AND t_pembelian_detail.harga_beli=harga_brg_min.harga_beli
GROUP BY t_pembelian_detail.kd_barang,t_pembelian.kd_supplier,harga_brg_min.harga_beli) min_harga_supplier
ON min_harga_supplier.kd_barang=a.kd_barang

LEFT JOIN g_stok_akhir ON g_stok_akhir.kd_barang=a.kd_barang AND g_stok_akhir.kd_divisi=a.kd_divisi
WHERE ROUND(avg_satuan_terkecil*INperiode)-stok>1
;


END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_prediksi_mutasi;
CREATE PROCEDURE p_prediksi_mutasi(IN INkd_divisi_tujuan CHAR (6),IN INsampling INT,IN INperiode INT)

BEGIN
SELECT a.*,stok, round(avg_satuan_terkecil*INperiode) as need,round(avg_satuan_terkecil*INperiode)-stok as qty_mutasi FROM
(
SELECT 
avg_tmp.kd_barang as kd_barang,
INkd_divisi_tujuan as kd_divisi,
(select kd_satuan FROM m_barang_satuan WHERE kd_barang=avg_tmp.kd_barang AND jumlah=1) as satuan_terkecil,
sum(avg_tmp.qty*jumlah) as avg_satuan_terkecil
FROM
(SELECT
kd_barang,kd_satuan,ROUND(AVG(qty),2) as qty
FROM t_penjualan jual INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi= dt_jual.no_transaksi
WHERE date(tanggal)<= DATE_ADD(DATE(NOW()),INTERVAL -1 DAY)  AND DATE(tanggal)>= DATE_ADD(DATE(NOW()),INTERVAL (-1*(INsampling*INperiode))-1 DAY)
AND kd_divisi=INkd_divisi_tujuan
GROUP BY kd_barang,kd_satuan) avg_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=avg_tmp.kd_barang AND m_barang_satuan.kd_satuan=avg_tmp.kd_satuan
GROUP BY kd_barang
UNION 
SELECT
brg_divisi.kd_barang,
brg_divisi.kd_divisi,
(
SELECT
kd_satuan
FROM
m_barang_satuan
WHERE
kd_barang = brg_divisi.kd_barang
AND jumlah = 1
) AS kd_satuan,
IFNULL(max_tr.avg_item, 0) AS avg_item
FROM
(
SELECT
kd_barang,
kd_divisi
FROM
m_barang_divisi
WHERE
`status` <> 0
AND kd_divisi = INkd_divisi_tujuan
AND kd_barang NOT IN (
SELECT
kd_barang
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi = dt_jual.no_transaksi
WHERE
kd_divisi = INkd_divisi_tujuan
AND date(tanggal) <= DATE(NOW())
AND DATE(tanggal) > DATE_ADD(date(NOW()), INTERVAL - 30 DAY)
)
) brg_divisi

LEFT JOIN (
SELECT
t_penjualan_detail.kd_barang,
t_penjualan.kd_divisi,
ROUND(SUM(qty * jumlah) / 30, 2) AS avg_item
FROM
t_penjualan
INNER JOIN t_penjualan_detail ON t_penjualan.no_transaksi = t_penjualan_detail.no_transaksi
INNER JOIN (
SELECT
MAX(date(tanggal)) last_sale,
kd_barang,
kd_divisi
FROM
t_penjualan jual
INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
GROUP BY
kd_divisi,
kd_barang
) max_tgl ON t_penjualan_detail.kd_barang = max_tgl.kd_barang
AND t_penjualan.kd_divisi = max_tgl.kd_divisi
INNER JOIN m_barang_satuan ON t_penjualan_detail.kd_barang = m_barang_satuan.kd_barang
AND t_penjualan_detail.kd_satuan = m_barang_satuan.kd_satuan
WHERE
DATE(t_penjualan.tanggal) >= DATE_ADD(
max_tgl.last_sale,
INTERVAL - 30 DAY
)
AND DATE(t_penjualan.tanggal) < max_tgl.last_sale
AND t_penjualan.kd_divisi = INkd_divisi_tujuan
GROUP BY
kd_barang,
kd_divisi
) max_tr ON max_tr.kd_barang = brg_divisi.kd_barang
AND max_tr.kd_divisi = brg_divisi.kd_divisi
WHERE brg_divisi.kd_barang NOT IN(
SELECT 
avg_tmp.kd_barang
FROM
(SELECT
kd_barang,kd_satuan,ROUND(AVG(qty),2) as qty
FROM t_penjualan jual INNER JOIN t_penjualan_detail dt_jual ON jual.no_transaksi= dt_jual.no_transaksi
WHERE date(tanggal)<= DATE_ADD(DATE(NOW()),INTERVAL -1 DAY)  AND DATE(tanggal)>= DATE_ADD(DATE(NOW()),INTERVAL -31 DAY)
AND kd_divisi=INkd_divisi_tujuan
GROUP BY kd_barang,kd_satuan) avg_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=avg_tmp.kd_barang AND m_barang_satuan.kd_satuan=avg_tmp.kd_satuan
GROUP BY kd_barang)
) a
INNER JOIN  m_barang ON m_barang.kd_barang=a.kd_barang
INNER JOIN (SELECT kd_kategori FROM m_kategori WHERE `status` <>0 AND `status`<>2) stok_item
ON m_barang.kd_kategori=stok_item.kd_kategori
LEFT JOIN g_stok_akhir ON g_stok_akhir.kd_barang=a.kd_barang AND g_stok_akhir.kd_divisi=a.kd_divisi
WHERE ROUND(avg_satuan_terkecil*INperiode)-stok>1
;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS send_opname_data;
CREATE PROCEDURE send_opname_data(IN kd_divisi CHAR (6),IN dt VARCHAR (10))

BEGIN
SELECT
bdiv.kd_barang,
m_barang.nama AS Barang,
CASE
WHEN opname.kd_satuan IS NOT NULL THEN
'1'
ELSE
'0'
END AS status_op,
satuan.kd_satuan,
m_satuan.nama AS Satuan,
opname.qty AS jumlah,
opname.tanggal,
opname.date_add,
opname.date_modif
FROM
m_barang
INNER JOIN m_barang_divisi bdiv ON m_barang.kd_barang = bdiv.kd_barang
INNER JOIN (SELECT kd_satuan,kd_barang FROM m_barang_satuan WHERE jumlah=1) satuan ON m_barang.kd_barang=satuan.kd_barang
INNER JOIN m_satuan ON satuan.kd_satuan=m_satuan.kd_satuan
LEFT JOIN (
SELECT
*
FROM
(
SELECT
kd_barang,
m_satuan.kd_satuan,
qty,
tanggal,
t_opname_stok.date_add AS date_add,
t_opname_stok.date_modif AS date_modif
FROM
t_opname_stok
INNER JOIN m_satuan ON t_opname_stok.kd_satuan = m_satuan.kd_satuan
UNION
SELECT
m_barang_satuan.kd_barang,
m_barang_satuan.kd_satuan,
qty,
t_opname_stok_tmp.date_add AS tanggal,
t_opname_stok_tmp.date_add AS date_add,
t_opname_stok_tmp.date_modif AS date_modif
FROM
t_opname_stok_tmp
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang=t_opname_stok_tmp.kd_barang
AND jumlah=1
INNER JOIN m_satuan ON m_satuan.kd_satuan=m_barang_satuan.kd_satuan
) op
WHERE
(
DATE(date_add) >= dt
OR DATE(date_modif) >= dt
OR DATE(tanggal) >= dt
)
) opname ON opname.kd_barang = bdiv.kd_barang
WHERE
bdiv.kd_divisi = kd_divisi;


END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_set_mutasi_order;
CREATE PROCEDURE p_set_mutasi_order(IN INdiv_sumber CHAR (6),IN INdiv_tujuan CHAR (6))

BEGIN
SELECT
a.kd_barang,
kd_satuan,
CASE
WHEN ROUND(a.avg_harian * 7) - a.stok_tujuan < 0 THEN
0
ELSE
ROUND(a.avg_harian * 7) - a.stok_tujuan
END AS qty_mutasi,
'ONLINE' as divisi_id
FROM
v_spk_mutasi_barang_baru a
INNER JOIN (
SELECT
kd_barang,
stok
FROM
g_stok_akhir
WHERE
kd_divisi = INdiv_sumber
) c ON a.kd_barang = c.kd_barang
WHERE
a.kd_divisi = INdiv_tujuan
AND c.stok <> 0
AND ROUND(a.avg_harian * 7) <> 0
AND ROUND(a.avg_harian * 7) <= c.stok
AND k_status = 1;
END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_spk_item_promo;
CREATE PROCEDURE p_spk_item_promo()

BEGIN
TRUNCATE TABLE x_sp_barang_promo_tmp;
INSERT INTO x_sp_barang_promo_tmp(kd_barang,kd_divisi,kd_satuan,nama,stok,keterangan,harga_beli,harga_jual)
SELECT nmi_list.kode,nmi_list.divisi,kd_satuan,nama,stok,keterangan,harga_beli,harga_jual FROM
(SELECT kd_barang,kd_satuan,harga_jual FROM m_barang_satuan WHERE jumlah=1) min_st
INNER JOIN
(SELECT nmi_item.*,harga_beli_bersih.nama,harga_beli_bersih.harga_beli FROM
(SELECT kode,divisi,MAX(keterangan) as keterangan,stok FROM
(SELECT nmi1.*,stok FROM 
(SELECT kode,divisi,'NMI 3 MONTH (Disc. 25%)' as keterangan FROM x_fmi_smi WHERE awal >=
CONCAT(CASE WHEN MONTH(NOW())>3 THEN YEAR(NOW()) ELSE YEAR(NOW())-1 END,"-",
CASE 
WHEN MONTH(NOW())>3 THEN MONTH(NOW())
ELSE
MONTH(NOW())+12-3
END,'-01')
AND nomor=999999999
AND DATE(f_GetLastPurchase(kode)) < akhir
GROUP BY kode,divisi,nomor HAVING COUNT(*)=3) nmi1
INNER JOIN g_stok_akhir ON g_stok_akhir.kd_barang=nmi1.kode AND g_stok_akhir.kd_divisi=nmi1.divisi
WHERE stok>0
UNION
SELECT nmi1.*,stok FROM 
(SELECT kode,divisi,'NMI 4 MONTH (Disc. 50%)' as keterangan FROM x_fmi_smi WHERE awal >=
CONCAT(CASE WHEN MONTH(NOW())>4 THEN YEAR(NOW()) ELSE YEAR(NOW())-1 END,"-",
CASE 
WHEN MONTH(NOW())>4 THEN MONTH(NOW())
ELSE
MONTH(NOW())+12-4
END,'-01')
AND nomor=999999999
AND DATE(f_GetLastPurchase(kode)) < akhir
GROUP BY kode,divisi,nomor HAVING COUNT(*)=4) nmi1
INNER JOIN g_stok_akhir ON g_stok_akhir.kd_barang=nmi1.kode AND g_stok_akhir.kd_divisi=nmi1.divisi
WHERE stok>0
UNION
SELECT nmi1.*,stok FROM 
(SELECT kode,divisi,'NMI 5 MONTH (Disc. 75%)' as keterangan FROM x_fmi_smi WHERE awal >=
CONCAT(CASE WHEN MONTH(NOW())>5 THEN YEAR(NOW()) ELSE YEAR(NOW())-1 END,"-",
CASE 
WHEN MONTH(NOW())>5 THEN MONTH(NOW())
ELSE
MONTH(NOW())+12-5
END,'-01')
AND nomor=999999999
AND DATE(f_GetLastPurchase(kode)) < akhir
GROUP BY kode,divisi,nomor HAVING COUNT(*)=5) nmi1
INNER JOIN g_stok_akhir ON g_stok_akhir.kd_barang=nmi1.kode AND g_stok_akhir.kd_divisi=nmi1.divisi
WHERE stok>0
UNION
SELECT nmi1.*,stok FROM 
(SELECT kode,divisi,'NMI 6 MONTH (Retur)' as keterangan FROM x_fmi_smi WHERE awal >=
CONCAT(CASE WHEN MONTH(NOW())>5 THEN YEAR(NOW()) ELSE YEAR(NOW())-1 END,"-",
CASE 
WHEN MONTH(NOW())>6 THEN MONTH(NOW())
ELSE
MONTH(NOW())+12-6
END,'-01')
AND nomor=999999999
AND DATE(f_GetLastPurchase(kode)) < akhir
GROUP BY kode,divisi,nomor HAVING COUNT(*)=6) nmi1
INNER JOIN g_stok_akhir ON g_stok_akhir.kd_barang=nmi1.kode AND g_stok_akhir.kd_divisi=nmi1.divisi
WHERE stok>0) intersect_item
GROUP BY kode,divisi,stok) nmi_item
INNER JOIN
(SELECT
m_barang.kd_barang,nama,IFNULL(harga_beli_bersih_tmp.harga_beli,0) as harga_beli
FROM
(
SELECT
last_buy.kd_barang,
CASE
WHEN jumlah <> 1 THEN
GetHargaBersih (
GetHargaBersih (
t_pembelian_detail.harga_beli / jumlah,
t_pembelian_detail.diskon1,
t_pembelian_detail.diskon2,
t_pembelian_detail.diskon3,
t_pembelian_detail.diskon4,
0,
0
),
t_pembelian.diskon1,
t_pembelian.diskon2,
t_pembelian.diskon3,
t_pembelian.diskon4,
pajak,
ppnbm
)
ELSE
GetHargaBersih (
GetHargaBersih (
t_pembelian_detail.harga_beli,
t_pembelian_detail.diskon1,
t_pembelian_detail.diskon2,
t_pembelian_detail.diskon3,
t_pembelian_detail.diskon4,
0,
0
),
t_pembelian.diskon1,
t_pembelian.diskon2,
t_pembelian.diskon3,
t_pembelian.diskon4,
pajak,
ppnbm
)
END AS harga_beli
FROM
t_pembelian
INNER JOIN t_pembelian_detail ON t_pembelian.no_transaksi = t_pembelian_detail.no_transaksi
INNER JOIN (
SELECT
kd_barang,
MAX(tanggal_server) date_max
FROM
t_pembelian beli
INNER JOIN t_pembelian_detail bl_dtl ON beli.no_transaksi = bl_dtl.no_transaksi
GROUP BY
kd_barang
) last_buy ON last_buy.kd_barang = t_pembelian_detail.kd_barang
AND last_buy.date_max = t_pembelian.tanggal_server
INNER JOIN m_barang_satuan ON m_barang_satuan.kd_barang = t_pembelian_detail.kd_barang
AND m_barang_satuan.kd_satuan = t_pembelian_detail.kd_satuan
WHERE
jenis <> 0
) harga_beli_bersih_tmp
RIGHT JOIN m_barang ON m_barang.kd_barang=harga_beli_bersih_tmp.kd_barang
)
harga_beli_bersih
on nmi_item.kode=harga_beli_bersih.kd_barang) nmi_list
ON min_st.kd_barang=nmi_list.kode;
END




//xyvdelimiter //
DROP PROCEDURE IF EXISTS p_supplier_data;
CREATE PROCEDURE p_supplier_data(IN INkd_supplier CHAR (6))

BEGIN
SELECT sup_data.*,cnt_brg_sup.jml_barang,max_item_sup.item,max_item_sup.avg_item,IFNULL(htg_sup.sisa_cicilan,0) AS sisa_hutang FROM
(SELECT kd_supplier ,COUNT(*) as jml_barang FROM m_barang_supplier WHERE kd_supplier=INkd_supplier AND `status`<>0 GROUP BY kd_supplier) cnt_brg_sup
INNER JOIN
(SELECT m_supplier.kd_supplier,nama,alamat,email,kontak,hp,visit_time,lead_time,hari FROM m_supplier
INNER JOIN m_supplier_jadwal ON m_supplier.kd_supplier=m_supplier_jadwal.kd_supplier WHERE m_supplier.kd_supplier=INkd_supplier
AND m_supplier.jenis<>0
)sup_data
ON sup_data.kd_supplier=cnt_brg_sup.kd_supplier
INNER JOIN
(SELECT kd_supplier,GROUP_CONCAT(nama SEPARATOR ';_;') as item, GROUP_CONCAT(avg SEPARATOR ';_;') as avg_item FROM
(SELECT kd_supplier,m_barang.nama,avg FROM x_pembelian_order_tmp order_tmp INNER JOIN m_barang ON m_barang.kd_barang=order_tmp.kd_barang 
where kd_supplier=INkd_supplier ORDER BY avg DESC LIMIT 3) avg_max_sup
) max_item_sup
ON max_item_sup.kd_supplier=sup_data.kd_supplier
LEFT JOIN
(SELECT kd_supplier,SUM(sisa_cicilan) sisa_cicilan FROM v_hutang_pembelian WHERE kd_supplier=INkd_supplier GROUP BY kd_supplier) htg_sup
ON htg_sup.kd_supplier=max_item_sup.kd_supplier


;
END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS proc_preprare_order;
CREATE PROCEDURE proc_preprare_order()

BEGIN
TRUNCATE TABLE x_pembelian_order_tmp;
INSERT INTO x_pembelian_order_tmp SELECT *,NOW() FROM v_spk_pembelian_order;
END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS proc_mon_laba_rugi;
CREATE PROCEDURE proc_mon_laba_rugi(IN `awal` datetime,IN `akhir` datetime)

BEGIN
	DECLARE persediaan_awal decimal;
	DECLARE pembelian decimal;
	DECLARE retur_pembelian decimal;
	DECLARE siap_dijual decimal;
	DECLARE penjualan_bruto decimal;
	DECLARE penjualan_netto DECIMAL;
	DECLARE potongan decimal;
	DECLARE pajak decimal;
	DECLARE retur_penjualan decimal;
	DECLARE penjualan_tunai decimal;
	DECLARE penjualan_kredit decimal;
	DECLARE persediaan_akhir decimal;
	DECLARE harga_pokok_penjualan decimal;
	DECLARE rugi_laba_penjualan decimal;
	DECLARE rasio_kontribusi FLOAT;
	DECLARE biaya decimal;
	DECLARE pendapatan decimal;
	DECLARE tagihan_piutang decimal;
	DECLARE penjualan_jasa decimal;
	DECLARE persewaan decimal;
	DECLARE pendapatan_surcharge decimal;
	DECLARE rugi_laba_bersih decimal;
	DECLARE rasio_kontribusi_bersih FLOAT;
	DECLARE awal1 DATETIME;	
	DECLARE awal2 DATETIME;
	DROP TEMPORARY TABLE IF EXISTS result_table;
	CREATE TEMPORARY TABLE result_table(Keterangan VARCHAR(50),Nominal DECIMAL);
	SET persediaan_awal = 0;
	SET pembelian = 0;
	SET retur_pembelian = 0;
	
	SET siap_dijual = 0;
	SET penjualan_bruto = 0;
	SET penjualan_netto = 0;
	SET potongan = 0;
	SET pajak = 0;
	SET retur_penjualan = 0;
	
	SET penjualan_tunai = 0;
	SET penjualan_kredit = 0;
	SET persediaan_akhir = 0; 
	SET harga_pokok_penjualan = 0;
	SET rugi_laba_penjualan = 0;
	SET rasio_kontribusi = 0;
	
	SET biaya = 0; 
	SET pendapatan = 0;
	SET tagihan_piutang = 0;
	SET penjualan_jasa = 0;
	SET persewaan = 0;
	SET pendapatan_surcharge = 0;
	
	SET rugi_laba_bersih = 0;
	SET rasio_kontribusi_bersih = 0;
	
	SET awal1 = awal;
	IF awal1 < GetTanggalTerakhirTutupBuku() THEN
	SET awal1 = DATE_ADD(GetTanggalTerakhirTutupBuku(),INTERVAL 1 DAY);
	END IF;
	
	SET awal2 = DATE_ADD(awal1,INTERVAL -1 DAY);

	
	SELECT SUM(total_bersih)
	INTO pembelian

	FROM x_total_pembelian_bersih
	WHERE DATE(tanggal_tr) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Pembelian', pembelian;

	SELECT  IFNULL(SUM(qty * harga), 0)
	INTO retur_pembelian
	FROM t_pembelian_retur INNER JOIN t_pembelian_retur_detail ON
		t_pembelian_retur_detail.no_retur = t_pembelian_retur.no_retur
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Retur Pembelian', retur_pembelian;
	
	SET  siap_dijual = persediaan_awal + pembelian - retur_pembelian;
	
	INSERT INTO result_table
	SELECT 'Stok Yang Tersedia', siap_dijual;
	
	SELECT SUM(qty * harga_jual),
		SUM((dtl.harga_jual - (GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
      			jual.diskon3, jual.diskon4, 0, 0))) * dtl.qty),
		SUM((GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
      			jual.diskon3, jual.diskon4, 0, 0)) * dtl.qty * jual.pajak)
	INTO penjualan_bruto,potongan,pajak
	FROM t_penjualan jual INNER JOIN t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi
	WHERE DATE(jual.tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Penjualan Bruto', penjualan_bruto;
	
	SELECT potongan + SUM(diskon_uang)
	INTO potongan
	FROM t_penjualan jual 
	WHERE DATE(jual.tanggal) BETWEEN awal1 AND akhir;
	
	
	INSERT INTO result_table
	SELECT 'Potongan', potongan;
	
	INSERT INTO result_table
	SELECT 'Pajak', pajak;

	SELECT IFNULL(SUM(harga_jual * qty), 0)
	INTO retur_penjualan
	FROM t_penjualan_retur INNER JOIN t_penjualan_retur_detail ON 
		t_penjualan_retur.no_retur = t_penjualan_retur_detail.no_retur
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Retur Penjualan', retur_penjualan;
	
	SET penjualan_netto = penjualan_bruto - potongan + pajak - retur_penjualan;
	
	INSERT INTO result_table
	SELECT 'Penjualan Netto', penjualan_netto;
	
	SET harga_pokok_penjualan = siap_dijual - persediaan_akhir;
	
	INSERT INTO result_table
	SELECT 'Harga Pokok Penjualan', harga_pokok_penjualan;
	
	SET rugi_laba_penjualan = penjualan_netto - harga_pokok_penjualan;
	
	INSERT INTO result_table
	SELECT 'Rugi Laba Penjualan Barang', rugi_laba_penjualan;
	
	IF harga_pokok_penjualan = 0 THEN
		SET harga_pokok_penjualan = 1;
	END IF;
	SET rasio_kontribusi = rugi_laba_penjualan / harga_pokok_penjualan;
	
	INSERT INTO result_table
	SELECT 'Rasio Kontribusi Kotor (%)' , rasio_kontribusi* 100;

	
	SELECT IFNULL(SUM(GetTotalPenjualanJasa(t_penjualan_jasa.no_transaksi)), 0)
	INTO penjualan_jasa
	FROM t_penjualan_jasa INNER JOIN t_penjualan_jasa_detail ON  t_penjualan_jasa.no_transaksi = t_penjualan_jasa.no_transaksi INNER JOIN m_jasa ON t_penjualan_jasa_detail.kd_jasa = m_jasa.kd_jasa
		INNER JOIN m_jasa_kategori ON m_jasa.kd_jasa_kategori = m_jasa_kategori.kd_jasa_kategori
	WHERE DATE(tanggal_pesan) BETWEEN awal1 AND akhir AND m_jasa_kategori.status = 2;
	
	INSERT INTO result_table
	SELECT 'Penjualan Jasa', penjualan_jasa;
	 
	SELECT IFNULL(SUM(GetTotalPenjualanJasa(t_penjualan_jasa.no_transaksi)), 0)
	INTO persewaan
	FROM t_penjualan_jasa INNER JOIN t_penjualan_jasa_detail ON  t_penjualan_jasa.no_transaksi = t_penjualan_jasa.no_transaksi INNER JOIN m_jasa ON t_penjualan_jasa_detail.kd_jasa = m_jasa.kd_jasa
		INNER JOIN m_jasa_kategori ON m_jasa.kd_jasa_kategori = m_jasa_kategori.kd_jasa_kategori
	WHERE DATE(tanggal_pesan) BETWEEN awal1 AND akhir AND m_jasa_kategori.status = 1;
	
	INSERT INTO result_table
	SELECT 'Persewaan', persewaan;
	
	
	SELECT IFNULL(SUM(GetTotalPenjualanJasa(t_penjualan_jasa.no_transaksi) * t_penjualan_jasa.other), 0)
	INTO  pendapatan_surcharge
	FROM t_penjualan_jasa INNER JOIN t_penjualan_jasa_detail ON  t_penjualan_jasa.no_transaksi = t_penjualan_jasa.no_transaksi INNER JOIN m_jasa ON t_penjualan_jasa_detail.kd_jasa = m_jasa.kd_jasa
		INNER JOIN m_jasa_kategori ON m_jasa.kd_jasa_kategori = m_jasa_kategori.kd_jasa_kategori
	WHERE DATE(tanggal_pesan) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Pendapatan Surcharge', pendapatan_surcharge;
	
	SELECT IFNULL(SUM(nominal), 0)
	INTO biaya
	FROM t_biaya_operasional
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Biaya Operasional', biaya;
	
	SELECT IFNULL(SUM(nominal), 0)
	INTO pendapatan
	FROM t_pendapatan 
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	
	INSERT INTO result_table
	SELECT 'Pendapatan', pendapatan;
	
	SET rugi_laba_bersih = rugi_laba_penjualan - biaya + pendapatan   + penjualan_jasa + persewaan + pendapatan_surcharge;
	
	INSERT INTO result_table
	SELECT 'Rugi Laba Bersih', rugi_laba_bersih;
	
	IF harga_pokok_penjualan = 0 THEN
		SET harga_pokok_penjualan = 1;
	END IF;
	SET rasio_kontribusi_bersih = rugi_laba_bersih / harga_pokok_penjualan;
	
	INSERT INTO result_table
	SELECT 'Rasio Kontribusi Bersih (%)', rasio_kontribusi_bersih * 100;
	
	SELECT IFNULL(SUM(nominal), 0)
	INTO tagihan_piutang
	FROM t_piutang_cicilan 
	WHERE DATE(tanggal) BETWEEN awal1 AND akhir;
	INSERT INTO result_table
	SELECT 'Tagihan Piutang', tagihan_piutang;

	SELECT * FROM result_table;
END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS proc_report_penjualan;
CREATE PROCEDURE proc_report_penjualan(p_tanggal VARCHAR(10),p_kd_divisi CHAR(6))

BEGIN

SELECT t_penjualan_detail.no_transaksi,kd_divisi,(SELECT m_divisi.nama FROM m_divisi WHERE m_divisi.kd_divisi=t_penjualan.kd_divisi) as divisi,COUNT(qty) AS jumlah,
SUM(
GetHargaBersih(
GetHargaBersih(
harga_jual,
t_penjualan_detail.diskon1,
t_penjualan_detail.diskon2,
t_penjualan_detail.diskon3,
t_penjualan_detail.diskon4,
0,
0
),
t_penjualan.diskon1,
t_penjualan.diskon2,
t_penjualan.diskon3,
t_penjualan.diskon4,
pajak,
0
)
*qty)
AS subtotal,date(tanggal) as tanggal, MONTH(tanggal) AS bulan
FROM t_penjualan_detail 
INNER JOIN t_penjualan ON t_penjualan.no_transaksi=t_penjualan_detail.no_transaksi
WHERE date(tanggal)=p_tanggal AND kd_divisi=p_kd_divisi
GROUP BY t_penjualan_detail.no_transaksi,kd_divisi;
END


//xyvdelimiter //
DROP PROCEDURE IF EXISTS reupdate_m_barang;
CREATE PROCEDURE reupdate_m_barang(IN `inTGLAWAL` datetime,IN `inTGLAKHIR` datetime,IN `inDIVISI` varchar(20))
BEGIN
INSERT INTO solidtech_hm_rumak.m_jenis_bahan SELECT * FROM m_jenis_bahan WHERE kd_jenis_bahan NOT IN (SELECT kd_jenis_bahan from solidtech_hm_rumak.m_jenis_bahan);
INSERT INTO solidtech_hm_rumak.m_warna SELECT * FROM m_warna WHERE kd_warna NOT IN (SELECT kd_warna from solidtech_hm_rumak.m_warna);
INSERT INTO solidtech_hm_rumak.m_model SELECT * FROM m_model WHERE kd_model NOT IN (SELECT kd_model from solidtech_hm_rumak.m_model);
INSERT INTO solidtech_hm_rumak.m_merk SELECT * FROM m_merk WHERE kd_merk NOT IN (SELECT kd_merk from solidtech_hm_rumak.m_merk);
INSERT INTO solidtech_hm_rumak.m_kategori SELECT * FROM m_kategori WHERE kd_kategori NOT IN (SELECT kd_kategori from solidtech_hm_rumak.m_kategori);
INSERT INTO solidtech_hm_rumak.m_barang SELECT * FROM m_barang WHERE kd_barang NOT IN (SELECT kd_barang from solidtech_hm_rumak.m_barang);
INSERT INTO solidtech_hm_rumak.m_satuan SELECT * FROM m_satuan WHERE kd_satuan NOT IN (SELECT kd_satuan from solidtech_hm_rumak.m_satuan);
INSERT INTO solidtech_hm_rumak.m_barang_divisi SELECT * FROM m_barang_divisi WHERE kd_barang NOT IN (SELECT kd_barang from solidtech_hm_rumak.m_barang_divisi);
INSERT INTO solidtech_hm_rumak.m_barang_supplier(kd_barang,kd_supplier,status) SELECT kd_barang,'SAA366','1' FROM m_barang WHERE kd_barang NOT IN (SELECT kd_barang from solidtech_hm_rumak.m_barang_supplier WHERE kd_supplier='SAA366');
INSERT IGNORE INTO solidtech_hm_rumak.m_barang_satuan SELECT * FROM m_barang_satuan;

UPDATE solidtech_hm_rumak.m_barang_satuan a,
(
SELECT kd_barang,kd_satuan,harga_jual_barux-(MOD(harga_jual_barux,100))+
CASE 
WHEN MOD(harga_jual_barux,100) = 0 THEN 0 
ELSE 100
END AS harga_jual 
FROM solidtech_hm_beta.dt_kenaikan_harga_jual_rumak
) b
SET a.harga_jual=b.harga_jual
WHERE a.kd_barang=b.kd_barang AND a.kd_satuan=b.kd_satuan;
END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS select_supplier_order;
CREATE PROCEDURE select_supplier_order(IN `nama_supplier` varchar(255))


BEGIN
DECLARE kode char(6);
SELECT kd_supplier INTO kode FROM m_supplier WHERE nama=nama_supplier;
TRUNCATE table x_order_detail_temp;
INSERT INTO x_order_detail_temp 
SELECT '' as no_order,kd_barang,kd_satuan,'' as jenis,qty,harga_beli_terakhir,0,0,0,0,CURRENT_TIMESTAMP(),'',CURRENT_TIMESTAMP(),'','ONLINE'
FROM v_spk_pembelian_order
WHERE kd_supplier=kode;
SELECT * 
FROM v_spk_pembelian_order
WHERE kd_supplier=kode;

END



//xyvdelimiter //
DROP PROCEDURE IF EXISTS update_fmi_per_bulan2;
CREATE PROCEDURE update_fmi_per_bulan2(IN `inTGLAWAL` datetime,IN `inTGLAKHIR` datetime,IN `inDIVISI` varchar(20))

BEGIN

DECLARE varTotalPenjualan FLOAT(23,2);
DECLARE varKdBarang VARCHAR(100);
DECLARE varJumlah,varTotal,varSaldoTemp FLOAT;
DECLARE varNomorTemp BIGINT;
DECLARE varFMI,varSMI,selesai INT;

DECLARE cur_transaksi CURSOR FOR
SELECT rest.kdbarang, rest.qty, rest.total 
FROM rest;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET selesai = 1;

DROP TABLE IF EXISTS rest;
CREATE TEMPORARY TABLE rest(
awal DATETIME, 
akhir DATETIME, 
divisi VARCHAR(20), 
nomor BIGINT, 		
kdbarang VARCHAR(100), 		
qty FLOAT, 
total FLOAT(23,2), 
saldo FLOAT(23,2),
FMI INT, 
SMI INT
);

INSERT INTO rest
SELECT   inTGLAWAL, inTGLAKHIR, inDIVISI,  0,
dtl.kd_barang, SUM(dtl.qty * bstn.jumlah) AS Jumlah, 
SUM(GetHargaBersih(GetHargaBersih(dtl.harga_jual, dtl.diskon1, dtl.diskon2, dtl.diskon3, dtl.diskon4, 0, 0), jual.diskon1, jual.diskon2, 
jual.diskon3, jual.diskon4, jual.pajak, 0) * dtl.qty) AS total, 0, 0, 0
FROM         t_penjualan jual INNER JOIN
t_penjualan_detail dtl ON jual.no_transaksi = dtl.no_transaksi INNER JOIN
m_barang brg ON dtl.kd_barang = brg.kd_barang INNER JOIN
m_divisi dv ON jual.kd_divisi = dv.kd_divisi INNER JOIN
m_barang_satuan bstn ON dtl.kd_barang = bstn.kd_barang AND dtl.kd_satuan = bstn.kd_satuan
WHERE dtl.jenis = 1 AND dv.kd_divisi = inDIVISI AND DATE(jual.tanggal) BETWEEN inTGLAWAL AND inTGLAKHIR
GROUP BY dtl.kd_barang
ORDER BY total DESC;

SET varTotalPenjualan=(SELECT SUM(rest.total)as Xtotal FROM rest);
SET varFMI=1;
SET varSMI=0;
SET varSaldoTemp=0;
SET varNomorTemp=0;

OPEN cur_transaksi;		
myloop: LOOP
FETCH cur_transaksi INTO varKdBarang,varJumlah,varTotal;
IF selesai THEN
LEAVE myloop;
END IF;
SET varNomorTemp = varNomorTemp + 1;
SET varSaldoTemp = varSaldoTemp + varTotal;

UPDATE rest SET rest.nomor=varNomorTemp, rest.saldo=varSaldoTemp,rest.FMI=varFMI,rest.SMI=varSMI WHERE rest.kdbarang=varKdBarang;
IF varSaldoTemp>(varTotalPenjualan*0.8) THEN
SET varFMI=0;
SET varSMI=1;
END IF;		
END LOOP;
CLOSE cur_transaksi;
INSERT INTO x_fmi_smi
SELECT DATE_FORMAT(tm.awal,"%M-%Y"),tm.awal, tm.akhir, tm.divisi, 
nomor, tm.kdbarang, br.nama, mr.nama, mdl.nama, kt.nama, wrn.nama,
qty, total, saldo, FMI, SMI, bmax.qty_max, bmax.satuan_max 
FROM rest tm 
INNER JOIN m_barang br ON tm.kdbarang = br.kd_barang 
INNER JOIN m_kategori kt ON br.kd_kategori = kt.kd_kategori
INNER JOIN m_merk mr ON br.kd_merk = mr.kd_merk
INNER JOIN m_model mdl ON br.kd_model = mdl.kd_model
INNER JOIN m_warna wrn ON br.kd_warna = wrn.kd_warna
INNER JOIN
(SELECT pd.kd_barang, br.nama as barang, SUM(pd.qty * bs.jumlah) / bsmax.jumlah as qty_max,`bsmax`.`nama` AS `satuan_max`
from t_pembelian pb INNER JOIN t_pembelian_detail pd ON pb.no_transaksi = pd.no_transaksi
INNER JOIN m_barang_satuan bs ON pd.kd_barang = bs.kd_barang AND pd.kd_satuan = bs.kd_satuan
INNER JOIN m_barang br ON pd.kd_barang = br.kd_barang
INNER JOIN 
(SELECT kd_barang, MAX(jumlah)  as jumlah,`stn`.`nama` AS `nama`
FROM m_barang_satuan bsmax  INNER JOIN m_satuan stn ON bsmax.kd_satuan = stn.kd_satuan
WHERE bsmax.status <> 0 
GROUP BY kd_barang) AS bsmax 	
ON pd.kd_barang = bsmax.kd_barang  
GROUP BY pd.kd_barang, bsmax.jumlah, br.nama) AS bmax
ON bmax.kd_barang=br.kd_barang

ORDER BY nomor;
INSERT INTO x_fmi_smi
SELECT DATE_FORMAT(inTGLAWAL,'%M-%Y'),inTGLAWAL,inTGLAKHIR,a.kd_divisi,999999999,b.kd_barang,nama,'-','-','-','-',0,0,0,0,0,0,'-'
FROM m_barang_divisi a
INNER JOIN m_barang b
ON a.kd_barang= b.kd_barang
AND a.kd_barang not in(SELECT kode FROM x_fmi_smi where divisi=inDIVISI AND awal=inTGLAWAL AND akhir=inTGLAKHIR)
AND kd_divisi=inDIVISI
AND b.tanggal_daftar<=inTGLAWAL
and a.`status`<>0;


END
//